

Microchip Technology PIC PRO Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar 20 09:40:02 2018

Microchip Technology Omniscient Code Generator v1.41 (PRO mode) build 201701250102
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	stringtext,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text23,local,class=CODE,merge=1,delta=2
    26                           	psect	text26,local,class=CODE,merge=1,delta=2
    27                           	psect	text29,local,class=CODE,merge=1,delta=2
    28                           	psect	text35,local,class=CODE,merge=1,delta=2
    29                           	psect	text55,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text63,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text91,local,class=CODE,merge=1,delta=2
    34                           	psect	text92,local,class=CODE,merge=1,delta=2
    35                           	psect	text95,local,class=CODE,merge=1,delta=2
    36                           	psect	text96,local,class=CODE,merge=1,delta=2
    37                           	psect	text97,local,class=CODE,merge=1,delta=2
    38                           	psect	text124,local,class=CODE,merge=1,delta=2
    39                           	psect	text125,local,class=CODE,merge=1,delta=2
    40                           	psect	text128,local,class=CODE,merge=1,delta=2
    41                           	psect	text129,local,class=CODE,merge=1,delta=2
    42                           	psect	text130,local,class=CODE,merge=1,delta=2
    43                           	psect	pa_nodes0,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F18345 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0097                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  018E                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019D                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028E                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0297                     	;# 
   209  0298                     	;# 
   210  029F                     	;# 
   211  030C                     	;# 
   212  030D                     	;# 
   213  030E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0314                     	;# 
   219  0315                     	;# 
   220  0315                     	;# 
   221  0316                     	;# 
   222  0317                     	;# 
   223  0318                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  0394                     	;# 
   231  0395                     	;# 
   232  0396                     	;# 
   233  0397                     	;# 
   234  0398                     	;# 
   235  0399                     	;# 
   236  039A                     	;# 
   237  039C                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0411                     	;# 
   242  0411                     	;# 
   243  0412                     	;# 
   244  0413                     	;# 
   245  0414                     	;# 
   246  0415                     	;# 
   247  0416                     	;# 
   248  0417                     	;# 
   249  0418                     	;# 
   250  0418                     	;# 
   251  0419                     	;# 
   252  041A                     	;# 
   253  041B                     	;# 
   254  041C                     	;# 
   255  041D                     	;# 
   256  041E                     	;# 
   257  041F                     	;# 
   258  0498                     	;# 
   259  0498                     	;# 
   260  0499                     	;# 
   261  049A                     	;# 
   262  049B                     	;# 
   263  049B                     	;# 
   264  049C                     	;# 
   265  049D                     	;# 
   266  049E                     	;# 
   267  049F                     	;# 
   268  0617                     	;# 
   269  0618                     	;# 
   270  0619                     	;# 
   271  0619                     	;# 
   272  061A                     	;# 
   273  061B                     	;# 
   274  061C                     	;# 
   275  061C                     	;# 
   276  061F                     	;# 
   277  0691                     	;# 
   278  0692                     	;# 
   279  0693                     	;# 
   280  0694                     	;# 
   281  0695                     	;# 
   282  0696                     	;# 
   283  0697                     	;# 
   284  0698                     	;# 
   285  0699                     	;# 
   286  0711                     	;# 
   287  0712                     	;# 
   288  0713                     	;# 
   289  0714                     	;# 
   290  0715                     	;# 
   291  0716                     	;# 
   292  0717                     	;# 
   293  0718                     	;# 
   294  0719                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0892                     	;# 
   302  0892                     	;# 
   303  0892                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0894                     	;# 
   311  0894                     	;# 
   312  0894                     	;# 
   313  0895                     	;# 
   314  0895                     	;# 
   315  0895                     	;# 
   316  0896                     	;# 
   317  0896                     	;# 
   318  0896                     	;# 
   319  089B                     	;# 
   320  0911                     	;# 
   321  0912                     	;# 
   322  0913                     	;# 
   323  0914                     	;# 
   324  0915                     	;# 
   325  0916                     	;# 
   326  0918                     	;# 
   327  0919                     	;# 
   328  091A                     	;# 
   329  091B                     	;# 
   330  091C                     	;# 
   331  091D                     	;# 
   332  091E                     	;# 
   333  091F                     	;# 
   334  0E0F                     	;# 
   335  0E10                     	;# 
   336  0E11                     	;# 
   337  0E12                     	;# 
   338  0E13                     	;# 
   339  0E14                     	;# 
   340  0E15                     	;# 
   341  0E16                     	;# 
   342  0E17                     	;# 
   343  0E18                     	;# 
   344  0E19                     	;# 
   345  0E1A                     	;# 
   346  0E1B                     	;# 
   347  0E1C                     	;# 
   348  0E1D                     	;# 
   349  0E1E                     	;# 
   350  0E1F                     	;# 
   351  0E20                     	;# 
   352  0E21                     	;# 
   353  0E22                     	;# 
   354  0E24                     	;# 
   355  0E25                     	;# 
   356  0E28                     	;# 
   357  0E29                     	;# 
   358  0E2A                     	;# 
   359  0E2B                     	;# 
   360  0E2C                     	;# 
   361  0E2D                     	;# 
   362  0E2E                     	;# 
   363  0E2F                     	;# 
   364  0E90                     	;# 
   365  0E91                     	;# 
   366  0E92                     	;# 
   367  0E94                     	;# 
   368  0E95                     	;# 
   369  0E9C                     	;# 
   370  0E9D                     	;# 
   371  0E9E                     	;# 
   372  0E9F                     	;# 
   373  0EA0                     	;# 
   374  0EA1                     	;# 
   375  0EA2                     	;# 
   376  0EA3                     	;# 
   377  0EA4                     	;# 
   378  0EA5                     	;# 
   379  0EA6                     	;# 
   380  0EA7                     	;# 
   381  0F0F                     	;# 
   382  0F10                     	;# 
   383  0F11                     	;# 
   384  0F12                     	;# 
   385  0F13                     	;# 
   386  0F14                     	;# 
   387  0F15                     	;# 
   388  0F16                     	;# 
   389  0F17                     	;# 
   390  0F18                     	;# 
   391  0F19                     	;# 
   392  0F1A                     	;# 
   393  0F1B                     	;# 
   394  0F1C                     	;# 
   395  0F1D                     	;# 
   396  0F1E                     	;# 
   397  0F1F                     	;# 
   398  0F20                     	;# 
   399  0F21                     	;# 
   400  0F22                     	;# 
   401  0F23                     	;# 
   402  0F24                     	;# 
   403  0F25                     	;# 
   404  0F26                     	;# 
   405  0F27                     	;# 
   406  0F28                     	;# 
   407  0F29                     	;# 
   408  0F2A                     	;# 
   409  0F2B                     	;# 
   410  0F2C                     	;# 
   411  0F2D                     	;# 
   412  0F2E                     	;# 
   413  0F2F                     	;# 
   414  0F30                     	;# 
   415  0F31                     	;# 
   416  0F32                     	;# 
   417  0F33                     	;# 
   418  0F34                     	;# 
   419  0F35                     	;# 
   420  0F36                     	;# 
   421  0F37                     	;# 
   422  0FE4                     	;# 
   423  0FE5                     	;# 
   424  0FE6                     	;# 
   425  0FE7                     	;# 
   426  0FE8                     	;# 
   427  0FE9                     	;# 
   428  0FEA                     	;# 
   429  0FEB                     	;# 
   430  0FED                     	;# 
   431  0FEE                     	;# 
   432  0FEF                     	;# 
   433  0000                     	;# 
   434  0001                     	;# 
   435  0002                     	;# 
   436  0003                     	;# 
   437  0004                     	;# 
   438  0005                     	;# 
   439  0006                     	;# 
   440  0007                     	;# 
   441  0008                     	;# 
   442  0009                     	;# 
   443  000A                     	;# 
   444  000B                     	;# 
   445  000C                     	;# 
   446  000D                     	;# 
   447  000E                     	;# 
   448  0010                     	;# 
   449  0011                     	;# 
   450  0012                     	;# 
   451  0013                     	;# 
   452  0014                     	;# 
   453  0015                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  0019                     	;# 
   461  001A                     	;# 
   462  001B                     	;# 
   463  001C                     	;# 
   464  001D                     	;# 
   465  001E                     	;# 
   466  001F                     	;# 
   467  008C                     	;# 
   468  008D                     	;# 
   469  008E                     	;# 
   470  0090                     	;# 
   471  0091                     	;# 
   472  0092                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0097                     	;# 
   476  009B                     	;# 
   477  009B                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  009F                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010E                     	;# 
   485  0111                     	;# 
   486  0112                     	;# 
   487  0113                     	;# 
   488  0114                     	;# 
   489  0115                     	;# 
   490  0116                     	;# 
   491  0117                     	;# 
   492  0118                     	;# 
   493  0119                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496  018E                     	;# 
   497  0197                     	;# 
   498  0199                     	;# 
   499  0199                     	;# 
   500  0199                     	;# 
   501  019A                     	;# 
   502  019A                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019C                     	;# 
   510  019C                     	;# 
   511  019C                     	;# 
   512  019D                     	;# 
   513  019D                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019E                     	;# 
   517  019E                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  019F                     	;# 
   521  019F                     	;# 
   522  019F                     	;# 
   523  020C                     	;# 
   524  020D                     	;# 
   525  020E                     	;# 
   526  0211                     	;# 
   527  0211                     	;# 
   528  0212                     	;# 
   529  0212                     	;# 
   530  0213                     	;# 
   531  0213                     	;# 
   532  0214                     	;# 
   533  0214                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0215                     	;# 
   538  0216                     	;# 
   539  0216                     	;# 
   540  0217                     	;# 
   541  0217                     	;# 
   542  0219                     	;# 
   543  021A                     	;# 
   544  021B                     	;# 
   545  021C                     	;# 
   546  021D                     	;# 
   547  021D                     	;# 
   548  021E                     	;# 
   549  021F                     	;# 
   550  028C                     	;# 
   551  028D                     	;# 
   552  028E                     	;# 
   553  0291                     	;# 
   554  0291                     	;# 
   555  0292                     	;# 
   556  0293                     	;# 
   557  0294                     	;# 
   558  0295                     	;# 
   559  0295                     	;# 
   560  0296                     	;# 
   561  0297                     	;# 
   562  0298                     	;# 
   563  029F                     	;# 
   564  030C                     	;# 
   565  030D                     	;# 
   566  030E                     	;# 
   567  0311                     	;# 
   568  0311                     	;# 
   569  0312                     	;# 
   570  0313                     	;# 
   571  0314                     	;# 
   572  0315                     	;# 
   573  0315                     	;# 
   574  0316                     	;# 
   575  0317                     	;# 
   576  0318                     	;# 
   577  038C                     	;# 
   578  038D                     	;# 
   579  038E                     	;# 
   580  0391                     	;# 
   581  0392                     	;# 
   582  0393                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0397                     	;# 
   587  0398                     	;# 
   588  0399                     	;# 
   589  039A                     	;# 
   590  039C                     	;# 
   591  039D                     	;# 
   592  039E                     	;# 
   593  039F                     	;# 
   594  0411                     	;# 
   595  0411                     	;# 
   596  0412                     	;# 
   597  0413                     	;# 
   598  0414                     	;# 
   599  0415                     	;# 
   600  0416                     	;# 
   601  0417                     	;# 
   602  0418                     	;# 
   603  0418                     	;# 
   604  0419                     	;# 
   605  041A                     	;# 
   606  041B                     	;# 
   607  041C                     	;# 
   608  041D                     	;# 
   609  041E                     	;# 
   610  041F                     	;# 
   611  0498                     	;# 
   612  0498                     	;# 
   613  0499                     	;# 
   614  049A                     	;# 
   615  049B                     	;# 
   616  049B                     	;# 
   617  049C                     	;# 
   618  049D                     	;# 
   619  049E                     	;# 
   620  049F                     	;# 
   621  0617                     	;# 
   622  0618                     	;# 
   623  0619                     	;# 
   624  0619                     	;# 
   625  061A                     	;# 
   626  061B                     	;# 
   627  061C                     	;# 
   628  061C                     	;# 
   629  061F                     	;# 
   630  0691                     	;# 
   631  0692                     	;# 
   632  0693                     	;# 
   633  0694                     	;# 
   634  0695                     	;# 
   635  0696                     	;# 
   636  0697                     	;# 
   637  0698                     	;# 
   638  0699                     	;# 
   639  0711                     	;# 
   640  0712                     	;# 
   641  0713                     	;# 
   642  0714                     	;# 
   643  0715                     	;# 
   644  0716                     	;# 
   645  0717                     	;# 
   646  0718                     	;# 
   647  0719                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0891                     	;# 
   652  0891                     	;# 
   653  0891                     	;# 
   654  0892                     	;# 
   655  0892                     	;# 
   656  0892                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0893                     	;# 
   661  0893                     	;# 
   662  0893                     	;# 
   663  0894                     	;# 
   664  0894                     	;# 
   665  0894                     	;# 
   666  0895                     	;# 
   667  0895                     	;# 
   668  0895                     	;# 
   669  0896                     	;# 
   670  0896                     	;# 
   671  0896                     	;# 
   672  089B                     	;# 
   673  0911                     	;# 
   674  0912                     	;# 
   675  0913                     	;# 
   676  0914                     	;# 
   677  0915                     	;# 
   678  0916                     	;# 
   679  0918                     	;# 
   680  0919                     	;# 
   681  091A                     	;# 
   682  091B                     	;# 
   683  091C                     	;# 
   684  091D                     	;# 
   685  091E                     	;# 
   686  091F                     	;# 
   687  0E0F                     	;# 
   688  0E10                     	;# 
   689  0E11                     	;# 
   690  0E12                     	;# 
   691  0E13                     	;# 
   692  0E14                     	;# 
   693  0E15                     	;# 
   694  0E16                     	;# 
   695  0E17                     	;# 
   696  0E18                     	;# 
   697  0E19                     	;# 
   698  0E1A                     	;# 
   699  0E1B                     	;# 
   700  0E1C                     	;# 
   701  0E1D                     	;# 
   702  0E1E                     	;# 
   703  0E1F                     	;# 
   704  0E20                     	;# 
   705  0E21                     	;# 
   706  0E22                     	;# 
   707  0E24                     	;# 
   708  0E25                     	;# 
   709  0E28                     	;# 
   710  0E29                     	;# 
   711  0E2A                     	;# 
   712  0E2B                     	;# 
   713  0E2C                     	;# 
   714  0E2D                     	;# 
   715  0E2E                     	;# 
   716  0E2F                     	;# 
   717  0E90                     	;# 
   718  0E91                     	;# 
   719  0E92                     	;# 
   720  0E94                     	;# 
   721  0E95                     	;# 
   722  0E9C                     	;# 
   723  0E9D                     	;# 
   724  0E9E                     	;# 
   725  0E9F                     	;# 
   726  0EA0                     	;# 
   727  0EA1                     	;# 
   728  0EA2                     	;# 
   729  0EA3                     	;# 
   730  0EA4                     	;# 
   731  0EA5                     	;# 
   732  0EA6                     	;# 
   733  0EA7                     	;# 
   734  0F0F                     	;# 
   735  0F10                     	;# 
   736  0F11                     	;# 
   737  0F12                     	;# 
   738  0F13                     	;# 
   739  0F14                     	;# 
   740  0F15                     	;# 
   741  0F16                     	;# 
   742  0F17                     	;# 
   743  0F18                     	;# 
   744  0F19                     	;# 
   745  0F1A                     	;# 
   746  0F1B                     	;# 
   747  0F1C                     	;# 
   748  0F1D                     	;# 
   749  0F1E                     	;# 
   750  0F1F                     	;# 
   751  0F20                     	;# 
   752  0F21                     	;# 
   753  0F22                     	;# 
   754  0F23                     	;# 
   755  0F24                     	;# 
   756  0F25                     	;# 
   757  0F26                     	;# 
   758  0F27                     	;# 
   759  0F28                     	;# 
   760  0F29                     	;# 
   761  0F2A                     	;# 
   762  0F2B                     	;# 
   763  0F2C                     	;# 
   764  0F2D                     	;# 
   765  0F2E                     	;# 
   766  0F2F                     	;# 
   767  0F30                     	;# 
   768  0F31                     	;# 
   769  0F32                     	;# 
   770  0F33                     	;# 
   771  0F34                     	;# 
   772  0F35                     	;# 
   773  0F36                     	;# 
   774  0F37                     	;# 
   775  0FE4                     	;# 
   776  0FE5                     	;# 
   777  0FE6                     	;# 
   778  0FE7                     	;# 
   779  0FE8                     	;# 
   780  0FE9                     	;# 
   781  0FEA                     	;# 
   782  0FEB                     	;# 
   783  0FED                     	;# 
   784  0FEE                     	;# 
   785  0FEF                     	;# 
   786  0000                     	;# 
   787  0001                     	;# 
   788  0002                     	;# 
   789  0003                     	;# 
   790  0004                     	;# 
   791  0005                     	;# 
   792  0006                     	;# 
   793  0007                     	;# 
   794  0008                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  0010                     	;# 
   802  0011                     	;# 
   803  0012                     	;# 
   804  0013                     	;# 
   805  0014                     	;# 
   806  0015                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  0019                     	;# 
   814  001A                     	;# 
   815  001B                     	;# 
   816  001C                     	;# 
   817  001D                     	;# 
   818  001E                     	;# 
   819  001F                     	;# 
   820  008C                     	;# 
   821  008D                     	;# 
   822  008E                     	;# 
   823  0090                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0093                     	;# 
   827  0094                     	;# 
   828  0097                     	;# 
   829  009B                     	;# 
   830  009B                     	;# 
   831  009C                     	;# 
   832  009D                     	;# 
   833  009E                     	;# 
   834  009F                     	;# 
   835  010C                     	;# 
   836  010D                     	;# 
   837  010E                     	;# 
   838  0111                     	;# 
   839  0112                     	;# 
   840  0113                     	;# 
   841  0114                     	;# 
   842  0115                     	;# 
   843  0116                     	;# 
   844  0117                     	;# 
   845  0118                     	;# 
   846  0119                     	;# 
   847  018C                     	;# 
   848  018D                     	;# 
   849  018E                     	;# 
   850  0197                     	;# 
   851  0199                     	;# 
   852  0199                     	;# 
   853  0199                     	;# 
   854  019A                     	;# 
   855  019A                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019C                     	;# 
   863  019C                     	;# 
   864  019C                     	;# 
   865  019D                     	;# 
   866  019D                     	;# 
   867  019D                     	;# 
   868  019E                     	;# 
   869  019E                     	;# 
   870  019E                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  019F                     	;# 
   874  019F                     	;# 
   875  019F                     	;# 
   876  020C                     	;# 
   877  020D                     	;# 
   878  020E                     	;# 
   879  0211                     	;# 
   880  0211                     	;# 
   881  0212                     	;# 
   882  0212                     	;# 
   883  0213                     	;# 
   884  0213                     	;# 
   885  0214                     	;# 
   886  0214                     	;# 
   887  0215                     	;# 
   888  0215                     	;# 
   889  0215                     	;# 
   890  0215                     	;# 
   891  0216                     	;# 
   892  0216                     	;# 
   893  0217                     	;# 
   894  0217                     	;# 
   895  0219                     	;# 
   896  021A                     	;# 
   897  021B                     	;# 
   898  021C                     	;# 
   899  021D                     	;# 
   900  021D                     	;# 
   901  021E                     	;# 
   902  021F                     	;# 
   903  028C                     	;# 
   904  028D                     	;# 
   905  028E                     	;# 
   906  0291                     	;# 
   907  0291                     	;# 
   908  0292                     	;# 
   909  0293                     	;# 
   910  0294                     	;# 
   911  0295                     	;# 
   912  0295                     	;# 
   913  0296                     	;# 
   914  0297                     	;# 
   915  0298                     	;# 
   916  029F                     	;# 
   917  030C                     	;# 
   918  030D                     	;# 
   919  030E                     	;# 
   920  0311                     	;# 
   921  0311                     	;# 
   922  0312                     	;# 
   923  0313                     	;# 
   924  0314                     	;# 
   925  0315                     	;# 
   926  0315                     	;# 
   927  0316                     	;# 
   928  0317                     	;# 
   929  0318                     	;# 
   930  038C                     	;# 
   931  038D                     	;# 
   932  038E                     	;# 
   933  0391                     	;# 
   934  0392                     	;# 
   935  0393                     	;# 
   936  0394                     	;# 
   937  0395                     	;# 
   938  0396                     	;# 
   939  0397                     	;# 
   940  0398                     	;# 
   941  0399                     	;# 
   942  039A                     	;# 
   943  039C                     	;# 
   944  039D                     	;# 
   945  039E                     	;# 
   946  039F                     	;# 
   947  0411                     	;# 
   948  0411                     	;# 
   949  0412                     	;# 
   950  0413                     	;# 
   951  0414                     	;# 
   952  0415                     	;# 
   953  0416                     	;# 
   954  0417                     	;# 
   955  0418                     	;# 
   956  0418                     	;# 
   957  0419                     	;# 
   958  041A                     	;# 
   959  041B                     	;# 
   960  041C                     	;# 
   961  041D                     	;# 
   962  041E                     	;# 
   963  041F                     	;# 
   964  0498                     	;# 
   965  0498                     	;# 
   966  0499                     	;# 
   967  049A                     	;# 
   968  049B                     	;# 
   969  049B                     	;# 
   970  049C                     	;# 
   971  049D                     	;# 
   972  049E                     	;# 
   973  049F                     	;# 
   974  0617                     	;# 
   975  0618                     	;# 
   976  0619                     	;# 
   977  0619                     	;# 
   978  061A                     	;# 
   979  061B                     	;# 
   980  061C                     	;# 
   981  061C                     	;# 
   982  061F                     	;# 
   983  0691                     	;# 
   984  0692                     	;# 
   985  0693                     	;# 
   986  0694                     	;# 
   987  0695                     	;# 
   988  0696                     	;# 
   989  0697                     	;# 
   990  0698                     	;# 
   991  0699                     	;# 
   992  0711                     	;# 
   993  0712                     	;# 
   994  0713                     	;# 
   995  0714                     	;# 
   996  0715                     	;# 
   997  0716                     	;# 
   998  0717                     	;# 
   999  0718                     	;# 
  1000  0719                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0891                     	;# 
  1005  0891                     	;# 
  1006  0891                     	;# 
  1007  0892                     	;# 
  1008  0892                     	;# 
  1009  0892                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0893                     	;# 
  1014  0893                     	;# 
  1015  0893                     	;# 
  1016  0894                     	;# 
  1017  0894                     	;# 
  1018  0894                     	;# 
  1019  0895                     	;# 
  1020  0895                     	;# 
  1021  0895                     	;# 
  1022  0896                     	;# 
  1023  0896                     	;# 
  1024  0896                     	;# 
  1025  089B                     	;# 
  1026  0911                     	;# 
  1027  0912                     	;# 
  1028  0913                     	;# 
  1029  0914                     	;# 
  1030  0915                     	;# 
  1031  0916                     	;# 
  1032  0918                     	;# 
  1033  0919                     	;# 
  1034  091A                     	;# 
  1035  091B                     	;# 
  1036  091C                     	;# 
  1037  091D                     	;# 
  1038  091E                     	;# 
  1039  091F                     	;# 
  1040  0E0F                     	;# 
  1041  0E10                     	;# 
  1042  0E11                     	;# 
  1043  0E12                     	;# 
  1044  0E13                     	;# 
  1045  0E14                     	;# 
  1046  0E15                     	;# 
  1047  0E16                     	;# 
  1048  0E17                     	;# 
  1049  0E18                     	;# 
  1050  0E19                     	;# 
  1051  0E1A                     	;# 
  1052  0E1B                     	;# 
  1053  0E1C                     	;# 
  1054  0E1D                     	;# 
  1055  0E1E                     	;# 
  1056  0E1F                     	;# 
  1057  0E20                     	;# 
  1058  0E21                     	;# 
  1059  0E22                     	;# 
  1060  0E24                     	;# 
  1061  0E25                     	;# 
  1062  0E28                     	;# 
  1063  0E29                     	;# 
  1064  0E2A                     	;# 
  1065  0E2B                     	;# 
  1066  0E2C                     	;# 
  1067  0E2D                     	;# 
  1068  0E2E                     	;# 
  1069  0E2F                     	;# 
  1070  0E90                     	;# 
  1071  0E91                     	;# 
  1072  0E92                     	;# 
  1073  0E94                     	;# 
  1074  0E95                     	;# 
  1075  0E9C                     	;# 
  1076  0E9D                     	;# 
  1077  0E9E                     	;# 
  1078  0E9F                     	;# 
  1079  0EA0                     	;# 
  1080  0EA1                     	;# 
  1081  0EA2                     	;# 
  1082  0EA3                     	;# 
  1083  0EA4                     	;# 
  1084  0EA5                     	;# 
  1085  0EA6                     	;# 
  1086  0EA7                     	;# 
  1087  0F0F                     	;# 
  1088  0F10                     	;# 
  1089  0F11                     	;# 
  1090  0F12                     	;# 
  1091  0F13                     	;# 
  1092  0F14                     	;# 
  1093  0F15                     	;# 
  1094  0F16                     	;# 
  1095  0F17                     	;# 
  1096  0F18                     	;# 
  1097  0F19                     	;# 
  1098  0F1A                     	;# 
  1099  0F1B                     	;# 
  1100  0F1C                     	;# 
  1101  0F1D                     	;# 
  1102  0F1E                     	;# 
  1103  0F1F                     	;# 
  1104  0F20                     	;# 
  1105  0F21                     	;# 
  1106  0F22                     	;# 
  1107  0F23                     	;# 
  1108  0F24                     	;# 
  1109  0F25                     	;# 
  1110  0F26                     	;# 
  1111  0F27                     	;# 
  1112  0F28                     	;# 
  1113  0F29                     	;# 
  1114  0F2A                     	;# 
  1115  0F2B                     	;# 
  1116  0F2C                     	;# 
  1117  0F2D                     	;# 
  1118  0F2E                     	;# 
  1119  0F2F                     	;# 
  1120  0F30                     	;# 
  1121  0F31                     	;# 
  1122  0F32                     	;# 
  1123  0F33                     	;# 
  1124  0F34                     	;# 
  1125  0F35                     	;# 
  1126  0F36                     	;# 
  1127  0F37                     	;# 
  1128  0FE4                     	;# 
  1129  0FE5                     	;# 
  1130  0FE6                     	;# 
  1131  0FE7                     	;# 
  1132  0FE8                     	;# 
  1133  0FE9                     	;# 
  1134  0FEA                     	;# 
  1135  0FEB                     	;# 
  1136  0FED                     	;# 
  1137  0FEE                     	;# 
  1138  0FEF                     	;# 
  1139  0000                     	;# 
  1140  0001                     	;# 
  1141  0002                     	;# 
  1142  0003                     	;# 
  1143  0004                     	;# 
  1144  0005                     	;# 
  1145  0006                     	;# 
  1146  0007                     	;# 
  1147  0008                     	;# 
  1148  0009                     	;# 
  1149  000A                     	;# 
  1150  000B                     	;# 
  1151  000C                     	;# 
  1152  000D                     	;# 
  1153  000E                     	;# 
  1154  0010                     	;# 
  1155  0011                     	;# 
  1156  0012                     	;# 
  1157  0013                     	;# 
  1158  0014                     	;# 
  1159  0015                     	;# 
  1160  0015                     	;# 
  1161  0016                     	;# 
  1162  0016                     	;# 
  1163  0017                     	;# 
  1164  0018                     	;# 
  1165  0019                     	;# 
  1166  0019                     	;# 
  1167  001A                     	;# 
  1168  001B                     	;# 
  1169  001C                     	;# 
  1170  001D                     	;# 
  1171  001E                     	;# 
  1172  001F                     	;# 
  1173  008C                     	;# 
  1174  008D                     	;# 
  1175  008E                     	;# 
  1176  0090                     	;# 
  1177  0091                     	;# 
  1178  0092                     	;# 
  1179  0093                     	;# 
  1180  0094                     	;# 
  1181  0097                     	;# 
  1182  009B                     	;# 
  1183  009B                     	;# 
  1184  009C                     	;# 
  1185  009D                     	;# 
  1186  009E                     	;# 
  1187  009F                     	;# 
  1188  010C                     	;# 
  1189  010D                     	;# 
  1190  010E                     	;# 
  1191  0111                     	;# 
  1192  0112                     	;# 
  1193  0113                     	;# 
  1194  0114                     	;# 
  1195  0115                     	;# 
  1196  0116                     	;# 
  1197  0117                     	;# 
  1198  0118                     	;# 
  1199  0119                     	;# 
  1200  018C                     	;# 
  1201  018D                     	;# 
  1202  018E                     	;# 
  1203  0197                     	;# 
  1204  0199                     	;# 
  1205  0199                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019A                     	;# 
  1209  019A                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019B                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019C                     	;# 
  1216  019C                     	;# 
  1217  019C                     	;# 
  1218  019D                     	;# 
  1219  019D                     	;# 
  1220  019D                     	;# 
  1221  019E                     	;# 
  1222  019E                     	;# 
  1223  019E                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  019F                     	;# 
  1227  019F                     	;# 
  1228  019F                     	;# 
  1229  020C                     	;# 
  1230  020D                     	;# 
  1231  020E                     	;# 
  1232  0211                     	;# 
  1233  0211                     	;# 
  1234  0212                     	;# 
  1235  0212                     	;# 
  1236  0213                     	;# 
  1237  0213                     	;# 
  1238  0214                     	;# 
  1239  0214                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0215                     	;# 
  1244  0216                     	;# 
  1245  0216                     	;# 
  1246  0217                     	;# 
  1247  0217                     	;# 
  1248  0219                     	;# 
  1249  021A                     	;# 
  1250  021B                     	;# 
  1251  021C                     	;# 
  1252  021D                     	;# 
  1253  021D                     	;# 
  1254  021E                     	;# 
  1255  021F                     	;# 
  1256  028C                     	;# 
  1257  028D                     	;# 
  1258  028E                     	;# 
  1259  0291                     	;# 
  1260  0291                     	;# 
  1261  0292                     	;# 
  1262  0293                     	;# 
  1263  0294                     	;# 
  1264  0295                     	;# 
  1265  0295                     	;# 
  1266  0296                     	;# 
  1267  0297                     	;# 
  1268  0298                     	;# 
  1269  029F                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  0311                     	;# 
  1274  0311                     	;# 
  1275  0312                     	;# 
  1276  0313                     	;# 
  1277  0314                     	;# 
  1278  0315                     	;# 
  1279  0315                     	;# 
  1280  0316                     	;# 
  1281  0317                     	;# 
  1282  0318                     	;# 
  1283  038C                     	;# 
  1284  038D                     	;# 
  1285  038E                     	;# 
  1286  0391                     	;# 
  1287  0392                     	;# 
  1288  0393                     	;# 
  1289  0394                     	;# 
  1290  0395                     	;# 
  1291  0396                     	;# 
  1292  0397                     	;# 
  1293  0398                     	;# 
  1294  0399                     	;# 
  1295  039A                     	;# 
  1296  039C                     	;# 
  1297  039D                     	;# 
  1298  039E                     	;# 
  1299  039F                     	;# 
  1300  0411                     	;# 
  1301  0411                     	;# 
  1302  0412                     	;# 
  1303  0413                     	;# 
  1304  0414                     	;# 
  1305  0415                     	;# 
  1306  0416                     	;# 
  1307  0417                     	;# 
  1308  0418                     	;# 
  1309  0418                     	;# 
  1310  0419                     	;# 
  1311  041A                     	;# 
  1312  041B                     	;# 
  1313  041C                     	;# 
  1314  041D                     	;# 
  1315  041E                     	;# 
  1316  041F                     	;# 
  1317  0498                     	;# 
  1318  0498                     	;# 
  1319  0499                     	;# 
  1320  049A                     	;# 
  1321  049B                     	;# 
  1322  049B                     	;# 
  1323  049C                     	;# 
  1324  049D                     	;# 
  1325  049E                     	;# 
  1326  049F                     	;# 
  1327  0617                     	;# 
  1328  0618                     	;# 
  1329  0619                     	;# 
  1330  0619                     	;# 
  1331  061A                     	;# 
  1332  061B                     	;# 
  1333  061C                     	;# 
  1334  061C                     	;# 
  1335  061F                     	;# 
  1336  0691                     	;# 
  1337  0692                     	;# 
  1338  0693                     	;# 
  1339  0694                     	;# 
  1340  0695                     	;# 
  1341  0696                     	;# 
  1342  0697                     	;# 
  1343  0698                     	;# 
  1344  0699                     	;# 
  1345  0711                     	;# 
  1346  0712                     	;# 
  1347  0713                     	;# 
  1348  0714                     	;# 
  1349  0715                     	;# 
  1350  0716                     	;# 
  1351  0717                     	;# 
  1352  0718                     	;# 
  1353  0719                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0891                     	;# 
  1358  0891                     	;# 
  1359  0891                     	;# 
  1360  0892                     	;# 
  1361  0892                     	;# 
  1362  0892                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0893                     	;# 
  1367  0893                     	;# 
  1368  0893                     	;# 
  1369  0894                     	;# 
  1370  0894                     	;# 
  1371  0894                     	;# 
  1372  0895                     	;# 
  1373  0895                     	;# 
  1374  0895                     	;# 
  1375  0896                     	;# 
  1376  0896                     	;# 
  1377  0896                     	;# 
  1378  089B                     	;# 
  1379  0911                     	;# 
  1380  0912                     	;# 
  1381  0913                     	;# 
  1382  0914                     	;# 
  1383  0915                     	;# 
  1384  0916                     	;# 
  1385  0918                     	;# 
  1386  0919                     	;# 
  1387  091A                     	;# 
  1388  091B                     	;# 
  1389  091C                     	;# 
  1390  091D                     	;# 
  1391  091E                     	;# 
  1392  091F                     	;# 
  1393  0E0F                     	;# 
  1394  0E10                     	;# 
  1395  0E11                     	;# 
  1396  0E12                     	;# 
  1397  0E13                     	;# 
  1398  0E14                     	;# 
  1399  0E15                     	;# 
  1400  0E16                     	;# 
  1401  0E17                     	;# 
  1402  0E18                     	;# 
  1403  0E19                     	;# 
  1404  0E1A                     	;# 
  1405  0E1B                     	;# 
  1406  0E1C                     	;# 
  1407  0E1D                     	;# 
  1408  0E1E                     	;# 
  1409  0E1F                     	;# 
  1410  0E20                     	;# 
  1411  0E21                     	;# 
  1412  0E22                     	;# 
  1413  0E24                     	;# 
  1414  0E25                     	;# 
  1415  0E28                     	;# 
  1416  0E29                     	;# 
  1417  0E2A                     	;# 
  1418  0E2B                     	;# 
  1419  0E2C                     	;# 
  1420  0E2D                     	;# 
  1421  0E2E                     	;# 
  1422  0E2F                     	;# 
  1423  0E90                     	;# 
  1424  0E91                     	;# 
  1425  0E92                     	;# 
  1426  0E94                     	;# 
  1427  0E95                     	;# 
  1428  0E9C                     	;# 
  1429  0E9D                     	;# 
  1430  0E9E                     	;# 
  1431  0E9F                     	;# 
  1432  0EA0                     	;# 
  1433  0EA1                     	;# 
  1434  0EA2                     	;# 
  1435  0EA3                     	;# 
  1436  0EA4                     	;# 
  1437  0EA5                     	;# 
  1438  0EA6                     	;# 
  1439  0EA7                     	;# 
  1440  0F0F                     	;# 
  1441  0F10                     	;# 
  1442  0F11                     	;# 
  1443  0F12                     	;# 
  1444  0F13                     	;# 
  1445  0F14                     	;# 
  1446  0F15                     	;# 
  1447  0F16                     	;# 
  1448  0F17                     	;# 
  1449  0F18                     	;# 
  1450  0F19                     	;# 
  1451  0F1A                     	;# 
  1452  0F1B                     	;# 
  1453  0F1C                     	;# 
  1454  0F1D                     	;# 
  1455  0F1E                     	;# 
  1456  0F1F                     	;# 
  1457  0F20                     	;# 
  1458  0F21                     	;# 
  1459  0F22                     	;# 
  1460  0F23                     	;# 
  1461  0F24                     	;# 
  1462  0F25                     	;# 
  1463  0F26                     	;# 
  1464  0F27                     	;# 
  1465  0F28                     	;# 
  1466  0F29                     	;# 
  1467  0F2A                     	;# 
  1468  0F2B                     	;# 
  1469  0F2C                     	;# 
  1470  0F2D                     	;# 
  1471  0F2E                     	;# 
  1472  0F2F                     	;# 
  1473  0F30                     	;# 
  1474  0F31                     	;# 
  1475  0F32                     	;# 
  1476  0F33                     	;# 
  1477  0F34                     	;# 
  1478  0F35                     	;# 
  1479  0F36                     	;# 
  1480  0F37                     	;# 
  1481  0FE4                     	;# 
  1482  0FE5                     	;# 
  1483  0FE6                     	;# 
  1484  0FE7                     	;# 
  1485  0FE8                     	;# 
  1486  0FE9                     	;# 
  1487  0FEA                     	;# 
  1488  0FEB                     	;# 
  1489  0FED                     	;# 
  1490  0FEE                     	;# 
  1491  0FEF                     	;# 
  1492  0000                     	;# 
  1493  0001                     	;# 
  1494  0002                     	;# 
  1495  0003                     	;# 
  1496  0004                     	;# 
  1497  0005                     	;# 
  1498  0006                     	;# 
  1499  0007                     	;# 
  1500  0008                     	;# 
  1501  0009                     	;# 
  1502  000A                     	;# 
  1503  000B                     	;# 
  1504  000C                     	;# 
  1505  000D                     	;# 
  1506  000E                     	;# 
  1507  0010                     	;# 
  1508  0011                     	;# 
  1509  0012                     	;# 
  1510  0013                     	;# 
  1511  0014                     	;# 
  1512  0015                     	;# 
  1513  0015                     	;# 
  1514  0016                     	;# 
  1515  0016                     	;# 
  1516  0017                     	;# 
  1517  0018                     	;# 
  1518  0019                     	;# 
  1519  0019                     	;# 
  1520  001A                     	;# 
  1521  001B                     	;# 
  1522  001C                     	;# 
  1523  001D                     	;# 
  1524  001E                     	;# 
  1525  001F                     	;# 
  1526  008C                     	;# 
  1527  008D                     	;# 
  1528  008E                     	;# 
  1529  0090                     	;# 
  1530  0091                     	;# 
  1531  0092                     	;# 
  1532  0093                     	;# 
  1533  0094                     	;# 
  1534  0097                     	;# 
  1535  009B                     	;# 
  1536  009B                     	;# 
  1537  009C                     	;# 
  1538  009D                     	;# 
  1539  009E                     	;# 
  1540  009F                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  0111                     	;# 
  1545  0112                     	;# 
  1546  0113                     	;# 
  1547  0114                     	;# 
  1548  0115                     	;# 
  1549  0116                     	;# 
  1550  0117                     	;# 
  1551  0118                     	;# 
  1552  0119                     	;# 
  1553  018C                     	;# 
  1554  018D                     	;# 
  1555  018E                     	;# 
  1556  0197                     	;# 
  1557  0199                     	;# 
  1558  0199                     	;# 
  1559  0199                     	;# 
  1560  019A                     	;# 
  1561  019A                     	;# 
  1562  019A                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019C                     	;# 
  1569  019C                     	;# 
  1570  019C                     	;# 
  1571  019D                     	;# 
  1572  019D                     	;# 
  1573  019D                     	;# 
  1574  019E                     	;# 
  1575  019E                     	;# 
  1576  019E                     	;# 
  1577  019F                     	;# 
  1578  019F                     	;# 
  1579  019F                     	;# 
  1580  019F                     	;# 
  1581  019F                     	;# 
  1582  020C                     	;# 
  1583  020D                     	;# 
  1584  020E                     	;# 
  1585  0211                     	;# 
  1586  0211                     	;# 
  1587  0212                     	;# 
  1588  0212                     	;# 
  1589  0213                     	;# 
  1590  0213                     	;# 
  1591  0214                     	;# 
  1592  0214                     	;# 
  1593  0215                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0215                     	;# 
  1597  0216                     	;# 
  1598  0216                     	;# 
  1599  0217                     	;# 
  1600  0217                     	;# 
  1601  0219                     	;# 
  1602  021A                     	;# 
  1603  021B                     	;# 
  1604  021C                     	;# 
  1605  021D                     	;# 
  1606  021D                     	;# 
  1607  021E                     	;# 
  1608  021F                     	;# 
  1609  028C                     	;# 
  1610  028D                     	;# 
  1611  028E                     	;# 
  1612  0291                     	;# 
  1613  0291                     	;# 
  1614  0292                     	;# 
  1615  0293                     	;# 
  1616  0294                     	;# 
  1617  0295                     	;# 
  1618  0295                     	;# 
  1619  0296                     	;# 
  1620  0297                     	;# 
  1621  0298                     	;# 
  1622  029F                     	;# 
  1623  030C                     	;# 
  1624  030D                     	;# 
  1625  030E                     	;# 
  1626  0311                     	;# 
  1627  0311                     	;# 
  1628  0312                     	;# 
  1629  0313                     	;# 
  1630  0314                     	;# 
  1631  0315                     	;# 
  1632  0315                     	;# 
  1633  0316                     	;# 
  1634  0317                     	;# 
  1635  0318                     	;# 
  1636  038C                     	;# 
  1637  038D                     	;# 
  1638  038E                     	;# 
  1639  0391                     	;# 
  1640  0392                     	;# 
  1641  0393                     	;# 
  1642  0394                     	;# 
  1643  0395                     	;# 
  1644  0396                     	;# 
  1645  0397                     	;# 
  1646  0398                     	;# 
  1647  0399                     	;# 
  1648  039A                     	;# 
  1649  039C                     	;# 
  1650  039D                     	;# 
  1651  039E                     	;# 
  1652  039F                     	;# 
  1653  0411                     	;# 
  1654  0411                     	;# 
  1655  0412                     	;# 
  1656  0413                     	;# 
  1657  0414                     	;# 
  1658  0415                     	;# 
  1659  0416                     	;# 
  1660  0417                     	;# 
  1661  0418                     	;# 
  1662  0418                     	;# 
  1663  0419                     	;# 
  1664  041A                     	;# 
  1665  041B                     	;# 
  1666  041C                     	;# 
  1667  041D                     	;# 
  1668  041E                     	;# 
  1669  041F                     	;# 
  1670  0498                     	;# 
  1671  0498                     	;# 
  1672  0499                     	;# 
  1673  049A                     	;# 
  1674  049B                     	;# 
  1675  049B                     	;# 
  1676  049C                     	;# 
  1677  049D                     	;# 
  1678  049E                     	;# 
  1679  049F                     	;# 
  1680  0617                     	;# 
  1681  0618                     	;# 
  1682  0619                     	;# 
  1683  0619                     	;# 
  1684  061A                     	;# 
  1685  061B                     	;# 
  1686  061C                     	;# 
  1687  061C                     	;# 
  1688  061F                     	;# 
  1689  0691                     	;# 
  1690  0692                     	;# 
  1691  0693                     	;# 
  1692  0694                     	;# 
  1693  0695                     	;# 
  1694  0696                     	;# 
  1695  0697                     	;# 
  1696  0698                     	;# 
  1697  0699                     	;# 
  1698  0711                     	;# 
  1699  0712                     	;# 
  1700  0713                     	;# 
  1701  0714                     	;# 
  1702  0715                     	;# 
  1703  0716                     	;# 
  1704  0717                     	;# 
  1705  0718                     	;# 
  1706  0719                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0891                     	;# 
  1711  0891                     	;# 
  1712  0891                     	;# 
  1713  0892                     	;# 
  1714  0892                     	;# 
  1715  0892                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0893                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0894                     	;# 
  1723  0894                     	;# 
  1724  0894                     	;# 
  1725  0895                     	;# 
  1726  0895                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  0896                     	;# 
  1730  0896                     	;# 
  1731  089B                     	;# 
  1732  0911                     	;# 
  1733  0912                     	;# 
  1734  0913                     	;# 
  1735  0914                     	;# 
  1736  0915                     	;# 
  1737  0916                     	;# 
  1738  0918                     	;# 
  1739  0919                     	;# 
  1740  091A                     	;# 
  1741  091B                     	;# 
  1742  091C                     	;# 
  1743  091D                     	;# 
  1744  091E                     	;# 
  1745  091F                     	;# 
  1746  0E0F                     	;# 
  1747  0E10                     	;# 
  1748  0E11                     	;# 
  1749  0E12                     	;# 
  1750  0E13                     	;# 
  1751  0E14                     	;# 
  1752  0E15                     	;# 
  1753  0E16                     	;# 
  1754  0E17                     	;# 
  1755  0E18                     	;# 
  1756  0E19                     	;# 
  1757  0E1A                     	;# 
  1758  0E1B                     	;# 
  1759  0E1C                     	;# 
  1760  0E1D                     	;# 
  1761  0E1E                     	;# 
  1762  0E1F                     	;# 
  1763  0E20                     	;# 
  1764  0E21                     	;# 
  1765  0E22                     	;# 
  1766  0E24                     	;# 
  1767  0E25                     	;# 
  1768  0E28                     	;# 
  1769  0E29                     	;# 
  1770  0E2A                     	;# 
  1771  0E2B                     	;# 
  1772  0E2C                     	;# 
  1773  0E2D                     	;# 
  1774  0E2E                     	;# 
  1775  0E2F                     	;# 
  1776  0E90                     	;# 
  1777  0E91                     	;# 
  1778  0E92                     	;# 
  1779  0E94                     	;# 
  1780  0E95                     	;# 
  1781  0E9C                     	;# 
  1782  0E9D                     	;# 
  1783  0E9E                     	;# 
  1784  0E9F                     	;# 
  1785  0EA0                     	;# 
  1786  0EA1                     	;# 
  1787  0EA2                     	;# 
  1788  0EA3                     	;# 
  1789  0EA4                     	;# 
  1790  0EA5                     	;# 
  1791  0EA6                     	;# 
  1792  0EA7                     	;# 
  1793  0F0F                     	;# 
  1794  0F10                     	;# 
  1795  0F11                     	;# 
  1796  0F12                     	;# 
  1797  0F13                     	;# 
  1798  0F14                     	;# 
  1799  0F15                     	;# 
  1800  0F16                     	;# 
  1801  0F17                     	;# 
  1802  0F18                     	;# 
  1803  0F19                     	;# 
  1804  0F1A                     	;# 
  1805  0F1B                     	;# 
  1806  0F1C                     	;# 
  1807  0F1D                     	;# 
  1808  0F1E                     	;# 
  1809  0F1F                     	;# 
  1810  0F20                     	;# 
  1811  0F21                     	;# 
  1812  0F22                     	;# 
  1813  0F23                     	;# 
  1814  0F24                     	;# 
  1815  0F25                     	;# 
  1816  0F26                     	;# 
  1817  0F27                     	;# 
  1818  0F28                     	;# 
  1819  0F29                     	;# 
  1820  0F2A                     	;# 
  1821  0F2B                     	;# 
  1822  0F2C                     	;# 
  1823  0F2D                     	;# 
  1824  0F2E                     	;# 
  1825  0F2F                     	;# 
  1826  0F30                     	;# 
  1827  0F31                     	;# 
  1828  0F32                     	;# 
  1829  0F33                     	;# 
  1830  0F34                     	;# 
  1831  0F35                     	;# 
  1832  0F36                     	;# 
  1833  0F37                     	;# 
  1834  0FE4                     	;# 
  1835  0FE5                     	;# 
  1836  0FE6                     	;# 
  1837  0FE7                     	;# 
  1838  0FE8                     	;# 
  1839  0FE9                     	;# 
  1840  0FEA                     	;# 
  1841  0FEB                     	;# 
  1842  0FED                     	;# 
  1843  0FEE                     	;# 
  1844  0FEF                     	;# 
  1845  0000                     	;# 
  1846  0001                     	;# 
  1847  0002                     	;# 
  1848  0003                     	;# 
  1849  0004                     	;# 
  1850  0005                     	;# 
  1851  0006                     	;# 
  1852  0007                     	;# 
  1853  0008                     	;# 
  1854  0009                     	;# 
  1855  000A                     	;# 
  1856  000B                     	;# 
  1857  000C                     	;# 
  1858  000D                     	;# 
  1859  000E                     	;# 
  1860  0010                     	;# 
  1861  0011                     	;# 
  1862  0012                     	;# 
  1863  0013                     	;# 
  1864  0014                     	;# 
  1865  0015                     	;# 
  1866  0015                     	;# 
  1867  0016                     	;# 
  1868  0016                     	;# 
  1869  0017                     	;# 
  1870  0018                     	;# 
  1871  0019                     	;# 
  1872  0019                     	;# 
  1873  001A                     	;# 
  1874  001B                     	;# 
  1875  001C                     	;# 
  1876  001D                     	;# 
  1877  001E                     	;# 
  1878  001F                     	;# 
  1879  008C                     	;# 
  1880  008D                     	;# 
  1881  008E                     	;# 
  1882  0090                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0097                     	;# 
  1888  009B                     	;# 
  1889  009B                     	;# 
  1890  009C                     	;# 
  1891  009D                     	;# 
  1892  009E                     	;# 
  1893  009F                     	;# 
  1894  010C                     	;# 
  1895  010D                     	;# 
  1896  010E                     	;# 
  1897  0111                     	;# 
  1898  0112                     	;# 
  1899  0113                     	;# 
  1900  0114                     	;# 
  1901  0115                     	;# 
  1902  0116                     	;# 
  1903  0117                     	;# 
  1904  0118                     	;# 
  1905  0119                     	;# 
  1906  018C                     	;# 
  1907  018D                     	;# 
  1908  018E                     	;# 
  1909  0197                     	;# 
  1910  0199                     	;# 
  1911  0199                     	;# 
  1912  0199                     	;# 
  1913  019A                     	;# 
  1914  019A                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019C                     	;# 
  1922  019C                     	;# 
  1923  019C                     	;# 
  1924  019D                     	;# 
  1925  019D                     	;# 
  1926  019D                     	;# 
  1927  019E                     	;# 
  1928  019E                     	;# 
  1929  019E                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  020E                     	;# 
  1938  0211                     	;# 
  1939  0211                     	;# 
  1940  0212                     	;# 
  1941  0212                     	;# 
  1942  0213                     	;# 
  1943  0213                     	;# 
  1944  0214                     	;# 
  1945  0214                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0216                     	;# 
  1951  0216                     	;# 
  1952  0217                     	;# 
  1953  0217                     	;# 
  1954  0219                     	;# 
  1955  021A                     	;# 
  1956  021B                     	;# 
  1957  021C                     	;# 
  1958  021D                     	;# 
  1959  021D                     	;# 
  1960  021E                     	;# 
  1961  021F                     	;# 
  1962  028C                     	;# 
  1963  028D                     	;# 
  1964  028E                     	;# 
  1965  0291                     	;# 
  1966  0291                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0294                     	;# 
  1970  0295                     	;# 
  1971  0295                     	;# 
  1972  0296                     	;# 
  1973  0297                     	;# 
  1974  0298                     	;# 
  1975  029F                     	;# 
  1976  030C                     	;# 
  1977  030D                     	;# 
  1978  030E                     	;# 
  1979  0311                     	;# 
  1980  0311                     	;# 
  1981  0312                     	;# 
  1982  0313                     	;# 
  1983  0314                     	;# 
  1984  0315                     	;# 
  1985  0315                     	;# 
  1986  0316                     	;# 
  1987  0317                     	;# 
  1988  0318                     	;# 
  1989  038C                     	;# 
  1990  038D                     	;# 
  1991  038E                     	;# 
  1992  0391                     	;# 
  1993  0392                     	;# 
  1994  0393                     	;# 
  1995  0394                     	;# 
  1996  0395                     	;# 
  1997  0396                     	;# 
  1998  0397                     	;# 
  1999  0398                     	;# 
  2000  0399                     	;# 
  2001  039A                     	;# 
  2002  039C                     	;# 
  2003  039D                     	;# 
  2004  039E                     	;# 
  2005  039F                     	;# 
  2006  0411                     	;# 
  2007  0411                     	;# 
  2008  0412                     	;# 
  2009  0413                     	;# 
  2010  0414                     	;# 
  2011  0415                     	;# 
  2012  0416                     	;# 
  2013  0417                     	;# 
  2014  0418                     	;# 
  2015  0418                     	;# 
  2016  0419                     	;# 
  2017  041A                     	;# 
  2018  041B                     	;# 
  2019  041C                     	;# 
  2020  041D                     	;# 
  2021  041E                     	;# 
  2022  041F                     	;# 
  2023  0498                     	;# 
  2024  0498                     	;# 
  2025  0499                     	;# 
  2026  049A                     	;# 
  2027  049B                     	;# 
  2028  049B                     	;# 
  2029  049C                     	;# 
  2030  049D                     	;# 
  2031  049E                     	;# 
  2032  049F                     	;# 
  2033  0617                     	;# 
  2034  0618                     	;# 
  2035  0619                     	;# 
  2036  0619                     	;# 
  2037  061A                     	;# 
  2038  061B                     	;# 
  2039  061C                     	;# 
  2040  061C                     	;# 
  2041  061F                     	;# 
  2042  0691                     	;# 
  2043  0692                     	;# 
  2044  0693                     	;# 
  2045  0694                     	;# 
  2046  0695                     	;# 
  2047  0696                     	;# 
  2048  0697                     	;# 
  2049  0698                     	;# 
  2050  0699                     	;# 
  2051  0711                     	;# 
  2052  0712                     	;# 
  2053  0713                     	;# 
  2054  0714                     	;# 
  2055  0715                     	;# 
  2056  0716                     	;# 
  2057  0717                     	;# 
  2058  0718                     	;# 
  2059  0719                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0891                     	;# 
  2064  0891                     	;# 
  2065  0891                     	;# 
  2066  0892                     	;# 
  2067  0892                     	;# 
  2068  0892                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0893                     	;# 
  2073  0893                     	;# 
  2074  0893                     	;# 
  2075  0894                     	;# 
  2076  0894                     	;# 
  2077  0894                     	;# 
  2078  0895                     	;# 
  2079  0895                     	;# 
  2080  0895                     	;# 
  2081  0896                     	;# 
  2082  0896                     	;# 
  2083  0896                     	;# 
  2084  089B                     	;# 
  2085  0911                     	;# 
  2086  0912                     	;# 
  2087  0913                     	;# 
  2088  0914                     	;# 
  2089  0915                     	;# 
  2090  0916                     	;# 
  2091  0918                     	;# 
  2092  0919                     	;# 
  2093  091A                     	;# 
  2094  091B                     	;# 
  2095  091C                     	;# 
  2096  091D                     	;# 
  2097  091E                     	;# 
  2098  091F                     	;# 
  2099  0E0F                     	;# 
  2100  0E10                     	;# 
  2101  0E11                     	;# 
  2102  0E12                     	;# 
  2103  0E13                     	;# 
  2104  0E14                     	;# 
  2105  0E15                     	;# 
  2106  0E16                     	;# 
  2107  0E17                     	;# 
  2108  0E18                     	;# 
  2109  0E19                     	;# 
  2110  0E1A                     	;# 
  2111  0E1B                     	;# 
  2112  0E1C                     	;# 
  2113  0E1D                     	;# 
  2114  0E1E                     	;# 
  2115  0E1F                     	;# 
  2116  0E20                     	;# 
  2117  0E21                     	;# 
  2118  0E22                     	;# 
  2119  0E24                     	;# 
  2120  0E25                     	;# 
  2121  0E28                     	;# 
  2122  0E29                     	;# 
  2123  0E2A                     	;# 
  2124  0E2B                     	;# 
  2125  0E2C                     	;# 
  2126  0E2D                     	;# 
  2127  0E2E                     	;# 
  2128  0E2F                     	;# 
  2129  0E90                     	;# 
  2130  0E91                     	;# 
  2131  0E92                     	;# 
  2132  0E94                     	;# 
  2133  0E95                     	;# 
  2134  0E9C                     	;# 
  2135  0E9D                     	;# 
  2136  0E9E                     	;# 
  2137  0E9F                     	;# 
  2138  0EA0                     	;# 
  2139  0EA1                     	;# 
  2140  0EA2                     	;# 
  2141  0EA3                     	;# 
  2142  0EA4                     	;# 
  2143  0EA5                     	;# 
  2144  0EA6                     	;# 
  2145  0EA7                     	;# 
  2146  0F0F                     	;# 
  2147  0F10                     	;# 
  2148  0F11                     	;# 
  2149  0F12                     	;# 
  2150  0F13                     	;# 
  2151  0F14                     	;# 
  2152  0F15                     	;# 
  2153  0F16                     	;# 
  2154  0F17                     	;# 
  2155  0F18                     	;# 
  2156  0F19                     	;# 
  2157  0F1A                     	;# 
  2158  0F1B                     	;# 
  2159  0F1C                     	;# 
  2160  0F1D                     	;# 
  2161  0F1E                     	;# 
  2162  0F1F                     	;# 
  2163  0F20                     	;# 
  2164  0F21                     	;# 
  2165  0F22                     	;# 
  2166  0F23                     	;# 
  2167  0F24                     	;# 
  2168  0F25                     	;# 
  2169  0F26                     	;# 
  2170  0F27                     	;# 
  2171  0F28                     	;# 
  2172  0F29                     	;# 
  2173  0F2A                     	;# 
  2174  0F2B                     	;# 
  2175  0F2C                     	;# 
  2176  0F2D                     	;# 
  2177  0F2E                     	;# 
  2178  0F2F                     	;# 
  2179  0F30                     	;# 
  2180  0F31                     	;# 
  2181  0F32                     	;# 
  2182  0F33                     	;# 
  2183  0F34                     	;# 
  2184  0F35                     	;# 
  2185  0F36                     	;# 
  2186  0F37                     	;# 
  2187  0FE4                     	;# 
  2188  0FE5                     	;# 
  2189  0FE6                     	;# 
  2190  0FE7                     	;# 
  2191  0FE8                     	;# 
  2192  0FE9                     	;# 
  2193  0FEA                     	;# 
  2194  0FEB                     	;# 
  2195  0FED                     	;# 
  2196  0FEE                     	;# 
  2197  0FEF                     	;# 
  2198  0000                     	;# 
  2199  0001                     	;# 
  2200  0002                     	;# 
  2201  0003                     	;# 
  2202  0004                     	;# 
  2203  0005                     	;# 
  2204  0006                     	;# 
  2205  0007                     	;# 
  2206  0008                     	;# 
  2207  0009                     	;# 
  2208  000A                     	;# 
  2209  000B                     	;# 
  2210  000C                     	;# 
  2211  000D                     	;# 
  2212  000E                     	;# 
  2213  0010                     	;# 
  2214  0011                     	;# 
  2215  0012                     	;# 
  2216  0013                     	;# 
  2217  0014                     	;# 
  2218  0015                     	;# 
  2219  0015                     	;# 
  2220  0016                     	;# 
  2221  0016                     	;# 
  2222  0017                     	;# 
  2223  0018                     	;# 
  2224  0019                     	;# 
  2225  0019                     	;# 
  2226  001A                     	;# 
  2227  001B                     	;# 
  2228  001C                     	;# 
  2229  001D                     	;# 
  2230  001E                     	;# 
  2231  001F                     	;# 
  2232  008C                     	;# 
  2233  008D                     	;# 
  2234  008E                     	;# 
  2235  0090                     	;# 
  2236  0091                     	;# 
  2237  0092                     	;# 
  2238  0093                     	;# 
  2239  0094                     	;# 
  2240  0097                     	;# 
  2241  009B                     	;# 
  2242  009B                     	;# 
  2243  009C                     	;# 
  2244  009D                     	;# 
  2245  009E                     	;# 
  2246  009F                     	;# 
  2247  010C                     	;# 
  2248  010D                     	;# 
  2249  010E                     	;# 
  2250  0111                     	;# 
  2251  0112                     	;# 
  2252  0113                     	;# 
  2253  0114                     	;# 
  2254  0115                     	;# 
  2255  0116                     	;# 
  2256  0117                     	;# 
  2257  0118                     	;# 
  2258  0119                     	;# 
  2259  018C                     	;# 
  2260  018D                     	;# 
  2261  018E                     	;# 
  2262  0197                     	;# 
  2263  0199                     	;# 
  2264  0199                     	;# 
  2265  0199                     	;# 
  2266  019A                     	;# 
  2267  019A                     	;# 
  2268  019A                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019B                     	;# 
  2272  019B                     	;# 
  2273  019B                     	;# 
  2274  019C                     	;# 
  2275  019C                     	;# 
  2276  019C                     	;# 
  2277  019D                     	;# 
  2278  019D                     	;# 
  2279  019D                     	;# 
  2280  019E                     	;# 
  2281  019E                     	;# 
  2282  019E                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  019F                     	;# 
  2286  019F                     	;# 
  2287  019F                     	;# 
  2288  020C                     	;# 
  2289  020D                     	;# 
  2290  020E                     	;# 
  2291  0211                     	;# 
  2292  0211                     	;# 
  2293  0212                     	;# 
  2294  0212                     	;# 
  2295  0213                     	;# 
  2296  0213                     	;# 
  2297  0214                     	;# 
  2298  0214                     	;# 
  2299  0215                     	;# 
  2300  0215                     	;# 
  2301  0215                     	;# 
  2302  0215                     	;# 
  2303  0216                     	;# 
  2304  0216                     	;# 
  2305  0217                     	;# 
  2306  0217                     	;# 
  2307  0219                     	;# 
  2308  021A                     	;# 
  2309  021B                     	;# 
  2310  021C                     	;# 
  2311  021D                     	;# 
  2312  021D                     	;# 
  2313  021E                     	;# 
  2314  021F                     	;# 
  2315  028C                     	;# 
  2316  028D                     	;# 
  2317  028E                     	;# 
  2318  0291                     	;# 
  2319  0291                     	;# 
  2320  0292                     	;# 
  2321  0293                     	;# 
  2322  0294                     	;# 
  2323  0295                     	;# 
  2324  0295                     	;# 
  2325  0296                     	;# 
  2326  0297                     	;# 
  2327  0298                     	;# 
  2328  029F                     	;# 
  2329  030C                     	;# 
  2330  030D                     	;# 
  2331  030E                     	;# 
  2332  0311                     	;# 
  2333  0311                     	;# 
  2334  0312                     	;# 
  2335  0313                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0315                     	;# 
  2339  0316                     	;# 
  2340  0317                     	;# 
  2341  0318                     	;# 
  2342  038C                     	;# 
  2343  038D                     	;# 
  2344  038E                     	;# 
  2345  0391                     	;# 
  2346  0392                     	;# 
  2347  0393                     	;# 
  2348  0394                     	;# 
  2349  0395                     	;# 
  2350  0396                     	;# 
  2351  0397                     	;# 
  2352  0398                     	;# 
  2353  0399                     	;# 
  2354  039A                     	;# 
  2355  039C                     	;# 
  2356  039D                     	;# 
  2357  039E                     	;# 
  2358  039F                     	;# 
  2359  0411                     	;# 
  2360  0411                     	;# 
  2361  0412                     	;# 
  2362  0413                     	;# 
  2363  0414                     	;# 
  2364  0415                     	;# 
  2365  0416                     	;# 
  2366  0417                     	;# 
  2367  0418                     	;# 
  2368  0418                     	;# 
  2369  0419                     	;# 
  2370  041A                     	;# 
  2371  041B                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  0498                     	;# 
  2377  0498                     	;# 
  2378  0499                     	;# 
  2379  049A                     	;# 
  2380  049B                     	;# 
  2381  049B                     	;# 
  2382  049C                     	;# 
  2383  049D                     	;# 
  2384  049E                     	;# 
  2385  049F                     	;# 
  2386  0617                     	;# 
  2387  0618                     	;# 
  2388  0619                     	;# 
  2389  0619                     	;# 
  2390  061A                     	;# 
  2391  061B                     	;# 
  2392  061C                     	;# 
  2393  061C                     	;# 
  2394  061F                     	;# 
  2395  0691                     	;# 
  2396  0692                     	;# 
  2397  0693                     	;# 
  2398  0694                     	;# 
  2399  0695                     	;# 
  2400  0696                     	;# 
  2401  0697                     	;# 
  2402  0698                     	;# 
  2403  0699                     	;# 
  2404  0711                     	;# 
  2405  0712                     	;# 
  2406  0713                     	;# 
  2407  0714                     	;# 
  2408  0715                     	;# 
  2409  0716                     	;# 
  2410  0717                     	;# 
  2411  0718                     	;# 
  2412  0719                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0891                     	;# 
  2416  0891                     	;# 
  2417  0891                     	;# 
  2418  0891                     	;# 
  2419  0892                     	;# 
  2420  0892                     	;# 
  2421  0892                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0893                     	;# 
  2425  0893                     	;# 
  2426  0893                     	;# 
  2427  0893                     	;# 
  2428  0894                     	;# 
  2429  0894                     	;# 
  2430  0894                     	;# 
  2431  0895                     	;# 
  2432  0895                     	;# 
  2433  0895                     	;# 
  2434  0896                     	;# 
  2435  0896                     	;# 
  2436  0896                     	;# 
  2437  089B                     	;# 
  2438  0911                     	;# 
  2439  0912                     	;# 
  2440  0913                     	;# 
  2441  0914                     	;# 
  2442  0915                     	;# 
  2443  0916                     	;# 
  2444  0918                     	;# 
  2445  0919                     	;# 
  2446  091A                     	;# 
  2447  091B                     	;# 
  2448  091C                     	;# 
  2449  091D                     	;# 
  2450  091E                     	;# 
  2451  091F                     	;# 
  2452  0E0F                     	;# 
  2453  0E10                     	;# 
  2454  0E11                     	;# 
  2455  0E12                     	;# 
  2456  0E13                     	;# 
  2457  0E14                     	;# 
  2458  0E15                     	;# 
  2459  0E16                     	;# 
  2460  0E17                     	;# 
  2461  0E18                     	;# 
  2462  0E19                     	;# 
  2463  0E1A                     	;# 
  2464  0E1B                     	;# 
  2465  0E1C                     	;# 
  2466  0E1D                     	;# 
  2467  0E1E                     	;# 
  2468  0E1F                     	;# 
  2469  0E20                     	;# 
  2470  0E21                     	;# 
  2471  0E22                     	;# 
  2472  0E24                     	;# 
  2473  0E25                     	;# 
  2474  0E28                     	;# 
  2475  0E29                     	;# 
  2476  0E2A                     	;# 
  2477  0E2B                     	;# 
  2478  0E2C                     	;# 
  2479  0E2D                     	;# 
  2480  0E2E                     	;# 
  2481  0E2F                     	;# 
  2482  0E90                     	;# 
  2483  0E91                     	;# 
  2484  0E92                     	;# 
  2485  0E94                     	;# 
  2486  0E95                     	;# 
  2487  0E9C                     	;# 
  2488  0E9D                     	;# 
  2489  0E9E                     	;# 
  2490  0E9F                     	;# 
  2491  0EA0                     	;# 
  2492  0EA1                     	;# 
  2493  0EA2                     	;# 
  2494  0EA3                     	;# 
  2495  0EA4                     	;# 
  2496  0EA5                     	;# 
  2497  0EA6                     	;# 
  2498  0EA7                     	;# 
  2499  0F0F                     	;# 
  2500  0F10                     	;# 
  2501  0F11                     	;# 
  2502  0F12                     	;# 
  2503  0F13                     	;# 
  2504  0F14                     	;# 
  2505  0F15                     	;# 
  2506  0F16                     	;# 
  2507  0F17                     	;# 
  2508  0F18                     	;# 
  2509  0F19                     	;# 
  2510  0F1A                     	;# 
  2511  0F1B                     	;# 
  2512  0F1C                     	;# 
  2513  0F1D                     	;# 
  2514  0F1E                     	;# 
  2515  0F1F                     	;# 
  2516  0F20                     	;# 
  2517  0F21                     	;# 
  2518  0F22                     	;# 
  2519  0F23                     	;# 
  2520  0F24                     	;# 
  2521  0F25                     	;# 
  2522  0F26                     	;# 
  2523  0F27                     	;# 
  2524  0F28                     	;# 
  2525  0F29                     	;# 
  2526  0F2A                     	;# 
  2527  0F2B                     	;# 
  2528  0F2C                     	;# 
  2529  0F2D                     	;# 
  2530  0F2E                     	;# 
  2531  0F2F                     	;# 
  2532  0F30                     	;# 
  2533  0F31                     	;# 
  2534  0F32                     	;# 
  2535  0F33                     	;# 
  2536  0F34                     	;# 
  2537  0F35                     	;# 
  2538  0F36                     	;# 
  2539  0F37                     	;# 
  2540  0FE4                     	;# 
  2541  0FE5                     	;# 
  2542  0FE6                     	;# 
  2543  0FE7                     	;# 
  2544  0FE8                     	;# 
  2545  0FE9                     	;# 
  2546  0FEA                     	;# 
  2547  0FEB                     	;# 
  2548  0FED                     	;# 
  2549  0FEE                     	;# 
  2550  0FEF                     	;# 
  2551  0000                     	;# 
  2552  0001                     	;# 
  2553  0002                     	;# 
  2554  0003                     	;# 
  2555  0004                     	;# 
  2556  0005                     	;# 
  2557  0006                     	;# 
  2558  0007                     	;# 
  2559  0008                     	;# 
  2560  0009                     	;# 
  2561  000A                     	;# 
  2562  000B                     	;# 
  2563  000C                     	;# 
  2564  000D                     	;# 
  2565  000E                     	;# 
  2566  0010                     	;# 
  2567  0011                     	;# 
  2568  0012                     	;# 
  2569  0013                     	;# 
  2570  0014                     	;# 
  2571  0015                     	;# 
  2572  0015                     	;# 
  2573  0016                     	;# 
  2574  0016                     	;# 
  2575  0017                     	;# 
  2576  0018                     	;# 
  2577  0019                     	;# 
  2578  0019                     	;# 
  2579  001A                     	;# 
  2580  001B                     	;# 
  2581  001C                     	;# 
  2582  001D                     	;# 
  2583  001E                     	;# 
  2584  001F                     	;# 
  2585  008C                     	;# 
  2586  008D                     	;# 
  2587  008E                     	;# 
  2588  0090                     	;# 
  2589  0091                     	;# 
  2590  0092                     	;# 
  2591  0093                     	;# 
  2592  0094                     	;# 
  2593  0097                     	;# 
  2594  009B                     	;# 
  2595  009B                     	;# 
  2596  009C                     	;# 
  2597  009D                     	;# 
  2598  009E                     	;# 
  2599  009F                     	;# 
  2600  010C                     	;# 
  2601  010D                     	;# 
  2602  010E                     	;# 
  2603  0111                     	;# 
  2604  0112                     	;# 
  2605  0113                     	;# 
  2606  0114                     	;# 
  2607  0115                     	;# 
  2608  0116                     	;# 
  2609  0117                     	;# 
  2610  0118                     	;# 
  2611  0119                     	;# 
  2612  018C                     	;# 
  2613  018D                     	;# 
  2614  018E                     	;# 
  2615  0197                     	;# 
  2616  0199                     	;# 
  2617  0199                     	;# 
  2618  0199                     	;# 
  2619  019A                     	;# 
  2620  019A                     	;# 
  2621  019A                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019B                     	;# 
  2625  019B                     	;# 
  2626  019B                     	;# 
  2627  019C                     	;# 
  2628  019C                     	;# 
  2629  019C                     	;# 
  2630  019D                     	;# 
  2631  019D                     	;# 
  2632  019D                     	;# 
  2633  019E                     	;# 
  2634  019E                     	;# 
  2635  019E                     	;# 
  2636  019F                     	;# 
  2637  019F                     	;# 
  2638  019F                     	;# 
  2639  019F                     	;# 
  2640  019F                     	;# 
  2641  020C                     	;# 
  2642  020D                     	;# 
  2643  020E                     	;# 
  2644  0211                     	;# 
  2645  0211                     	;# 
  2646  0212                     	;# 
  2647  0212                     	;# 
  2648  0213                     	;# 
  2649  0213                     	;# 
  2650  0214                     	;# 
  2651  0214                     	;# 
  2652  0215                     	;# 
  2653  0215                     	;# 
  2654  0215                     	;# 
  2655  0215                     	;# 
  2656  0216                     	;# 
  2657  0216                     	;# 
  2658  0217                     	;# 
  2659  0217                     	;# 
  2660  0219                     	;# 
  2661  021A                     	;# 
  2662  021B                     	;# 
  2663  021C                     	;# 
  2664  021D                     	;# 
  2665  021D                     	;# 
  2666  021E                     	;# 
  2667  021F                     	;# 
  2668  028C                     	;# 
  2669  028D                     	;# 
  2670  028E                     	;# 
  2671  0291                     	;# 
  2672  0291                     	;# 
  2673  0292                     	;# 
  2674  0293                     	;# 
  2675  0294                     	;# 
  2676  0295                     	;# 
  2677  0295                     	;# 
  2678  0296                     	;# 
  2679  0297                     	;# 
  2680  0298                     	;# 
  2681  029F                     	;# 
  2682  030C                     	;# 
  2683  030D                     	;# 
  2684  030E                     	;# 
  2685  0311                     	;# 
  2686  0311                     	;# 
  2687  0312                     	;# 
  2688  0313                     	;# 
  2689  0314                     	;# 
  2690  0315                     	;# 
  2691  0315                     	;# 
  2692  0316                     	;# 
  2693  0317                     	;# 
  2694  0318                     	;# 
  2695  038C                     	;# 
  2696  038D                     	;# 
  2697  038E                     	;# 
  2698  0391                     	;# 
  2699  0392                     	;# 
  2700  0393                     	;# 
  2701  0394                     	;# 
  2702  0395                     	;# 
  2703  0396                     	;# 
  2704  0397                     	;# 
  2705  0398                     	;# 
  2706  0399                     	;# 
  2707  039A                     	;# 
  2708  039C                     	;# 
  2709  039D                     	;# 
  2710  039E                     	;# 
  2711  039F                     	;# 
  2712  0411                     	;# 
  2713  0411                     	;# 
  2714  0412                     	;# 
  2715  0413                     	;# 
  2716  0414                     	;# 
  2717  0415                     	;# 
  2718  0416                     	;# 
  2719  0417                     	;# 
  2720  0418                     	;# 
  2721  0418                     	;# 
  2722  0419                     	;# 
  2723  041A                     	;# 
  2724  041B                     	;# 
  2725  041C                     	;# 
  2726  041D                     	;# 
  2727  041E                     	;# 
  2728  041F                     	;# 
  2729  0498                     	;# 
  2730  0498                     	;# 
  2731  0499                     	;# 
  2732  049A                     	;# 
  2733  049B                     	;# 
  2734  049B                     	;# 
  2735  049C                     	;# 
  2736  049D                     	;# 
  2737  049E                     	;# 
  2738  049F                     	;# 
  2739  0617                     	;# 
  2740  0618                     	;# 
  2741  0619                     	;# 
  2742  0619                     	;# 
  2743  061A                     	;# 
  2744  061B                     	;# 
  2745  061C                     	;# 
  2746  061C                     	;# 
  2747  061F                     	;# 
  2748  0691                     	;# 
  2749  0692                     	;# 
  2750  0693                     	;# 
  2751  0694                     	;# 
  2752  0695                     	;# 
  2753  0696                     	;# 
  2754  0697                     	;# 
  2755  0698                     	;# 
  2756  0699                     	;# 
  2757  0711                     	;# 
  2758  0712                     	;# 
  2759  0713                     	;# 
  2760  0714                     	;# 
  2761  0715                     	;# 
  2762  0716                     	;# 
  2763  0717                     	;# 
  2764  0718                     	;# 
  2765  0719                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0891                     	;# 
  2770  0891                     	;# 
  2771  0891                     	;# 
  2772  0892                     	;# 
  2773  0892                     	;# 
  2774  0892                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0893                     	;# 
  2779  0893                     	;# 
  2780  0893                     	;# 
  2781  0894                     	;# 
  2782  0894                     	;# 
  2783  0894                     	;# 
  2784  0895                     	;# 
  2785  0895                     	;# 
  2786  0895                     	;# 
  2787  0896                     	;# 
  2788  0896                     	;# 
  2789  0896                     	;# 
  2790  089B                     	;# 
  2791  0911                     	;# 
  2792  0912                     	;# 
  2793  0913                     	;# 
  2794  0914                     	;# 
  2795  0915                     	;# 
  2796  0916                     	;# 
  2797  0918                     	;# 
  2798  0919                     	;# 
  2799  091A                     	;# 
  2800  091B                     	;# 
  2801  091C                     	;# 
  2802  091D                     	;# 
  2803  091E                     	;# 
  2804  091F                     	;# 
  2805  0E0F                     	;# 
  2806  0E10                     	;# 
  2807  0E11                     	;# 
  2808  0E12                     	;# 
  2809  0E13                     	;# 
  2810  0E14                     	;# 
  2811  0E15                     	;# 
  2812  0E16                     	;# 
  2813  0E17                     	;# 
  2814  0E18                     	;# 
  2815  0E19                     	;# 
  2816  0E1A                     	;# 
  2817  0E1B                     	;# 
  2818  0E1C                     	;# 
  2819  0E1D                     	;# 
  2820  0E1E                     	;# 
  2821  0E1F                     	;# 
  2822  0E20                     	;# 
  2823  0E21                     	;# 
  2824  0E22                     	;# 
  2825  0E24                     	;# 
  2826  0E25                     	;# 
  2827  0E28                     	;# 
  2828  0E29                     	;# 
  2829  0E2A                     	;# 
  2830  0E2B                     	;# 
  2831  0E2C                     	;# 
  2832  0E2D                     	;# 
  2833  0E2E                     	;# 
  2834  0E2F                     	;# 
  2835  0E90                     	;# 
  2836  0E91                     	;# 
  2837  0E92                     	;# 
  2838  0E94                     	;# 
  2839  0E95                     	;# 
  2840  0E9C                     	;# 
  2841  0E9D                     	;# 
  2842  0E9E                     	;# 
  2843  0E9F                     	;# 
  2844  0EA0                     	;# 
  2845  0EA1                     	;# 
  2846  0EA2                     	;# 
  2847  0EA3                     	;# 
  2848  0EA4                     	;# 
  2849  0EA5                     	;# 
  2850  0EA6                     	;# 
  2851  0EA7                     	;# 
  2852  0F0F                     	;# 
  2853  0F10                     	;# 
  2854  0F11                     	;# 
  2855  0F12                     	;# 
  2856  0F13                     	;# 
  2857  0F14                     	;# 
  2858  0F15                     	;# 
  2859  0F16                     	;# 
  2860  0F17                     	;# 
  2861  0F18                     	;# 
  2862  0F19                     	;# 
  2863  0F1A                     	;# 
  2864  0F1B                     	;# 
  2865  0F1C                     	;# 
  2866  0F1D                     	;# 
  2867  0F1E                     	;# 
  2868  0F1F                     	;# 
  2869  0F20                     	;# 
  2870  0F21                     	;# 
  2871  0F22                     	;# 
  2872  0F23                     	;# 
  2873  0F24                     	;# 
  2874  0F25                     	;# 
  2875  0F26                     	;# 
  2876  0F27                     	;# 
  2877  0F28                     	;# 
  2878  0F29                     	;# 
  2879  0F2A                     	;# 
  2880  0F2B                     	;# 
  2881  0F2C                     	;# 
  2882  0F2D                     	;# 
  2883  0F2E                     	;# 
  2884  0F2F                     	;# 
  2885  0F30                     	;# 
  2886  0F31                     	;# 
  2887  0F32                     	;# 
  2888  0F33                     	;# 
  2889  0F34                     	;# 
  2890  0F35                     	;# 
  2891  0F36                     	;# 
  2892  0F37                     	;# 
  2893  0FE4                     	;# 
  2894  0FE5                     	;# 
  2895  0FE6                     	;# 
  2896  0FE7                     	;# 
  2897  0FE8                     	;# 
  2898  0FE9                     	;# 
  2899  0FEA                     	;# 
  2900  0FEB                     	;# 
  2901  0FED                     	;# 
  2902  0FEE                     	;# 
  2903  0FEF                     	;# 
  2904  0000                     	;# 
  2905  0001                     	;# 
  2906  0002                     	;# 
  2907  0003                     	;# 
  2908  0004                     	;# 
  2909  0005                     	;# 
  2910  0006                     	;# 
  2911  0007                     	;# 
  2912  0008                     	;# 
  2913  0009                     	;# 
  2914  000A                     	;# 
  2915  000B                     	;# 
  2916  000C                     	;# 
  2917  000D                     	;# 
  2918  000E                     	;# 
  2919  0010                     	;# 
  2920  0011                     	;# 
  2921  0012                     	;# 
  2922  0013                     	;# 
  2923  0014                     	;# 
  2924  0015                     	;# 
  2925  0015                     	;# 
  2926  0016                     	;# 
  2927  0016                     	;# 
  2928  0017                     	;# 
  2929  0018                     	;# 
  2930  0019                     	;# 
  2931  0019                     	;# 
  2932  001A                     	;# 
  2933  001B                     	;# 
  2934  001C                     	;# 
  2935  001D                     	;# 
  2936  001E                     	;# 
  2937  001F                     	;# 
  2938  008C                     	;# 
  2939  008D                     	;# 
  2940  008E                     	;# 
  2941  0090                     	;# 
  2942  0091                     	;# 
  2943  0092                     	;# 
  2944  0093                     	;# 
  2945  0094                     	;# 
  2946  0097                     	;# 
  2947  009B                     	;# 
  2948  009B                     	;# 
  2949  009C                     	;# 
  2950  009D                     	;# 
  2951  009E                     	;# 
  2952  009F                     	;# 
  2953  010C                     	;# 
  2954  010D                     	;# 
  2955  010E                     	;# 
  2956  0111                     	;# 
  2957  0112                     	;# 
  2958  0113                     	;# 
  2959  0114                     	;# 
  2960  0115                     	;# 
  2961  0116                     	;# 
  2962  0117                     	;# 
  2963  0118                     	;# 
  2964  0119                     	;# 
  2965  018C                     	;# 
  2966  018D                     	;# 
  2967  018E                     	;# 
  2968  0197                     	;# 
  2969  0199                     	;# 
  2970  0199                     	;# 
  2971  0199                     	;# 
  2972  019A                     	;# 
  2973  019A                     	;# 
  2974  019A                     	;# 
  2975  019B                     	;# 
  2976  019B                     	;# 
  2977  019B                     	;# 
  2978  019B                     	;# 
  2979  019B                     	;# 
  2980  019C                     	;# 
  2981  019C                     	;# 
  2982  019C                     	;# 
  2983  019D                     	;# 
  2984  019D                     	;# 
  2985  019D                     	;# 
  2986  019E                     	;# 
  2987  019E                     	;# 
  2988  019E                     	;# 
  2989  019F                     	;# 
  2990  019F                     	;# 
  2991  019F                     	;# 
  2992  019F                     	;# 
  2993  019F                     	;# 
  2994  020C                     	;# 
  2995  020D                     	;# 
  2996  020E                     	;# 
  2997  0211                     	;# 
  2998  0211                     	;# 
  2999  0212                     	;# 
  3000  0212                     	;# 
  3001  0213                     	;# 
  3002  0213                     	;# 
  3003  0214                     	;# 
  3004  0214                     	;# 
  3005  0215                     	;# 
  3006  0215                     	;# 
  3007  0215                     	;# 
  3008  0215                     	;# 
  3009  0216                     	;# 
  3010  0216                     	;# 
  3011  0217                     	;# 
  3012  0217                     	;# 
  3013  0219                     	;# 
  3014  021A                     	;# 
  3015  021B                     	;# 
  3016  021C                     	;# 
  3017  021D                     	;# 
  3018  021D                     	;# 
  3019  021E                     	;# 
  3020  021F                     	;# 
  3021  028C                     	;# 
  3022  028D                     	;# 
  3023  028E                     	;# 
  3024  0291                     	;# 
  3025  0291                     	;# 
  3026  0292                     	;# 
  3027  0293                     	;# 
  3028  0294                     	;# 
  3029  0295                     	;# 
  3030  0295                     	;# 
  3031  0296                     	;# 
  3032  0297                     	;# 
  3033  0298                     	;# 
  3034  029F                     	;# 
  3035  030C                     	;# 
  3036  030D                     	;# 
  3037  030E                     	;# 
  3038  0311                     	;# 
  3039  0311                     	;# 
  3040  0312                     	;# 
  3041  0313                     	;# 
  3042  0314                     	;# 
  3043  0315                     	;# 
  3044  0315                     	;# 
  3045  0316                     	;# 
  3046  0317                     	;# 
  3047  0318                     	;# 
  3048  038C                     	;# 
  3049  038D                     	;# 
  3050  038E                     	;# 
  3051  0391                     	;# 
  3052  0392                     	;# 
  3053  0393                     	;# 
  3054  0394                     	;# 
  3055  0395                     	;# 
  3056  0396                     	;# 
  3057  0397                     	;# 
  3058  0398                     	;# 
  3059  0399                     	;# 
  3060  039A                     	;# 
  3061  039C                     	;# 
  3062  039D                     	;# 
  3063  039E                     	;# 
  3064  039F                     	;# 
  3065  0411                     	;# 
  3066  0411                     	;# 
  3067  0412                     	;# 
  3068  0413                     	;# 
  3069  0414                     	;# 
  3070  0415                     	;# 
  3071  0416                     	;# 
  3072  0417                     	;# 
  3073  0418                     	;# 
  3074  0418                     	;# 
  3075  0419                     	;# 
  3076  041A                     	;# 
  3077  041B                     	;# 
  3078  041C                     	;# 
  3079  041D                     	;# 
  3080  041E                     	;# 
  3081  041F                     	;# 
  3082  0498                     	;# 
  3083  0498                     	;# 
  3084  0499                     	;# 
  3085  049A                     	;# 
  3086  049B                     	;# 
  3087  049B                     	;# 
  3088  049C                     	;# 
  3089  049D                     	;# 
  3090  049E                     	;# 
  3091  049F                     	;# 
  3092  0617                     	;# 
  3093  0618                     	;# 
  3094  0619                     	;# 
  3095  0619                     	;# 
  3096  061A                     	;# 
  3097  061B                     	;# 
  3098  061C                     	;# 
  3099  061C                     	;# 
  3100  061F                     	;# 
  3101  0691                     	;# 
  3102  0692                     	;# 
  3103  0693                     	;# 
  3104  0694                     	;# 
  3105  0695                     	;# 
  3106  0696                     	;# 
  3107  0697                     	;# 
  3108  0698                     	;# 
  3109  0699                     	;# 
  3110  0711                     	;# 
  3111  0712                     	;# 
  3112  0713                     	;# 
  3113  0714                     	;# 
  3114  0715                     	;# 
  3115  0716                     	;# 
  3116  0717                     	;# 
  3117  0718                     	;# 
  3118  0719                     	;# 
  3119  0891                     	;# 
  3120  0891                     	;# 
  3121  0891                     	;# 
  3122  0891                     	;# 
  3123  0891                     	;# 
  3124  0891                     	;# 
  3125  0892                     	;# 
  3126  0892                     	;# 
  3127  0892                     	;# 
  3128  0893                     	;# 
  3129  0893                     	;# 
  3130  0893                     	;# 
  3131  0893                     	;# 
  3132  0893                     	;# 
  3133  0893                     	;# 
  3134  0894                     	;# 
  3135  0894                     	;# 
  3136  0894                     	;# 
  3137  0895                     	;# 
  3138  0895                     	;# 
  3139  0895                     	;# 
  3140  0896                     	;# 
  3141  0896                     	;# 
  3142  0896                     	;# 
  3143  089B                     	;# 
  3144  0911                     	;# 
  3145  0912                     	;# 
  3146  0913                     	;# 
  3147  0914                     	;# 
  3148  0915                     	;# 
  3149  0916                     	;# 
  3150  0918                     	;# 
  3151  0919                     	;# 
  3152  091A                     	;# 
  3153  091B                     	;# 
  3154  091C                     	;# 
  3155  091D                     	;# 
  3156  091E                     	;# 
  3157  091F                     	;# 
  3158  0E0F                     	;# 
  3159  0E10                     	;# 
  3160  0E11                     	;# 
  3161  0E12                     	;# 
  3162  0E13                     	;# 
  3163  0E14                     	;# 
  3164  0E15                     	;# 
  3165  0E16                     	;# 
  3166  0E17                     	;# 
  3167  0E18                     	;# 
  3168  0E19                     	;# 
  3169  0E1A                     	;# 
  3170  0E1B                     	;# 
  3171  0E1C                     	;# 
  3172  0E1D                     	;# 
  3173  0E1E                     	;# 
  3174  0E1F                     	;# 
  3175  0E20                     	;# 
  3176  0E21                     	;# 
  3177  0E22                     	;# 
  3178  0E24                     	;# 
  3179  0E25                     	;# 
  3180  0E28                     	;# 
  3181  0E29                     	;# 
  3182  0E2A                     	;# 
  3183  0E2B                     	;# 
  3184  0E2C                     	;# 
  3185  0E2D                     	;# 
  3186  0E2E                     	;# 
  3187  0E2F                     	;# 
  3188  0E90                     	;# 
  3189  0E91                     	;# 
  3190  0E92                     	;# 
  3191  0E94                     	;# 
  3192  0E95                     	;# 
  3193  0E9C                     	;# 
  3194  0E9D                     	;# 
  3195  0E9E                     	;# 
  3196  0E9F                     	;# 
  3197  0EA0                     	;# 
  3198  0EA1                     	;# 
  3199  0EA2                     	;# 
  3200  0EA3                     	;# 
  3201  0EA4                     	;# 
  3202  0EA5                     	;# 
  3203  0EA6                     	;# 
  3204  0EA7                     	;# 
  3205  0F0F                     	;# 
  3206  0F10                     	;# 
  3207  0F11                     	;# 
  3208  0F12                     	;# 
  3209  0F13                     	;# 
  3210  0F14                     	;# 
  3211  0F15                     	;# 
  3212  0F16                     	;# 
  3213  0F17                     	;# 
  3214  0F18                     	;# 
  3215  0F19                     	;# 
  3216  0F1A                     	;# 
  3217  0F1B                     	;# 
  3218  0F1C                     	;# 
  3219  0F1D                     	;# 
  3220  0F1E                     	;# 
  3221  0F1F                     	;# 
  3222  0F20                     	;# 
  3223  0F21                     	;# 
  3224  0F22                     	;# 
  3225  0F23                     	;# 
  3226  0F24                     	;# 
  3227  0F25                     	;# 
  3228  0F26                     	;# 
  3229  0F27                     	;# 
  3230  0F28                     	;# 
  3231  0F29                     	;# 
  3232  0F2A                     	;# 
  3233  0F2B                     	;# 
  3234  0F2C                     	;# 
  3235  0F2D                     	;# 
  3236  0F2E                     	;# 
  3237  0F2F                     	;# 
  3238  0F30                     	;# 
  3239  0F31                     	;# 
  3240  0F32                     	;# 
  3241  0F33                     	;# 
  3242  0F34                     	;# 
  3243  0F35                     	;# 
  3244  0F36                     	;# 
  3245  0F37                     	;# 
  3246  0FE4                     	;# 
  3247  0FE5                     	;# 
  3248  0FE6                     	;# 
  3249  0FE7                     	;# 
  3250  0FE8                     	;# 
  3251  0FE9                     	;# 
  3252  0FEA                     	;# 
  3253  0FEB                     	;# 
  3254  0FED                     	;# 
  3255  0FEE                     	;# 
  3256  0FEF                     	;# 
  3257  0000                     	;# 
  3258  0001                     	;# 
  3259  0002                     	;# 
  3260  0003                     	;# 
  3261  0004                     	;# 
  3262  0005                     	;# 
  3263  0006                     	;# 
  3264  0007                     	;# 
  3265  0008                     	;# 
  3266  0009                     	;# 
  3267  000A                     	;# 
  3268  000B                     	;# 
  3269  000C                     	;# 
  3270  000D                     	;# 
  3271  000E                     	;# 
  3272  0010                     	;# 
  3273  0011                     	;# 
  3274  0012                     	;# 
  3275  0013                     	;# 
  3276  0014                     	;# 
  3277  0015                     	;# 
  3278  0015                     	;# 
  3279  0016                     	;# 
  3280  0016                     	;# 
  3281  0017                     	;# 
  3282  0018                     	;# 
  3283  0019                     	;# 
  3284  0019                     	;# 
  3285  001A                     	;# 
  3286  001B                     	;# 
  3287  001C                     	;# 
  3288  001D                     	;# 
  3289  001E                     	;# 
  3290  001F                     	;# 
  3291  008C                     	;# 
  3292  008D                     	;# 
  3293  008E                     	;# 
  3294  0090                     	;# 
  3295  0091                     	;# 
  3296  0092                     	;# 
  3297  0093                     	;# 
  3298  0094                     	;# 
  3299  0097                     	;# 
  3300  009B                     	;# 
  3301  009B                     	;# 
  3302  009C                     	;# 
  3303  009D                     	;# 
  3304  009E                     	;# 
  3305  009F                     	;# 
  3306  010C                     	;# 
  3307  010D                     	;# 
  3308  010E                     	;# 
  3309  0111                     	;# 
  3310  0112                     	;# 
  3311  0113                     	;# 
  3312  0114                     	;# 
  3313  0115                     	;# 
  3314  0116                     	;# 
  3315  0117                     	;# 
  3316  0118                     	;# 
  3317  0119                     	;# 
  3318  018C                     	;# 
  3319  018D                     	;# 
  3320  018E                     	;# 
  3321  0197                     	;# 
  3322  0199                     	;# 
  3323  0199                     	;# 
  3324  0199                     	;# 
  3325  019A                     	;# 
  3326  019A                     	;# 
  3327  019A                     	;# 
  3328  019B                     	;# 
  3329  019B                     	;# 
  3330  019B                     	;# 
  3331  019B                     	;# 
  3332  019B                     	;# 
  3333  019C                     	;# 
  3334  019C                     	;# 
  3335  019C                     	;# 
  3336  019D                     	;# 
  3337  019D                     	;# 
  3338  019D                     	;# 
  3339  019E                     	;# 
  3340  019E                     	;# 
  3341  019E                     	;# 
  3342  019F                     	;# 
  3343  019F                     	;# 
  3344  019F                     	;# 
  3345  019F                     	;# 
  3346  019F                     	;# 
  3347  020C                     	;# 
  3348  020D                     	;# 
  3349  020E                     	;# 
  3350  0211                     	;# 
  3351  0211                     	;# 
  3352  0212                     	;# 
  3353  0212                     	;# 
  3354  0213                     	;# 
  3355  0213                     	;# 
  3356  0214                     	;# 
  3357  0214                     	;# 
  3358  0215                     	;# 
  3359  0215                     	;# 
  3360  0215                     	;# 
  3361  0215                     	;# 
  3362  0216                     	;# 
  3363  0216                     	;# 
  3364  0217                     	;# 
  3365  0217                     	;# 
  3366  0219                     	;# 
  3367  021A                     	;# 
  3368  021B                     	;# 
  3369  021C                     	;# 
  3370  021D                     	;# 
  3371  021D                     	;# 
  3372  021E                     	;# 
  3373  021F                     	;# 
  3374  028C                     	;# 
  3375  028D                     	;# 
  3376  028E                     	;# 
  3377  0291                     	;# 
  3378  0291                     	;# 
  3379  0292                     	;# 
  3380  0293                     	;# 
  3381  0294                     	;# 
  3382  0295                     	;# 
  3383  0295                     	;# 
  3384  0296                     	;# 
  3385  0297                     	;# 
  3386  0298                     	;# 
  3387  029F                     	;# 
  3388  030C                     	;# 
  3389  030D                     	;# 
  3390  030E                     	;# 
  3391  0311                     	;# 
  3392  0311                     	;# 
  3393  0312                     	;# 
  3394  0313                     	;# 
  3395  0314                     	;# 
  3396  0315                     	;# 
  3397  0315                     	;# 
  3398  0316                     	;# 
  3399  0317                     	;# 
  3400  0318                     	;# 
  3401  038C                     	;# 
  3402  038D                     	;# 
  3403  038E                     	;# 
  3404  0391                     	;# 
  3405  0392                     	;# 
  3406  0393                     	;# 
  3407  0394                     	;# 
  3408  0395                     	;# 
  3409  0396                     	;# 
  3410  0397                     	;# 
  3411  0398                     	;# 
  3412  0399                     	;# 
  3413  039A                     	;# 
  3414  039C                     	;# 
  3415  039D                     	;# 
  3416  039E                     	;# 
  3417  039F                     	;# 
  3418  0411                     	;# 
  3419  0411                     	;# 
  3420  0412                     	;# 
  3421  0413                     	;# 
  3422  0414                     	;# 
  3423  0415                     	;# 
  3424  0416                     	;# 
  3425  0417                     	;# 
  3426  0418                     	;# 
  3427  0418                     	;# 
  3428  0419                     	;# 
  3429  041A                     	;# 
  3430  041B                     	;# 
  3431  041C                     	;# 
  3432  041D                     	;# 
  3433  041E                     	;# 
  3434  041F                     	;# 
  3435  0498                     	;# 
  3436  0498                     	;# 
  3437  0499                     	;# 
  3438  049A                     	;# 
  3439  049B                     	;# 
  3440  049B                     	;# 
  3441  049C                     	;# 
  3442  049D                     	;# 
  3443  049E                     	;# 
  3444  049F                     	;# 
  3445  0617                     	;# 
  3446  0618                     	;# 
  3447  0619                     	;# 
  3448  0619                     	;# 
  3449  061A                     	;# 
  3450  061B                     	;# 
  3451  061C                     	;# 
  3452  061C                     	;# 
  3453  061F                     	;# 
  3454  0691                     	;# 
  3455  0692                     	;# 
  3456  0693                     	;# 
  3457  0694                     	;# 
  3458  0695                     	;# 
  3459  0696                     	;# 
  3460  0697                     	;# 
  3461  0698                     	;# 
  3462  0699                     	;# 
  3463  0711                     	;# 
  3464  0712                     	;# 
  3465  0713                     	;# 
  3466  0714                     	;# 
  3467  0715                     	;# 
  3468  0716                     	;# 
  3469  0717                     	;# 
  3470  0718                     	;# 
  3471  0719                     	;# 
  3472  0891                     	;# 
  3473  0891                     	;# 
  3474  0891                     	;# 
  3475  0891                     	;# 
  3476  0891                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0892                     	;# 
  3480  0892                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0893                     	;# 
  3484  0893                     	;# 
  3485  0893                     	;# 
  3486  0893                     	;# 
  3487  0894                     	;# 
  3488  0894                     	;# 
  3489  0894                     	;# 
  3490  0895                     	;# 
  3491  0895                     	;# 
  3492  0895                     	;# 
  3493  0896                     	;# 
  3494  0896                     	;# 
  3495  0896                     	;# 
  3496  089B                     	;# 
  3497  0911                     	;# 
  3498  0912                     	;# 
  3499  0913                     	;# 
  3500  0914                     	;# 
  3501  0915                     	;# 
  3502  0916                     	;# 
  3503  0918                     	;# 
  3504  0919                     	;# 
  3505  091A                     	;# 
  3506  091B                     	;# 
  3507  091C                     	;# 
  3508  091D                     	;# 
  3509  091E                     	;# 
  3510  091F                     	;# 
  3511  0E0F                     	;# 
  3512  0E10                     	;# 
  3513  0E11                     	;# 
  3514  0E12                     	;# 
  3515  0E13                     	;# 
  3516  0E14                     	;# 
  3517  0E15                     	;# 
  3518  0E16                     	;# 
  3519  0E17                     	;# 
  3520  0E18                     	;# 
  3521  0E19                     	;# 
  3522  0E1A                     	;# 
  3523  0E1B                     	;# 
  3524  0E1C                     	;# 
  3525  0E1D                     	;# 
  3526  0E1E                     	;# 
  3527  0E1F                     	;# 
  3528  0E20                     	;# 
  3529  0E21                     	;# 
  3530  0E22                     	;# 
  3531  0E24                     	;# 
  3532  0E25                     	;# 
  3533  0E28                     	;# 
  3534  0E29                     	;# 
  3535  0E2A                     	;# 
  3536  0E2B                     	;# 
  3537  0E2C                     	;# 
  3538  0E2D                     	;# 
  3539  0E2E                     	;# 
  3540  0E2F                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E94                     	;# 
  3545  0E95                     	;# 
  3546  0E9C                     	;# 
  3547  0E9D                     	;# 
  3548  0E9E                     	;# 
  3549  0E9F                     	;# 
  3550  0EA0                     	;# 
  3551  0EA1                     	;# 
  3552  0EA2                     	;# 
  3553  0EA3                     	;# 
  3554  0EA4                     	;# 
  3555  0EA5                     	;# 
  3556  0EA6                     	;# 
  3557  0EA7                     	;# 
  3558  0F0F                     	;# 
  3559  0F10                     	;# 
  3560  0F11                     	;# 
  3561  0F12                     	;# 
  3562  0F13                     	;# 
  3563  0F14                     	;# 
  3564  0F15                     	;# 
  3565  0F16                     	;# 
  3566  0F17                     	;# 
  3567  0F18                     	;# 
  3568  0F19                     	;# 
  3569  0F1A                     	;# 
  3570  0F1B                     	;# 
  3571  0F1C                     	;# 
  3572  0F1D                     	;# 
  3573  0F1E                     	;# 
  3574  0F1F                     	;# 
  3575  0F20                     	;# 
  3576  0F21                     	;# 
  3577  0F22                     	;# 
  3578  0F23                     	;# 
  3579  0F24                     	;# 
  3580  0F25                     	;# 
  3581  0F26                     	;# 
  3582  0F27                     	;# 
  3583  0F28                     	;# 
  3584  0F29                     	;# 
  3585  0F2A                     	;# 
  3586  0F2B                     	;# 
  3587  0F2C                     	;# 
  3588  0F2D                     	;# 
  3589  0F2E                     	;# 
  3590  0F2F                     	;# 
  3591  0F30                     	;# 
  3592  0F31                     	;# 
  3593  0F32                     	;# 
  3594  0F33                     	;# 
  3595  0F34                     	;# 
  3596  0F35                     	;# 
  3597  0F36                     	;# 
  3598  0F37                     	;# 
  3599  0FE4                     	;# 
  3600  0FE5                     	;# 
  3601  0FE6                     	;# 
  3602  0FE7                     	;# 
  3603  0FE8                     	;# 
  3604  0FE9                     	;# 
  3605  0FEA                     	;# 
  3606  0FEB                     	;# 
  3607  0FED                     	;# 
  3608  0FEE                     	;# 
  3609  0FEF                     	;# 
  3610                           
  3611                           	psect	idataBANK1
  3612  0808                     __pidataBANK1:	
  3613                           
  3614                           ;initializer for _PWM_LoadDutyValue
  3615  0808  346C               	retlw	low _PWM2_LoadDutyValue
  3616  0809  3406               	retlw	high _PWM2_LoadDutyValue
  3617  080A  34BC               	retlw	low _PWM5_LoadDutyValue
  3618  080B  3406               	retlw	high _PWM5_LoadDutyValue
  3619  080C  3480               	retlw	low _PWM3_LoadDutyValue
  3620  080D  3406               	retlw	high _PWM3_LoadDutyValue
  3621  080E  3494               	retlw	low _PWM1_LoadDutyValue
  3622  080F  3406               	retlw	high _PWM1_LoadDutyValue
  3623  0810  34A8               	retlw	low _PWM4_LoadDutyValue
  3624  0811  3406               	retlw	high _PWM4_LoadDutyValue
  3625                           
  3626                           ;initializer for _led_state_actions
  3627  0812  3403               	retlw	low _LED_StateOffAction_OnKeyStateChanged
  3628  0813  3405               	retlw	high _LED_StateOffAction_OnKeyStateChanged
  3629  0814  3470               	retlw	low _LED_StateDayAction_OnKeyStateChanged
  3630  0815  3404               	retlw	high _LED_StateDayAction_OnKeyStateChanged
  3631  0816  3430               	retlw	low _LED_StateNightAction_OnKeyStateChanged
  3632  0817  3404               	retlw	high _LED_StateNightAction_OnKeyStateChanged
  3633  0818  34F4               	retlw	low _LED_StateBleAction_OnKeyStateChanged
  3634  0819  3414               	retlw	high _LED_StateBleAction_OnKeyStateChanged
  3635                           
  3636                           ;initializer for BLE_SendCMD@F8112
  3637  081A  3441               	retlw	65
  3638  081B  3454               	retlw	84
  3639  081C  342B               	retlw	43
  3640  081D  344F               	retlw	79
  3641  081E  344B               	retlw	75
  3642  081F  340D               	retlw	13
  3643  0820  340A               	retlw	10
  3644                           
  3645                           	psect	idataBANK2
  3646  14A3                     __pidataBANK2:	
  3647                           
  3648                           ;initializer for _MONTH_DAY
  3649  14A3  341F               	retlw	31
  3650  14A4  341C               	retlw	28
  3651  14A5  341F               	retlw	31
  3652  14A6  341E               	retlw	30
  3653  14A7  341F               	retlw	31
  3654  14A8  341E               	retlw	30
  3655  14A9  341F               	retlw	31
  3656  14AA  341F               	retlw	31
  3657  14AB  341E               	retlw	30
  3658  14AC  341F               	retlw	31
  3659  14AD  341E               	retlw	30
  3660  14AE  341F               	retlw	31
  3661                           
  3662                           	psect	idataBANK3
  3663  14CF                     __pidataBANK3:	
  3664                           
  3665                           ;initializer for BLE_CheckDevID@F8119
  3666  14CF  3433               	retlw	51
  3667  14D0  3430               	retlw	48
  3668  14D1  3433               	retlw	51
  3669  14D2  3431               	retlw	49
  3670  14D3  3433               	retlw	51
  3671  14D4  3433               	retlw	51
  3672  14D5  3433               	retlw	51
  3673  14D6  3433               	retlw	51
  3674  14D7  3433               	retlw	51
  3675  14D8  3430               	retlw	48
  3676  14D9  3433               	retlw	51
  3677  14DA  3431               	retlw	49
  3678  14DB  3433               	retlw	51
  3679  14DC  3430               	retlw	48
  3680  14DD  3433               	retlw	51
  3681  14DE  3432               	retlw	50
  3682  14DF  3400               	retlw	0
  3683                           
  3684                           	psect	nvBANK1
  3685  00EA                     __pnvBANK1:	
  3686  00EA                     _txRemain:	
  3687  00EA                     	ds	1
  3688  001F                     _T2CONbits	set	31
  3689  001D                     _TMR2	set	29
  3690  001E                     _PR2	set	30
  3691  001F                     _T2CON	set	31
  3692  0017                     _T0CON0bits	set	23
  3693  0015                     _TMR0L	set	21
  3694  0016                     _TMR0H	set	22
  3695  0018                     _T0CON1	set	24
  3696  0017                     _T0CON0	set	23
  3697  000E                     _PORTC	set	14
  3698  000B                     _INTCONbits	set	11
  3699  0010                     _PIR0bits	set	16
  3700  0011                     _PIR1bits	set	17
  3701  005F                     _GIE	set	95
  3702  0062                     _RA2	set	98
  3703  008E                     _TRISC	set	142
  3704  008D                     _TRISB	set	141
  3705  008C                     _TRISA	set	140
  3706  0090                     _PIE0bits	set	144
  3707  0091                     _PIE1bits	set	145
  3708  010E                     _LATC	set	270
  3709  010D                     _LATB	set	269
  3710  010C                     _LATA	set	268
  3711  010C                     _LATAbits	set	268
  3712  010D                     _LATBbits	set	269
  3713  086D                     _LATB5	set	2157
  3714  0871                     _LATC1	set	2161
  3715  018C                     _ANSELA	set	396
  3716  018D                     _ANSELB	set	397
  3717  018E                     _ANSELC	set	398
  3718  019A                     _TXREG	set	410
  3719  019C                     _SP1BRGH	set	412
  3720  019B                     _SP1BRGL	set	411
  3721  019E                     _TX1STA	set	414
  3722  019D                     _RC1STA	set	413
  3723  019F                     _BAUD1CON	set	415
  3724  019D                     _RC1STAbits	set	413
  3725  0199                     _RCREG	set	409
  3726  0CF1                     _TRMT	set	3313
  3727  020E                     _WPUC	set	526
  3728  020C                     _WPUA	set	524
  3729  020D                     _WPUB	set	525
  3730  0297                     _CCP2CONbits	set	663
  3731  0295                     _CCPR2L	set	661
  3732  0296                     _CCPR2H	set	662
  3733  0297                     _CCP2CON	set	663
  3734  0293                     _CCP1CONbits	set	659
  3735  029F                     _CCPTMRSbits	set	671
  3736  0291                     _CCPR1L	set	657
  3737  0292                     _CCPR1H	set	658
  3738  0293                     _CCP1CON	set	659
  3739  028E                     _ODCONC	set	654
  3740  028D                     _ODCONB	set	653
  3741  028C                     _ODCONA	set	652
  3742  0317                     _CCP4CONbits	set	791
  3743  0315                     _CCPR4L	set	789
  3744  0316                     _CCPR4H	set	790
  3745  0317                     _CCP4CON	set	791
  3746  0313                     _CCP3CONbits	set	787
  3747  0311                     _CCPR3L	set	785
  3748  0312                     _CCPR3H	set	786
  3749  0313                     _CCP3CON	set	787
  3750  0619                     _PWM5CON	set	1561
  3751  061F                     _PWMTMRSbits	set	1567
  3752  0617                     _PWM5DCL	set	1559
  3753  0618                     _PWM5DCH	set	1560
  3754  0891                     _NVMADR	set	2193
  3755  0893                     _NVMDATL	set	2195
  3756  0891                     _NVMADRL	set	2193
  3757  0892                     _NVMADRH	set	2194
  3758  0895                     _NVMCON1bits	set	2197
  3759  0896                     _NVMCON2	set	2198
  3760  0895                     _NVMCON1	set	2197
  3761  091E                     _OSCTUNE	set	2334
  3762  091F                     _OSCFRQ	set	2335
  3763  091D                     _OSCEN	set	2333
  3764  091B                     _OSCCON3	set	2331
  3765  0919                     _OSCCON1	set	2329
  3766  0E24                     _RXPPSbits	set	3620
  3767  0E0F                     _PPSLOCKbits	set	3599
  3768  0E0F                     _PPSLOCK	set	3599
  3769  0EA7                     _RC7PPSbits	set	3751
  3770  0EA6                     _RC6PPSbits	set	3750
  3771  0EA3                     _RC3PPSbits	set	3747
  3772  0EA4                     _RC4PPSbits	set	3748
  3773  0EA5                     _RC5PPSbits	set	3749
  3774  0E9C                     _RB4PPSbits	set	3740
  3775                           
  3776                           	psect	stringtext
  3777  1800                     __pstringtext:	
  3778  1800                     STR_2:	
  3779  1800  3441               	retlw	65	;'A'
  3780  1801  3454               	retlw	84	;'T'
  3781  1802  342B               	retlw	43	;'+'
  3782  1803  3441               	retlw	65	;'A'
  3783  1804  3444               	retlw	68	;'D'
  3784  1805  3456               	retlw	86	;'V'
  3785  1806  345F               	retlw	95	;'_'
  3786  1807  344D               	retlw	77	;'M'
  3787  1808  3446               	retlw	70	;'F'
  3788  1809  3452               	retlw	82	;'R'
  3789  180A  345F               	retlw	95	;'_'
  3790  180B  3453               	retlw	83	;'S'
  3791  180C  3450               	retlw	80	;'P'
  3792  180D  3443               	retlw	67	;'C'
  3793  180E  343D               	retlw	61	;'='
  3794  180F  3433               	retlw	51	;'3'
  3795  1810  3430               	retlw	48	;'0'
  3796  1811  3433               	retlw	51	;'3'
  3797  1812  3431               	retlw	49	;'1'
  3798  1813  3433               	retlw	51	;'3'
  3799  1814  3433               	retlw	51	;'3'
  3800  1815  3433               	retlw	51	;'3'
  3801  1816  3433               	retlw	51	;'3'
  3802  1817  3433               	retlw	51	;'3'
  3803  1818  3430               	retlw	48	;'0'
  3804  1819  3433               	retlw	51	;'3'
  3805  181A  3431               	retlw	49	;'1'
  3806  181B  3433               	retlw	51	;'3'
  3807  181C  3430               	retlw	48	;'0'
  3808  181D  3433               	retlw	51	;'3'
  3809  181E  3432               	retlw	50	;'2'
  3810  181F  340D               	retlw	13
  3811  1820  340A               	retlw	10
  3812  1821  3400               	retlw	0
  3813  1822                     STR_1:	
  3814  1822  3441               	retlw	65	;'A'
  3815  1823  3454               	retlw	84	;'T'
  3816  1824  342B               	retlw	43	;'+'
  3817  1825  3441               	retlw	65	;'A'
  3818  1826  3444               	retlw	68	;'D'
  3819  1827  3456               	retlw	86	;'V'
  3820  1828  345F               	retlw	95	;'_'
  3821  1829  344D               	retlw	77	;'M'
  3822  182A  3446               	retlw	70	;'F'
  3823  182B  3452               	retlw	82	;'R'
  3824  182C  345F               	retlw	95	;'_'
  3825  182D  3453               	retlw	83	;'S'
  3826  182E  3450               	retlw	80	;'P'
  3827  182F  3443               	retlw	67	;'C'
  3828  1830  343D               	retlw	61	;'='
  3829  1831  343F               	retlw	63	;'?'
  3830  1832  340D               	retlw	13
  3831  1833  340A               	retlw	10
  3832  1834  3400               	retlw	0
  3833  1835                     STR_4:	
  3834  1835  3441               	retlw	65	;'A'
  3835  1836  3454               	retlw	84	;'T'
  3836  1837  342B               	retlw	43	;'+'
  3837  1838  344D               	retlw	77	;'M'
  3838  1839  344F               	retlw	79	;'O'
  3839  183A  3444               	retlw	68	;'D'
  3840  183B  3445               	retlw	69	;'E'
  3841  183C  343D               	retlw	61	;'='
  3842  183D  3444               	retlw	68	;'D'
  3843  183E  3441               	retlw	65	;'A'
  3844  183F  3454               	retlw	84	;'T'
  3845  1840  3441               	retlw	65	;'A'
  3846  1841  340D               	retlw	13
  3847  1842  340A               	retlw	10
  3848  1843  3400               	retlw	0
  3849  1844                     STR_3:	
  3850  1844  3441               	retlw	65	;'A'
  3851  1845  3454               	retlw	84	;'T'
  3852  1846  342B               	retlw	43	;'+'
  3853  1847  3453               	retlw	83	;'S'
  3854  1848  3445               	retlw	69	;'E'
  3855  1849  3454               	retlw	84	;'T'
  3856  184A  343D               	retlw	61	;'='
  3857  184B  3431               	retlw	49	;'1'
  3858  184C  340D               	retlw	13
  3859  184D  340A               	retlw	10
  3860  184E  3400               	retlw	0
  3861                           
  3862                           	psect	cinit
  3863  0C14                     start_initialization:	
  3864                           ; #config settings
  3865                           
  3866  0C14                     __initialization:	
  3867                           
  3868                           ; Initialize objects allocated to BANK1
  3869  0C14  3008               	movlw	low __pidataBANK1
  3870  0C15  0084               	movwf	4
  3871  0C16  3088               	movlw	(high __pidataBANK1)| (0+128)
  3872  0C17  0085               	movwf	5
  3873  0C18  30D1               	movlw	low __pdataBANK1
  3874  0C19  0086               	movwf	6
  3875  0C1A  3000               	movlw	high __pdataBANK1
  3876  0C1B  0087               	movwf	7
  3877  0C1C  3019               	movlw	25
  3878  0C1D  3188  2002  318C   	fcall	init_ram
  3879                           
  3880                           ; Initialize objects allocated to BANK2
  3881  0C20  30A3               	movlw	low __pidataBANK2
  3882  0C21  0084               	movwf	4
  3883  0C22  3094               	movlw	(high __pidataBANK2)| (0+128)
  3884  0C23  0085               	movwf	5
  3885  0C24  3057               	movlw	low __pdataBANK2
  3886  0C25  0086               	movwf	6
  3887  0C26  3001               	movlw	high __pdataBANK2
  3888  0C27  0087               	movwf	7
  3889  0C28  300C               	movlw	12
  3890  0C29  3188  2002  318C   	fcall	init_ram
  3891                           
  3892                           ; Initialize objects allocated to BANK3
  3893  0C2C  30CF               	movlw	low __pidataBANK3
  3894  0C2D  0084               	movwf	4
  3895  0C2E  3094               	movlw	(high __pidataBANK3)| (0+128)
  3896  0C2F  0085               	movwf	5
  3897  0C30  30A0               	movlw	low __pdataBANK3
  3898  0C31  0086               	movwf	6
  3899  0C32  3001               	movlw	high __pdataBANK3
  3900  0C33  0087               	movwf	7
  3901  0C34  3011               	movlw	17
  3902  0C35  3188  2002  318C   	fcall	init_ram
  3903  0C38  30A0               	movlw	low __pbssBANK1
  3904                           
  3905                           ; Clear objects allocated to COMMON
  3906  0C39  01FD               	clrf	__pbssCOMMON& (0+127)
  3907                           
  3908                           ; Clear objects allocated to BANK0
  3909  0C3A  01EF               	clrf	__pbssBANK0& (0+127)
  3910                           
  3911                           ; Clear objects allocated to BANK1
  3912  0C3B  0084               	movwf	4
  3913  0C3C  3000               	movlw	high __pbssBANK1
  3914  0C3D  0085               	movwf	5
  3915  0C3E  3031               	movlw	49
  3916  0C3F  3194  2485  318C   	fcall	clear_ram0
  3917                           
  3918                           ; Clear objects allocated to BANK2
  3919  0C42  3020               	movlw	low __pbssBANK2
  3920  0C43  0084               	movwf	4
  3921  0C44  3001               	movlw	high __pbssBANK2
  3922  0C45  0085               	movwf	5
  3923  0C46  3037               	movlw	55
  3924  0C47  3194  2485  318C   	fcall	clear_ram0
  3925                           
  3926                           ; Clear objects allocated to BANK4
  3927  0C4A  3020               	movlw	low __pbssBANK4
  3928  0C4B  0084               	movwf	4
  3929  0C4C  3002               	movlw	high __pbssBANK4
  3930  0C4D  0085               	movwf	5
  3931  0C4E  3040               	movlw	64
  3932  0C4F  3194  2485  318C   	fcall	clear_ram0
  3933                           
  3934                           ; Clear objects allocated to BANK5
  3935  0C52  30A0               	movlw	low __pbssBANK5
  3936  0C53  0084               	movwf	4
  3937  0C54  3002               	movlw	high __pbssBANK5
  3938  0C55  0085               	movwf	5
  3939  0C56  3040               	movlw	64
  3940  0C57  3194  2485  318C   	fcall	clear_ram0
  3941  0C5A                     end_of_initialization:	
  3942                           ;End of C runtime variable initialization code
  3943                           
  3944  0C5A                     __end_of__initialization:	
  3945  0C5A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3946  0C5B  0020               	movlb	0
  3947  0C5C  2C5D               	ljmp	_main	;jump to C main() function
  3948  0C5D                     __pmaintext:	
  3949                           ; 1 bytes @ 0x4F
  3950 ;;
  3951 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3952 ;;
  3953 ;; *************** function _main *****************
  3954 ;; Defined at:
  3955 ;;		line 57 in file "src/main.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : B1F/0
  3966 ;;		On exit  : 1F/1
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels required when called:   16
  3975 ;; This function calls:
  3976 ;;		_BLE_DecodeData
  3977 ;;		_BLE_Initialize
  3978 ;;		_BLE_ReadyToReceive
  3979 ;;		_BLE_ReceiveComplete
  3980 ;;		_BLE_StartReceive
  3981 ;;		_BLE_StopReceive
  3982 ;;		_LED_ActionOnSecond
  3983 ;;		_LED_Initialize
  3984 ;;		_RTC_Initialize
  3985 ;;		_RTC_IsSecondReady
  3986 ;;		_SYSTEM_Initialize
  3987 ;;		_TMR0_StartTimer
  3988 ;;		_TMR2_StartTimer
  3989 ;;		_registerCallback
  3990 ;; This function is called by:
  3991 ;;		Startup code after reset
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _main
  3997  0C5D                     _main:	
  3998                           
  3999                           ;main.c: 59: SYSTEM_Initialize( );
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4003  0C5D  3196  2649  318C   	fcall	_SYSTEM_Initialize
  4004                           
  4005                           ;main.c: 61: BLE_Initialize( );
  4006  0C60  3197  2712  318C   	fcall	_BLE_Initialize
  4007                           
  4008                           ;main.c: 62: registerCallback( );
  4009  0C63  3195  2590  318C   	fcall	_registerCallback
  4010                           
  4011                           ;main.c: 64: (INTCONbits.GIE = 1);
  4012  0C66  178B               	bsf	11,7	;volatile
  4013                           
  4014                           ;main.c: 66: (INTCONbits.PEIE = 1);
  4015  0C67  170B               	bsf	11,6	;volatile
  4016                           
  4017                           ;main.c: 69: LED_Initialize( );
  4018  0C68  25F0  318C         	fcall	_LED_Initialize
  4019                           
  4020                           ;main.c: 71: RTC_Initialize( );
  4021  0C6A  27E8  318C         	fcall	_RTC_Initialize
  4022                           
  4023                           ;main.c: 72: TMR0_StartTimer( );
  4024  0C6C  27B3  318C         	fcall	_TMR0_StartTimer
  4025                           
  4026                           ;main.c: 74: TMR2_StartTimer( );
  4027  0C6E  27B6  318C         	fcall	_TMR2_StartTimer
  4028  0C70                     l769:	
  4029                           ;main.c: 76: while ( 1 ) {
  4030                           
  4031  0C70  0064               	clrwdt	;# 
  4032                           
  4033                           ;main.c: 79: if ( BLE_ReadyToReceive( ) ) {
  4034  0C71  25E2  318C         	fcall	_BLE_ReadyToReceive
  4035  0C73  3A00               	xorlw	0
  4036  0C74  1903               	skipnz
  4037  0C75  2C78               	goto	l5257
  4038                           
  4039                           ;main.c: 80: BLE_StartReceive( );
  4040  0C76  279A  318C         	fcall	_BLE_StartReceive
  4041  0C78                     l5257:	
  4042                           
  4043                           ;main.c: 81: }
  4044                           ;main.c: 82: if ( BLE_ReceiveComplete( ) ) {
  4045  0C78  25E9  318C         	fcall	_BLE_ReceiveComplete
  4046  0C7A  3A00               	xorlw	0
  4047  0C7B  1903               	skipnz
  4048  0C7C  2C81               	goto	l5263
  4049                           
  4050                           ;main.c: 83: BLE_DecodeData( );
  4051  0C7D  248A  318C         	fcall	_BLE_DecodeData
  4052                           
  4053                           ;main.c: 84: BLE_StopReceive( );
  4054  0C7F  27A9  318C         	fcall	_BLE_StopReceive
  4055  0C81                     l5263:	
  4056                           
  4057                           ;main.c: 85: }
  4058                           ;main.c: 87: if ( RTC_IsSecondReady( ) ) {
  4059  0C81  25F4  318C         	fcall	_RTC_IsSecondReady
  4060  0C83  3A00               	xorlw	0
  4061  0C84  1903               	skipnz
  4062  0C85  2C70               	goto	l769
  4063                           
  4064                           ;main.c: 88: LED_ActionOnSecond( );
  4065  0C86  3188  2021  318C   	fcall	_LED_ActionOnSecond
  4066  0C89  2C70               	goto	l769
  4067  0C8A                     __end_of_main:	
  4068  0C8A                     __ptext58:	
  4069 ;; *************** function _BLE_DecodeData *****************
  4070 ;; Defined at:
  4071 ;;		line 182 in file "src/ble.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 1D/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4089 ;;Total ram usage:        2 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   13
  4092 ;; This function calls:
  4093 ;;		_BLE_SendDeviceData
  4094 ;;		_BLE_SendOTAAck
  4095 ;;		_LED_IndicateBle
  4096 ;;		_LED_ManualDecrease
  4097 ;;		_LED_ManualIncrease
  4098 ;;		_LED_PrepareToSavePara
  4099 ;;		_LED_SetAuto
  4100 ;;		_LED_SetCustom
  4101 ;;		_LED_SetCycle
  4102 ;;		_LED_SetManualBrights
  4103 ;;		_LED_SetOn
  4104 ;;		_LED_SetPreviewBrights
  4105 ;;		_LED_StartFlash
  4106 ;;		_LED_StartPreview
  4107 ;;		_LED_StopPreview
  4108 ;;		_RTC_SetCurrentTime
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _BLE_DecodeData
  4116  0C8A                     _BLE_DecodeData:	
  4117                           
  4118                           ;ble.c: 183: if ( rxBuf[0] != 0x68 || rcvXor != 0 ) {
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _BLE_DecodeData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4122  0C8A  3068               	movlw	104
  4123  0C8B  0024               	movlb	4	; select bank4
  4124  0C8C  0620               	xorwf	_rxBuf^(0+512),w
  4125  0C8D  1D03               	btfss	3,2
  4126  0C8E  0008               	return
  4127  0C8F  0021               	movlb	1	; select bank1
  4128  0C90  0837               	movf	_rcvXor^(0+128),w	;volatile
  4129  0C91  1D03               	btfss	3,2
  4130  0C92  0008               	return
  4131  0C93  2D29               	goto	l5071
  4132  0C94                     l4977:	
  4133                           
  4134                           ;ble.c: 188: if ( nRcvIdx == 4 ) {
  4135  0C94  3004               	movlw	4
  4136  0C95  067D               	xorwf	_nRcvIdx,w	;volatile
  4137  0C96  1D03               	btfss	3,2
  4138  0C97  0008               	return
  4139                           
  4140                           ;ble.c: 189: if ( LED_SetAuto( rxBuf[2] ) ) {
  4141  0C98  0822               	movf	(_rxBuf^(0+512)+2),w
  4142  0C99  260E  318C         	fcall	_LED_SetAuto
  4143  0C9B                     L9:	
  4144  0C9B  3A00               	xorlw	0
  4145  0C9C  1903               	skipnz
  4146  0C9D  0008               	return
  4147                           
  4148                           ;ble.c: 190: LED_PrepareToSavePara( );
  4149  0C9E  25B0  318C         	fcall	_LED_PrepareToSavePara
  4150  0CA0                     l4983:	
  4151                           
  4152                           ;ble.c: 191: BLE_SendDeviceData( );
  4153  0CA0  2D47               	ljmp	l4291
  4154  0CA1                     l4985:	
  4155                           
  4156                           ;ble.c: 197: if ( nRcvIdx == 4 ) {
  4157  0CA1  3004               	movlw	4
  4158  0CA2  067D               	xorwf	_nRcvIdx,w	;volatile
  4159  0CA3  1D03               	btfss	3,2
  4160  0CA4  0008               	return
  4161                           
  4162                           ;ble.c: 198: if ( LED_SetOn( rxBuf[2] ) ) {
  4163  0CA5  0822               	movf	(_rxBuf^(0+512)+2),w
  4164  0CA6  25FA  318C         	fcall	_LED_SetOn
  4165  0CA8  2C9B               	goto	L9
  4166  0CA9                     l4993:	
  4167                           
  4168                           ;ble.c: 206: if ( nRcvIdx == 3 + 2 * 5 ) {
  4169  0CA9  300D               	movlw	13
  4170  0CAA  067D               	xorwf	_nRcvIdx,w	;volatile
  4171  0CAB  1D03               	btfss	3,2
  4172  0CAC  0008               	return
  4173                           
  4174                           ;ble.c: 207: if ( LED_SetManualBrights( &rxBuf[2] ) ) {
  4175  0CAD  3022               	movlw	(low ((_rxBuf| (0+512)+2)))& (0+255)
  4176  0CAE  274D  318C         	fcall	_LED_SetManualBrights
  4177  0CB0                     L10:	
  4178  0CB0  3A00               	xorlw	0
  4179  0CB1  1903               	skipnz
  4180  0CB2  0008               	return
  4181                           
  4182                           ;ble.c: 208: LED_PrepareToSavePara( );
  4183  0CB3  2DB0               	ljmp	l4361
  4184  0CB4                     l4999:	
  4185                           
  4186                           ;ble.c: 214: if ( nRcvIdx == 3 ) {
  4187  0CB4  3003               	movlw	3
  4188  0CB5  067D               	xorwf	_nRcvIdx,w	;volatile
  4189  0CB6  1D03               	btfss	3,2
  4190  0CB7  0008               	return
  4191  0CB8  2CA0               	goto	l4983
  4192  0CB9                     l5003:	
  4193                           
  4194                           ;ble.c: 220: if ( nRcvIdx == 4 ) {
  4195  0CB9  3004               	movlw	4
  4196  0CBA  067D               	xorwf	_nRcvIdx,w	;volatile
  4197  0CBB  1D03               	btfss	3,2
  4198  0CBC  0008               	return
  4199                           
  4200                           ;ble.c: 221: if ( LED_SetCustom( rxBuf[2] ) ) {
  4201  0CBD  0822               	movf	(_rxBuf^(0+512)+2),w
  4202  0CBE  3188  203A  318C   	fcall	_LED_SetCustom
  4203  0CC1  2C9B               	goto	L9
  4204  0CC2                     l5011:	
  4205                           
  4206                           ;ble.c: 229: if ( nRcvIdx == 2 * 5 + 11 ) {
  4207  0CC2  3015               	movlw	21
  4208  0CC3  067D               	xorwf	_nRcvIdx,w	;volatile
  4209  0CC4  1D03               	btfss	3,2
  4210  0CC5  0008               	return
  4211                           
  4212                           ;ble.c: 230: if ( LED_SetCycle( &rxBuf[2] ) ) {
  4213  0CC6  3022               	movlw	(low ((_rxBuf| (0+512)+2)))& (0+255)
  4214  0CC7  2730  318C         	fcall	_LED_SetCycle
  4215  0CC9  2C9B               	goto	L9
  4216  0CCA                     l5019:	
  4217                           
  4218                           ;ble.c: 238: if ( nRcvIdx == 5 ) {
  4219  0CCA  3005               	movlw	5
  4220  0CCB  067D               	xorwf	_nRcvIdx,w	;volatile
  4221  0CCC  1D03               	btfss	3,2
  4222  0CCD  0008               	return
  4223                           
  4224                           ;ble.c: 239: if ( LED_ManualIncrease( rxBuf[2], rxBuf[3] ) ) {
  4225  0CCE  0823               	movf	(_rxBuf^(0+512)+3),w
  4226  0CCF  0020               	movlb	0	; select bank0
  4227  0CD0  00A9               	movwf	LED_ManualIncrease@delta
  4228  0CD1  0024               	movlb	4	; select bank4
  4229  0CD2  0822               	movf	(_rxBuf^(0+512)+2),w
  4230  0CD3  26EB  318C         	fcall	_LED_ManualIncrease
  4231  0CD5  2CB0               	goto	L10
  4232  0CD6                     l5025:	
  4233                           
  4234                           ;ble.c: 246: if ( nRcvIdx == 5 ) {
  4235  0CD6  3005               	movlw	5
  4236  0CD7  067D               	xorwf	_nRcvIdx,w	;volatile
  4237  0CD8  1D03               	btfss	3,2
  4238  0CD9  0008               	return
  4239                           
  4240                           ;ble.c: 247: if ( LED_ManualDecrease( rxBuf[2], rxBuf[3] ) ) {
  4241  0CDA  0823               	movf	(_rxBuf^(0+512)+3),w
  4242  0CDB  0020               	movlb	0	; select bank0
  4243  0CDC  00A9               	movwf	LED_ManualDecrease@delta
  4244  0CDD  0024               	movlb	4	; select bank4
  4245  0CDE  0822               	movf	(_rxBuf^(0+512)+2),w
  4246  0CDF  25C3  318C         	fcall	_LED_ManualDecrease
  4247  0CE1  2CB0               	goto	L10
  4248  0CE2                     l5031:	
  4249                           
  4250                           ;ble.c: 254: if ( nRcvIdx == 3 + 2 * 5 ) {
  4251  0CE2  300D               	movlw	13
  4252  0CE3  067D               	xorwf	_nRcvIdx,w	;volatile
  4253  0CE4  1D03               	btfss	3,2
  4254  0CE5  0008               	return
  4255                           
  4256                           ;ble.c: 255: if ( LED_SetPreviewBrights( &rxBuf[2] ) ) {
  4257  0CE6  3022               	movlw	(low ((_rxBuf| (0+512)+2)))& (0+255)
  4258  0CE7  3195  255E  318C   	fcall	_LED_SetPreviewBrights
  4259  0CEA  3A00               	xorlw	0
  4260  0CEB  1903               	skipnz
  4261  0CEC  0008               	return
  4262                           
  4263                           ;ble.c: 257: LED_StartPreview( );
  4264  0CED  2FF7               	ljmp	l4533
  4265  0CEE                     l5037:	
  4266                           
  4267                           ;ble.c: 263: if ( nRcvIdx == 3 ) {
  4268  0CEE  3003               	movlw	3
  4269  0CEF  067D               	xorwf	_nRcvIdx,w	;volatile
  4270  0CF0  1D03               	btfss	3,2
  4271  0CF1  0008               	return
  4272                           
  4273                           ;ble.c: 264: LED_StopPreview( );
  4274  0CF2  2FFC               	ljmp	l4537
  4275  0CF3                     l5041:	
  4276                           
  4277                           ;ble.c: 269: if ( nRcvIdx == 10 ) {
  4278  0CF3  300A               	movlw	10
  4279  0CF4  067D               	xorwf	_nRcvIdx,w	;volatile
  4280  0CF5  1D03               	btfss	3,2
  4281  0CF6  0008               	return
  4282                           
  4283                           ;ble.c: 270: RTC_SetCurrentTime( &rxBuf[2] );
  4284  0CF7  3022               	movlw	(low ((_rxBuf| (0+512)+2)))& (0+255)
  4285  0CF8  2788  318C         	fcall	_RTC_SetCurrentTime
  4286                           
  4287                           ;ble.c: 272: LED_IndicateBle( );
  4288  0CFA  25BF  318C         	fcall	_LED_IndicateBle
  4289  0CFC  2CA0               	goto	l4983
  4290  0CFD                     l5049:	
  4291                           
  4292                           ;ble.c: 278: if ( nRcvIdx == 3 ) {
  4293  0CFD  3003               	movlw	3
  4294  0CFE  067D               	xorwf	_nRcvIdx,w	;volatile
  4295  0CFF  1D03               	btfss	3,2
  4296  0D00  0008               	return
  4297                           
  4298                           ;ble.c: 279: LED_StartFlash( );
  4299  0D01  2FF2               	ljmp	l4553
  4300  0D02                     l5053:	
  4301                           
  4302                           ;ble.c: 284: if ( nRcvIdx == 5 ) {
  4303  0D02  3005               	movlw	5
  4304  0D03  067D               	xorwf	_nRcvIdx,w	;volatile
  4305  0D04  1D03               	btfss	3,2
  4306  0D05  0008               	return
  4307                           
  4308                           ;ble.c: 285: NVMADR = 8192 - 1;
  4309  0D06  301F               	movlw	31
  4310  0D07  0031               	movlb	17	; select bank17
  4311  0D08  0092               	movwf	18	;volatile
  4312  0D09  30FF               	movlw	255
  4313  0D0A  0091               	movwf	17	;volatile
  4314                           
  4315                           ;ble.c: 286: NVMCON1 = 0x94;
  4316  0D0B  3094               	movlw	148
  4317  0D0C  0095               	movwf	21	;volsfr
  4318                           
  4319                           ;ble.c: 287: NVMCON2 = 0x55;
  4320  0D0D  3055               	movlw	85
  4321  0D0E  0096               	movwf	22	;volsfr
  4322                           
  4323                           ;ble.c: 288: NVMCON2 = 0xAA;
  4324  0D0F  30AA               	movlw	170
  4325  0D10  0096               	movwf	22	;volsfr
  4326                           
  4327                           ;ble.c: 289: NVMCON1bits.WR = 1;
  4328  0D11  1495               	bsf	21,1	;volsfr
  4329                           
  4330                           ;ble.c: 290: __nop();
  4331  0D12  0000               	nop
  4332                           
  4333                           ;ble.c: 291: __nop();
  4334  0D13  0000               	nop
  4335  0D14                     l163:	
  4336                           ;ble.c: 292: while ( NVMCON1bits.WR );
  4337                           
  4338  0D14  0031               	movlb	17	; select bank17
  4339  0D15  1895               	btfsc	21,1	;volsfr
  4340  0D16  2D14               	goto	l163
  4341                           
  4342                           ;ble.c: 293: NVMCON1bits.WREN = 0;
  4343  0D17  1115               	bcf	21,2	;volsfr
  4344                           
  4345                           ;ble.c: 295: BLE_SendOTAAck( );
  4346  0D18  2535  318C         	fcall	_BLE_SendOTAAck
  4347                           
  4348                           ;ble.c: 296: _delay((unsigned long)((96)*(16000000/4000.0)));
  4349  0D1A  3002               	movlw	2
  4350  0D1B  0020               	movlb	0	; select bank0
  4351  0D1C  00AC               	movwf	??_BLE_DecodeData+1
  4352  0D1D  30F3               	movlw	243
  4353  0D1E  00AB               	movwf	??_BLE_DecodeData
  4354  0D1F  30B0               	movlw	176
  4355  0D20                     u5057:	
  4356  0D20  0B89               	decfsz	9,f
  4357  0D21  2D20               	goto	u5057
  4358  0D22  0BAB               	decfsz	??_BLE_DecodeData,f
  4359  0D23  2D20               	goto	u5057
  4360  0D24  0BAC               	decfsz	??_BLE_DecodeData+1,f
  4361  0D25  2D20               	goto	u5057
  4362  0D26  0000               	nop
  4363  0D27  0001               	reset	;# 
  4364  0D28  0008               	return
  4365  0D29                     l5071:	
  4366  0D29  0024               	movlb	4	; select bank4
  4367  0D2A  0821               	movf	(_rxBuf^(0+512)+1),w
  4368                           
  4369                           ; Switch size 1, requested type "space"
  4370                           ; Number of cases is 13, Range of values is 0 to 15
  4371                           ; switch strategies available:
  4372                           ; Name         Instructions Cycles
  4373                           ; direct_byte           38     6 (fixed)
  4374                           ; simple_byte           40    21 (average)
  4375                           ; jumptable            260     6 (fixed)
  4376                           ;	Chosen strategy is direct_byte
  4377  0D2B  0084               	movwf	4
  4378  0D2C  3010               	movlw	16
  4379  0D2D  0204               	subwf	4,w
  4380  0D2E  1803               	skipnc
  4381  0D2F  0008               	return
  4382  0D30  3187               	movlp	high S5297
  4383  0D31  3504               	lslf	4,w
  4384  0D32  3EDF               	addlw	low S5297
  4385  0D33  0082               	movwf	2
  4386  0D34                     l126:	
  4387  0D34  0008               	return
  4388  0D35                     __end_of_BLE_DecodeData:	
  4389  0D35                     __ptext85:	
  4390 ;; *************** function _BLE_SendOTAAck *****************
  4391 ;; Defined at:
  4392 ;;		line 172 in file "src/ble.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 1F/11
  4403 ;;		On exit  : 1F/2
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:   11
  4413 ;; This function calls:
  4414 ;;		_BLE_StartTransmit
  4415 ;;		_BLE_StopTransmit
  4416 ;;		_EUSART_Write
  4417 ;; This function is called by:
  4418 ;;		_BLE_DecodeData
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _BLE_SendOTAAck
  4424  0D35                     _BLE_SendOTAAck:	
  4425                           
  4426                           ;ble.c: 173: BLE_StartTransmit( );
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _BLE_SendOTAAck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4430  0D35  25A4  318C         	fcall	_BLE_StartTransmit
  4431                           
  4432                           ;ble.c: 174: EUSART_Write( 0x68 );
  4433  0D37  3068               	movlw	104
  4434  0D38  2582  318C         	fcall	_EUSART_Write
  4435                           
  4436                           ;ble.c: 175: EUSART_Write( 0x00 );
  4437  0D3A  3000               	movlw	0
  4438  0D3B  2582  318C         	fcall	_EUSART_Write
  4439                           
  4440                           ;ble.c: 176: EUSART_Write( 0x00 );
  4441  0D3D  3000               	movlw	0
  4442  0D3E  2582  318C         	fcall	_EUSART_Write
  4443                           
  4444                           ;ble.c: 177: EUSART_Write( 0x00 );
  4445  0D40  3000               	movlw	0
  4446  0D41  2582  318C         	fcall	_EUSART_Write
  4447                           
  4448                           ;ble.c: 178: EUSART_Write( 0x68 );
  4449  0D43  3068               	movlw	104
  4450  0D44  2582  318C         	fcall	_EUSART_Write
  4451                           
  4452                           ;ble.c: 179: BLE_StopTransmit( );
  4453  0D46  2DB5               	ljmp	l103
  4454  0D47                     __end_of_BLE_SendOTAAck:	
  4455  0D47                     __ptext86:	
  4456 ;; *************** function _BLE_SendDeviceData *****************
  4457 ;; Defined at:
  4458 ;;		line 140 in file "src/ble.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  i               1    3[BANK0 ] unsigned char 
  4463 ;;  xor             1    2[BANK0 ] unsigned char 
  4464 ;;  len             1    1[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 18/1
  4471 ;;		On exit  : 1F/2
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:   11
  4481 ;; This function calls:
  4482 ;;		_BLE_StartTransmit
  4483 ;;		_BLE_StopTransmit
  4484 ;;		_EUSART_Write
  4485 ;; This function is called by:
  4486 ;;		_BLE_DecodeData
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function _BLE_SendDeviceData
  4492  0D47                     _BLE_SendDeviceData:	
  4493  0D47                     l4291:	
  4494                           ;incstack = 0
  4495                           ; Regs used in _BLE_SendDeviceData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4496                           
  4497                           
  4498                           ;ble.c: 141: uint8_t i;
  4499                           ;ble.c: 142: uint8_t len;
  4500                           ;ble.c: 143: uint8_t xor = 0;
  4501  0D47  0020               	movlb	0	; select bank0
  4502  0D48  01A2               	clrf	BLE_SendDeviceData@xor
  4503                           
  4504                           ;ble.c: 144: BLE_StartTransmit( );
  4505  0D49  25A4  318C         	fcall	_BLE_StartTransmit
  4506                           
  4507                           ;ble.c: 145: xor ^= EUSART_Write( 0x68 );
  4508  0D4B  3068               	movlw	104
  4509  0D4C  2582  318C         	fcall	_EUSART_Write
  4510  0D4E  06A2               	xorwf	BLE_SendDeviceData@xor,f
  4511                           
  4512                           ;ble.c: 146: xor ^= EUSART_Write( 0x05 );
  4513  0D4F  3005               	movlw	5
  4514  0D50  2582  318C         	fcall	_EUSART_Write
  4515  0D52  06A2               	xorwf	BLE_SendDeviceData@xor,f
  4516                           
  4517                           ;ble.c: 147: xor ^= EUSART_Write( gLedPara.fAuto );
  4518  0D53  0022               	movlb	2	; select bank2
  4519  0D54  0820               	movf	_gLedPara^(0+256),w	;volatile
  4520  0D55  3901               	andlw	1
  4521  0D56  2582  318C         	fcall	_EUSART_Write
  4522  0D58  06A2               	xorwf	BLE_SendDeviceData@xor,f
  4523                           
  4524                           ;ble.c: 148: if ( gLedPara.fAuto ) {
  4525  0D59  0022               	movlb	2	; select bank2
  4526  0D5A  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  4527  0D5B  2D6D               	goto	l4313
  4528                           
  4529                           ;ble.c: 149: len = sizeof (gLedPara.aPara.array );
  4530  0D5C  3012               	movlw	18
  4531  0D5D  0020               	movlb	0	; select bank0
  4532  0D5E  00A1               	movwf	BLE_SendDeviceData@len
  4533                           
  4534                           ;ble.c: 150: for ( i = 0; i < len; i++ ) {
  4535  0D5F  01A3               	clrf	BLE_SendDeviceData@i
  4536  0D60                     l4311:	
  4537  0D60  0821               	movf	BLE_SendDeviceData@len,w
  4538  0D61  0223               	subwf	BLE_SendDeviceData@i,w
  4539  0D62  1803               	btfsc	3,0
  4540  0D63  2D7E               	goto	l4323
  4541                           
  4542                           ;ble.c: 151: xor ^= EUSART_Write( gLedPara.aPara.array[i] );
  4543  0D64  0823               	movf	BLE_SendDeviceData@i,w
  4544  0D65  3E41               	addlw	(low ((_gLedPara| (0+256)+33)))& (0+255)
  4545  0D66  27E3  318C         	fcall	PL80	;call to abstracted procedure
  4546  0D68  2582  318C         	fcall	_EUSART_Write
  4547  0D6A  06A2               	xorwf	BLE_SendDeviceData@xor,f
  4548  0D6B  0AA3               	incf	BLE_SendDeviceData@i,f
  4549  0D6C  2D60               	goto	l4311
  4550  0D6D                     l4313:	
  4551                           
  4552                           ;ble.c: 154: len = sizeof (gLedPara.mPara.array );
  4553  0D6D  3020               	movlw	32
  4554  0D6E  0020               	movlb	0	; select bank0
  4555  0D6F  00A1               	movwf	BLE_SendDeviceData@len
  4556                           
  4557                           ;ble.c: 155: for ( i = 0; i < len; i++ ) {
  4558  0D70  01A3               	clrf	BLE_SendDeviceData@i
  4559  0D71                     l4321:	
  4560  0D71  0821               	movf	BLE_SendDeviceData@len,w
  4561  0D72  0223               	subwf	BLE_SendDeviceData@i,w
  4562  0D73  1803               	btfsc	3,0
  4563  0D74  2D7E               	goto	l4323
  4564                           
  4565                           ;ble.c: 156: xor ^= EUSART_Write( gLedPara.mPara.array[i] );
  4566  0D75  0823               	movf	BLE_SendDeviceData@i,w
  4567  0D76  3E21               	addlw	(low ((_gLedPara| (0+256)+1)))& (0+255)
  4568  0D77  27E3  318C         	fcall	PL80	;call to abstracted procedure
  4569  0D79  2582  318C         	fcall	_EUSART_Write
  4570  0D7B  06A2               	xorwf	BLE_SendDeviceData@xor,f
  4571  0D7C  0AA3               	incf	BLE_SendDeviceData@i,f
  4572  0D7D  2D71               	goto	l4321
  4573  0D7E                     l4323:	
  4574                           
  4575                           ;ble.c: 157: }
  4576                           ;ble.c: 158: }
  4577                           ;ble.c: 159: EUSART_Write( xor );
  4578  0D7E  0822               	movf	BLE_SendDeviceData@xor,w
  4579  0D7F  2582  318C         	fcall	_EUSART_Write
  4580                           
  4581                           ;ble.c: 160: BLE_StopTransmit( );
  4582  0D81  2DB5               	ljmp	l103
  4583  0D82                     __end_of_BLE_SendDeviceData:	
  4584  0D82                     __ptext87:	
  4585 ;; *************** function _EUSART_Write *****************
  4586 ;; Defined at:
  4587 ;;		line 90 in file "src/eusart.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  byte            1    wreg     unsigned char 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  byte            1    0[BANK0 ] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      unsigned char 
  4594 ;; Registers used:
  4595 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 1F/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;Total ram usage:        1 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:   10
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_BLE_SendCMD
  4612 ;;		_BLE_SendDeviceData
  4613 ;;		_BLE_SendOTAAck
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _EUSART_Write
  4619  0D82                     _EUSART_Write:	
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4623                           ;EUSART_Write@byte stored from wreg
  4624  0D82  0020               	movlb	0	; select bank0
  4625  0D83  00A0               	movwf	EUSART_Write@byte
  4626  0D84                     l3773:	
  4627                           ;eusart.c: 91: while ( 0 == txRemain );
  4628                           
  4629  0D84  0021               	movlb	1	; select bank1
  4630  0D85  086A               	movf	_txRemain^(0+128),w
  4631  0D86  1903               	btfsc	3,2
  4632  0D87  2D84               	goto	l3773
  4633                           
  4634                           ;eusart.c: 93: if ( !PIE1bits.TXIE ) {
  4635  0D88  1A11               	btfsc	17,4	;volatile
  4636  0D89  2D8F               	goto	l892
  4637                           
  4638                           ;eusart.c: 94: TXREG = byte;
  4639  0D8A  0020               	movlb	0	; select bank0
  4640  0D8B  0820               	movf	EUSART_Write@byte,w
  4641  0D8C  0023               	movlb	3	; select bank3
  4642  0D8D  009A               	movwf	26	;volatile
  4643                           
  4644                           ;eusart.c: 95: } else {
  4645  0D8E  2D9F               	goto	l3787
  4646  0D8F                     l892:	
  4647                           
  4648                           ;eusart.c: 96: PIE1bits.TXIE = 0;
  4649  0D8F  1211               	bcf	17,4	;volatile
  4650                           
  4651                           ;eusart.c: 97: txBuf[txHead++] = byte;
  4652  0D90  082F               	movf	_txHead^(0+128),w
  4653  0D91  3EA0               	addlw	(low (_txBuf| (0+512)))& (0+255)
  4654  0D92  0086               	movwf	6
  4655  0D93  3002               	movlw	2	; select bank5/6
  4656  0D94  0087               	movwf	7
  4657  0D95  0020               	movlb	0	; select bank0
  4658  0D96  0820               	movf	EUSART_Write@byte,w
  4659  0D97  0081               	movwf	1
  4660  0D98  0021               	movlb	1	; select bank1
  4661  0D99  3040               	movlw	64
  4662  0D9A  0AAF               	incf	_txHead^(0+128),f
  4663                           
  4664                           ;eusart.c: 98: if ( sizeof ( txBuf ) <= txHead ) {
  4665  0D9B  022F               	subwf	_txHead^(0+128),w
  4666  0D9C  1803               	btfsc	3,0
  4667                           
  4668                           ;eusart.c: 99: txHead = 0;
  4669  0D9D  01AF               	clrf	_txHead^(0+128)
  4670                           
  4671                           ;eusart.c: 100: }
  4672                           ;eusart.c: 101: txRemain--;
  4673  0D9E  03EA               	decf	_txRemain^(0+128),f
  4674  0D9F                     l3787:	
  4675                           
  4676                           ;eusart.c: 102: }
  4677                           ;eusart.c: 103: PIE1bits.TXIE = 1;
  4678  0D9F  0021               	movlb	1	; select bank1
  4679  0DA0  1611               	bsf	17,4	;volatile
  4680                           
  4681                           ;eusart.c: 104: return byte;
  4682  0DA1  0020               	movlb	0	; select bank0
  4683  0DA2  0820               	movf	EUSART_Write@byte,w
  4684  0DA3  0008               	return
  4685  0DA4                     __end_of_EUSART_Write:	
  4686  0DA4                     __ptext89:	
  4687 ;; *************** function _BLE_StartTransmit *****************
  4688 ;; Defined at:
  4689 ;;		line 120 in file "src/ble.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg
  4698 ;; Tracked objects:
  4699 ;;		On entry : E/11
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;Total ram usage:        1 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:   10
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_BLE_SendDeviceData
  4714 ;;		_BLE_SendOTAAck
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _BLE_StartTransmit
  4720  0DA4                     _BLE_StartTransmit:	
  4721                           
  4722                           ;ble.c: 121: LATC1 = 0;
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in _BLE_StartTransmit: [wreg]
  4726  0DA4  0022               	movlb	2	; select bank2
  4727  0DA5  108E               	bcf	14,1	;volatile
  4728                           
  4729                           ;ble.c: 122: _delay((unsigned long)((800)*(16000000/4000000.0)));
  4730  0DA6  3005               	movlw	5
  4731  0DA7  0020               	movlb	0	; select bank0
  4732  0DA8  00A0               	movwf	??_BLE_StartTransmit
  4733  0DA9  3026               	movlw	38
  4734  0DAA                     u5077:	
  4735  0DAA  0B89               	decfsz	9,f
  4736  0DAB  2DAA               	goto	u5077
  4737  0DAC  0BA0               	decfsz	??_BLE_StartTransmit,f
  4738  0DAD  2DAA               	goto	u5077
  4739  0DAE  0000               	nop
  4740  0DAF  0008               	return
  4741  0DB0                     __end_of_BLE_StartTransmit:	
  4742  0DB0                     __ptext79:	
  4743 ;; *************** function _LED_PrepareToSavePara *****************
  4744 ;; Defined at:
  4745 ;;		line 67 in file "src/led.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg
  4754 ;; Tracked objects:
  4755 ;;		On entry : 1C/0
  4756 ;;		On exit  : 1F/1
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   10
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_BLE_DecodeData
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function _LED_PrepareToSavePara
  4775  0DB0                     _LED_PrepareToSavePara:	
  4776  0DB0                     l4361:	
  4777                           ;incstack = 0
  4778                           ; Regs used in _LED_PrepareToSavePara: [wreg]
  4779                           
  4780                           
  4781                           ;led.c: 68: gLedRunPara.fSave = 1;
  4782  0DB0  0021               	movlb	1	; select bank1
  4783  0DB1  14B8               	bsf	_gLedRunPara^(0+128),1	;volatile
  4784                           
  4785                           ;led.c: 69: gLedRunPara.nSaveDelayCount = 3;
  4786  0DB2  3003               	movlw	3
  4787  0DB3  00BB               	movwf	(_gLedRunPara^(0+128)+3)	;volatile
  4788  0DB4  0008               	return
  4789  0DB5                     __end_of_LED_PrepareToSavePara:	
  4790  0DB5                     __ptext88:	
  4791 ;; *************** function _BLE_StopTransmit *****************
  4792 ;; Defined at:
  4793 ;;		line 134 in file "src/ble.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg
  4802 ;; Tracked objects:
  4803 ;;		On entry : 1F/0
  4804 ;;		On exit  : 1F/2
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   10
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_BLE_SendDeviceData
  4818 ;;		_BLE_SendOTAAck
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function _BLE_StopTransmit
  4824  0DB5                     _BLE_StopTransmit:	
  4825  0DB5                     l103:	
  4826                           ;ble.c: 135: while ( !TRMT );
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _BLE_StopTransmit: [wreg]
  4830                           
  4831  0DB5  0023               	movlb	3	; select bank3
  4832  0DB6  1C9E               	btfss	30,1	;volatile
  4833  0DB7  2DB5               	goto	l103
  4834                           
  4835                           ;ble.c: 136: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4836  0DB8  30A0               	movlw	160
  4837  0DB9                     u5067:	
  4838  0DB9  3200               	nop2
  4839  0DBA  0B89               	decfsz	9,f
  4840  0DBB  2DB9               	goto	u5067
  4841                           
  4842                           ;ble.c: 137: LATC1 = 1;
  4843  0DBC  0022               	movlb	2	; select bank2
  4844  0DBD  148E               	bsf	14,1	;volatile
  4845  0DBE  0008               	return
  4846  0DBF                     __end_of_BLE_StopTransmit:	
  4847  0DBF                     __ptext84:	
  4848 ;; *************** function _LED_IndicateBle *****************
  4849 ;; Defined at:
  4850 ;;		line 280 in file "src/led.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 1C/0
  4861 ;;		On exit  : 1F/2
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:   10
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_BLE_DecodeData
  4875 ;;		_LED_InitStatus
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _LED_IndicateBle
  4881  0DBF                     _LED_IndicateBle:	
  4882                           
  4883                           ;led.c: 281: gLedPara.fSta = 3;
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in _LED_IndicateBle: [wreg+status,2+status,0]
  4887  0DBF  3006               	movlw	6
  4888  0DC0  0022               	movlb	2	; select bank2
  4889  0DC1  3186  2E14         	ljmp	PL64	;call to abstracted procedure
  4890  0DC3                     __end_of_LED_IndicateBle:	
  4891  0DC3                     __ptext82:	
  4892 ;; *************** function _LED_ManualDecrease *****************
  4893 ;; Defined at:
  4894 ;;		line 775 in file "src/led.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  chn             1    wreg     unsigned char 
  4897 ;;  delta           1    9[BANK0 ] unsigned char 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  chn             1   10[BANK0 ] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      unsigned char 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 1F/4
  4906 ;;		On exit  : 1C/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4909 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:   11
  4916 ;; This function calls:
  4917 ;;		_Util_Decrease
  4918 ;; This function is called by:
  4919 ;;		_BLE_DecodeData
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function _LED_ManualDecrease
  4925  0DC3                     _LED_ManualDecrease:	
  4926                           
  4927                           ;incstack = 0
  4928                           ; Regs used in _LED_ManualDecrease: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4929                           ;LED_ManualDecrease@chn stored from wreg
  4930  0DC3  0020               	movlb	0	; select bank0
  4931  0DC4  00AA               	movwf	LED_ManualDecrease@chn
  4932                           
  4933                           ;led.c: 776: if ( !gLedRunPara.find && !gLedPara.fAuto && gLedPara.mPara.manualPara.fOn 
      +                          && chn < 5 ) {
  4934  0DC5  0021               	movlb	1	; select bank1
  4935  0DC6  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
  4936  0DC7  3400               	retlw	0
  4937  0DC8  0022               	movlb	2	; select bank2
  4938  0DC9  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  4939  0DCA  1C21               	btfss	(_gLedPara^(0+256)+1),0	;volatile
  4940  0DCB  3400               	retlw	0
  4941  0DCC  3005               	movlw	5
  4942  0DCD  0020               	movlb	0	; select bank0
  4943  0DCE  022A               	subwf	LED_ManualDecrease@chn,w
  4944  0DCF  1803               	skipnc
  4945  0DD0  3400               	retlw	0
  4946                           
  4947                           ;led.c: 777: Util_Decrease( ( uint16_t * const ) &gLedPara.mPara.manualPara.nBrt[chn], d
      +                          elta, 0 );
  4948  0DD1  352A               	lslf	LED_ManualDecrease@chn,w
  4949  0DD2  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  4950  0DD3  00A0               	movwf	Util_Decrease@psrc
  4951  0DD4  3001               	movlw	1
  4952  0DD5  00A1               	movwf	Util_Decrease@psrc+1
  4953  0DD6  27DE  318C         	fcall	PL78	;call to abstracted procedure
  4954  0DD8  26C4  318C         	fcall	_Util_Decrease
  4955                           
  4956                           ;led.c: 778: Util_Decrease( ( uint16_t * const ) &gLedRunPara.nTargetBrt[chn], delta, 0 
      +                          );
  4957  0DDA  352A               	lslf	LED_ManualDecrease@chn,w
  4958  0DDB  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  4959  0DDC  00A0               	movwf	Util_Decrease@psrc
  4960  0DDD  01A1               	clrf	Util_Decrease@psrc+1
  4961  0DDE  27DE  318C         	fcall	PL78	;call to abstracted procedure
  4962  0DE0  26C4               	fcall	_Util_Decrease
  4963                           
  4964                           ;led.c: 779: return 1;
  4965  0DE1  3401               	retlw	1
  4966  0DE2                     __end_of_LED_ManualDecrease:	
  4967                           ;led.c: 780: }
  4968                           ;led.c: 781: return 0;
  4969                           
  4970  0DE2                     __ptext54:	
  4971 ;; *************** function _BLE_ReadyToReceive *****************
  4972 ;; Defined at:
  4973 ;;		line 337 in file "src/ble.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 1D/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:   10
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           
  5002                           ;psect for function _BLE_ReadyToReceive
  5003  0DE2                     _BLE_ReadyToReceive:	
  5004                           
  5005                           ;ble.c: 338: if ( ( RA2 == 0 ) && LATC1 ) {
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _BLE_ReadyToReceive: [wreg]
  5009  0DE2  0020               	movlb	0	; select bank0
  5010  0DE3  190C               	btfsc	12,2	;volatile
  5011  0DE4  3400               	retlw	0
  5012  0DE5  0022               	movlb	2	; select bank2
  5013  0DE6  188E               	btfsc	14,1	;volatile
  5014                           
  5015                           ;ble.c: 339: return 1;
  5016  0DE7  3401               	retlw	1
  5017                           
  5018                           ;ble.c: 340: }
  5019                           ;ble.c: 341: return 0;
  5020  0DE8  3400               	retlw	0
  5021  0DE9                     __end_of_BLE_ReadyToReceive:	
  5022  0DE9                     __ptext53:	
  5023 ;; *************** function _BLE_ReceiveComplete *****************
  5024 ;; Defined at:
  5025 ;;		line 369 in file "src/ble.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      unsigned char 
  5032 ;; Registers used:
  5033 ;;		wreg
  5034 ;; Tracked objects:
  5035 ;;		On entry : 1D/0
  5036 ;;		On exit  : 1D/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:   10
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _BLE_ReceiveComplete
  5055  0DE9                     _BLE_ReceiveComplete:	
  5056                           
  5057                           ;ble.c: 370: if ( RA2 && ( LATC1 == 0 ) ) {
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _BLE_ReceiveComplete: [wreg]
  5061  0DE9  0020               	movlb	0	; select bank0
  5062  0DEA  1D0C               	btfss	12,2	;volatile
  5063  0DEB  3400               	retlw	0
  5064  0DEC  0022               	movlb	2	; select bank2
  5065  0DED  1C8E               	btfss	14,1	;volatile
  5066                           
  5067                           ;ble.c: 371: return 1;
  5068  0DEE  3401               	retlw	1
  5069                           
  5070                           ;ble.c: 372: }
  5071                           ;ble.c: 373: return 0;
  5072  0DEF  3400               	retlw	0
  5073  0DF0                     __end_of_BLE_ReceiveComplete:	
  5074  0DF0                     __ptext21:	
  5075 ;; *************** function _LED_Initialize *****************
  5076 ;; Defined at:
  5077 ;;		line 902 in file "src/led.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 1F/1
  5088 ;;		On exit  : 1D/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:        0 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   15
  5098 ;; This function calls:
  5099 ;;		_LED_InitPara
  5100 ;;		_LED_InitStatus
  5101 ;; This function is called by:
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _LED_Initialize
  5108  0DF0                     _LED_Initialize:	
  5109                           
  5110                           ;led.c: 903: LED_InitPara( );
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _LED_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5114  0DF0  3188  208E  318C   	fcall	_LED_InitPara
  5115                           
  5116                           ;led.c: 904: LED_InitStatus( );
  5117  0DF3  2E23               	ljmp	l4071
  5118  0DF4                     __end_of_LED_Initialize:	
  5119  0DF4                     __ptext19:	
  5120 ;; *************** function _RTC_IsSecondReady *****************
  5121 ;; Defined at:
  5122 ;;		line 116 in file "src/rtc.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      unsigned char 
  5129 ;; Registers used:
  5130 ;;		wreg
  5131 ;; Tracked objects:
  5132 ;;		On entry : 1C/0
  5133 ;;		On exit  : 1F/1
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:   10
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_main
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           
  5151                           ;psect for function _RTC_IsSecondReady
  5152  0DF4                     _RTC_IsSecondReady:	
  5153                           
  5154                           ;rtc.c: 117: if ( prvStatus.fSec ) {
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in _RTC_IsSecondReady: [wreg]
  5158  0DF4  0021               	movlb	1	; select bank1
  5159  0DF5  1C31               	btfss	_prvStatus^(0+128),0
  5160  0DF6  3400               	retlw	0
  5161  0DF7  3001               	movlw	1
  5162                           
  5163                           ;rtc.c: 118: prvStatus.fSec = 0;
  5164  0DF8  1031               	bcf	_prvStatus^(0+128),0
  5165                           
  5166                           ;rtc.c: 119: return 1;
  5167  0DF9  0008               	return
  5168  0DFA                     __end_of_RTC_IsSecondReady:	
  5169                           ;rtc.c: 120: }
  5170                           ;rtc.c: 121: return 0;
  5171                           
  5172  0DFA                     __ptext70:	
  5173 ;; *************** function _LED_SetOn *****************
  5174 ;; Defined at:
  5175 ;;		line 726 in file "src/led.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  on              1    wreg     unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  on              1    1[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      unsigned char 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 1F/4
  5186 ;;		On exit  : 1C/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;Total ram usage:        1 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   11
  5196 ;; This function calls:
  5197 ;;		_LED_TurnOffRamp
  5198 ;;		_LED_TurnOnRamp
  5199 ;; This function is called by:
  5200 ;;		_BLE_DecodeData
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _LED_SetOn
  5206  0DFA                     _LED_SetOn:	
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _LED_SetOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5210                           ;LED_SetOn@on stored from wreg
  5211  0DFA  0020               	movlb	0	; select bank0
  5212  0DFB  00A1               	movwf	LED_SetOn@on
  5213                           
  5214                           ;led.c: 727: if ( !gLedRunPara.find && !gLedPara.fAuto ) {
  5215  0DFC  0021               	movlb	1	; select bank1
  5216  0DFD  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
  5217  0DFE  3400               	retlw	0
  5218  0DFF  0022               	movlb	2	; select bank2
  5219  0E00  1820               	btfsc	_gLedPara^(0+256),0	;volatile
  5220  0E01  3400               	retlw	0
  5221                           
  5222                           ;led.c: 728: if ( on ) {
  5223  0E02  0020               	movlb	0	; select bank0
  5224  0E03  0821               	movf	LED_SetOn@on,w
  5225  0E04  1903               	btfsc	3,2
  5226  0E05  2E0A               	goto	l664
  5227                           
  5228                           ;led.c: 729: gLedPara.mPara.manualPara.fOn = 1;
  5229  0E06  0022               	movlb	2	; select bank2
  5230  0E07  1421               	bsf	(_gLedPara^(0+256)+1),0	;volatile
  5231                           
  5232                           ;led.c: 730: LED_TurnOnRamp( );
  5233  0E08  26B0               	fcall	_LED_TurnOnRamp
  5234                           
  5235                           ;led.c: 731: } else {
  5236  0E09  3401               	retlw	1
  5237  0E0A                     l664:	
  5238                           
  5239                           ;led.c: 732: gLedPara.mPara.manualPara.fOn = 0;
  5240  0E0A  0022               	movlb	2	; select bank2
  5241  0E0B  1021               	bcf	(_gLedPara^(0+256)+1),0	;volatile
  5242                           
  5243                           ;led.c: 733: LED_TurnOffRamp( );
  5244  0E0C  2649               	fcall	_LED_TurnOffRamp
  5245                           
  5246                           ;led.c: 734: }
  5247                           ;led.c: 735: return 1;
  5248  0E0D  3401               	retlw	1
  5249  0E0E                     __end_of_LED_SetOn:	
  5250                           ;led.c: 736: }
  5251                           ;led.c: 737: return 0;
  5252                           
  5253  0E0E                     __ptext76:	
  5254 ;; *************** function _LED_SetAuto *****************
  5255 ;; Defined at:
  5256 ;;		line 709 in file "src/led.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  a               1    wreg     unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  a               1    1[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      unsigned char 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 1F/4
  5267 ;;		On exit  : 1C/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;Total ram usage:        1 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:   11
  5277 ;; This function calls:
  5278 ;;		_LED_TurnOffRamp
  5279 ;;		_LED_TurnOnRamp
  5280 ;; This function is called by:
  5281 ;;		_BLE_DecodeData
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _LED_SetAuto
  5287  0E0E                     _LED_SetAuto:	
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _LED_SetAuto: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5291                           ;LED_SetAuto@a stored from wreg
  5292  0E0E  0020               	movlb	0	; select bank0
  5293  0E0F  00A1               	movwf	LED_SetAuto@a
  5294                           
  5295                           ;led.c: 710: if ( !gLedRunPara.find && !gLedRunPara.fPrev ) {
  5296  0E10  0021               	movlb	1	; select bank1
  5297  0E11  1C38               	btfss	_gLedRunPara^(0+128),0	;volatile
  5298  0E12  1938               	btfsc	_gLedRunPara^(0+128),2	;volatile
  5299  0E13  3400               	retlw	0
  5300                           
  5301                           ;led.c: 711: if ( a ) {
  5302  0E14  0020               	movlb	0	; select bank0
  5303  0E15  0821               	movf	LED_SetAuto@a,w
  5304  0E16  1903               	btfsc	3,2
  5305  0E17  2E1B               	goto	l656
  5306                           
  5307                           ;led.c: 712: gLedPara.fAuto = 1;
  5308  0E18  0022               	movlb	2	; select bank2
  5309  0E19  1420               	bsf	_gLedPara^(0+256),0	;volatile
  5310                           
  5311                           ;led.c: 713: } else {
  5312  0E1A  3401               	retlw	1
  5313  0E1B                     l656:	
  5314                           
  5315                           ;led.c: 714: gLedPara.fAuto = 0;
  5316  0E1B  0022               	movlb	2	; select bank2
  5317  0E1C  1020               	bcf	_gLedPara^(0+256),0	;volatile
  5318                           
  5319                           ;led.c: 715: if ( gLedPara.mPara.manualPara.fOn ) {
  5320  0E1D  1C21               	btfss	(_gLedPara^(0+256)+1),0	;volatile
  5321  0E1E  2E21               	goto	l4351
  5322                           
  5323                           ;led.c: 716: LED_TurnOnRamp( );
  5324  0E1F  26B0               	fcall	_LED_TurnOnRamp
  5325                           
  5326                           ;led.c: 717: } else {
  5327  0E20  3401               	retlw	1
  5328  0E21                     l4351:	
  5329                           
  5330                           ;led.c: 718: LED_TurnOffRamp( );
  5331  0E21  2649               	fcall	_LED_TurnOffRamp
  5332                           
  5333                           ;led.c: 719: }
  5334                           ;led.c: 720: }
  5335                           ;led.c: 721: return 1;
  5336  0E22  3401               	retlw	1
  5337  0E23                     __end_of_LED_SetAuto:	
  5338                           ;led.c: 722: }
  5339                           ;led.c: 723: return 0;
  5340                           
  5341  0E23                     __ptext38:	
  5342 ;; *************** function _LED_InitStatus *****************
  5343 ;; Defined at:
  5344 ;;		line 866 in file "src/led.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  sta             1    6[BANK0 ] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 1C/1
  5355 ;;		On exit  : 1D/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;Total ram usage:        1 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:   13
  5365 ;; This function calls:
  5366 ;;		_LED_IndicateBle
  5367 ;;		_LED_IndicateDay
  5368 ;;		_LED_IndicateNight
  5369 ;;		_LED_IndicateOff
  5370 ;;		_LED_TurnOffRamp
  5371 ;;		_LED_TurnOnRamp
  5372 ;;		_LED_UpdateDayBright
  5373 ;;		_LED_UpdateNightBright
  5374 ;; This function is called by:
  5375 ;;		_LED_FindDeviceFlash
  5376 ;;		_LED_Initialize
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _LED_InitStatus
  5382  0E23                     _LED_InitStatus:	
  5383  0E23                     l4071:	
  5384                           ;incstack = 0
  5385                           ; Regs used in _LED_InitStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5386                           
  5387                           
  5388                           ;led.c: 867: uint8_t sta = gLedPara.fSta;
  5389  0E23  0022               	movlb	2	; select bank2
  5390  0E24  0C20               	rrf	_gLedPara^(0+256),w	;volatile
  5391  0E25  3903               	andlw	3
  5392  0E26  0020               	movlb	0	; select bank0
  5393  0E27  00A6               	movwf	LED_InitStatus@sta
  5394                           
  5395                           ; Switch size 1, requested type "space"
  5396                           ; Number of cases is 4, Range of values is 0 to 3
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte           13     7 (average)
  5400                           ; direct_byte           14     6 (fixed)
  5401                           ; jumptable            260     6 (fixed)
  5402                           ;	Chosen strategy is simple_byte
  5403                           
  5404                           ;led.c: 868: switch ( sta ) {
  5405  0E28  1903               	skipnz
  5406  0E29  2E34               	goto	l4073
  5407  0E2A  3A01               	xorlw	1	; case 1
  5408  0E2B  1903               	skipnz
  5409  0E2C  2E37               	goto	l4077
  5410  0E2D  3A03               	xorlw	3	; case 2
  5411  0E2E  1903               	skipnz
  5412  0E2F  2E3C               	goto	l4083
  5413  0E30  3A01               	xorlw	1	; case 3
  5414  0E31  1903               	skipnz
  5415  0E32  2E41               	goto	l4089
  5416  0E33  2E48               	goto	l733
  5417  0E34                     l4073:	
  5418                           
  5419                           ;led.c: 870: LED_TurnOffRamp( );
  5420  0E34  2649               	fcall	_LED_TurnOffRamp
  5421                           
  5422                           ;led.c: 871: LED_IndicateOff( );
  5423  0E35  3186  2E00         	ljmp	PL44
  5424  0E37                     l4077:	
  5425                           ;led.c: 872: break;
  5426                           
  5427                           
  5428                           ;led.c: 875: LED_UpdateDayBright( );
  5429  0E37  2658  318C         	fcall	_LED_UpdateDayBright
  5430                           
  5431                           ;led.c: 876: LED_IndicateDay( );
  5432  0E39  2654  318C         	fcall	_LED_IndicateDay
  5433  0E3B                     l4081:	
  5434                           
  5435                           ;led.c: 877: LED_TurnOnRamp( );
  5436  0E3B  2EB0               	ljmp	l3825
  5437  0E3C                     l4083:	
  5438                           ;led.c: 878: break;
  5439                           
  5440                           
  5441                           ;led.c: 881: LED_UpdateNightBright( );
  5442  0E3C  2670  318C         	fcall	_LED_UpdateNightBright
  5443                           
  5444                           ;led.c: 882: LED_IndicateNight( );
  5445  0E3E  2656  318C         	fcall	_LED_IndicateNight
  5446  0E40  2E3B               	goto	l4081
  5447  0E41                     l4089:	
  5448                           
  5449                           ;led.c: 887: LED_IndicateBle( );
  5450  0E41  25BF  318C         	fcall	_LED_IndicateBle
  5451                           
  5452                           ;led.c: 888: if ( !gLedPara.fAuto ) {
  5453  0E43  1820               	btfsc	_gLedPara^(0+256),0	;volatile
  5454  0E44  0008               	return
  5455                           
  5456                           ;led.c: 889: if ( gLedPara.mPara.manualPara.fOn ) {
  5457  0E45  1821               	btfsc	(_gLedPara^(0+256)+1),0	;volatile
  5458  0E46  2E3B               	goto	l4081
  5459                           
  5460                           ;led.c: 892: LED_TurnOffRamp( );
  5461  0E47  2E49               	ljmp	l3837
  5462  0E48                     l733:	
  5463  0E48  0008               	return
  5464  0E49                     __end_of_LED_InitStatus:	
  5465  0E49                     __ptext78:	
  5466 ;; *************** function _LED_TurnOffRamp *****************
  5467 ;; Defined at:
  5468 ;;		line 195 in file "src/led.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  i               1    0[BANK0 ] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 1C/0
  5479 ;;		On exit  : 1F/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;Total ram usage:        1 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:   10
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_LED_SetAuto
  5493 ;;		_LED_SetOn
  5494 ;;		_LED_InitStatus
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _LED_TurnOffRamp
  5500  0E49                     _LED_TurnOffRamp:	
  5501  0E49                     l3837:	
  5502                           ;incstack = 0
  5503                           ; Regs used in _LED_TurnOffRamp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5504                           
  5505                           
  5506                           ;led.c: 196: for ( uint8_t i = 0; i < 5; i++ ) {
  5507  0E49  0020               	movlb	0	; select bank0
  5508  0E4A  01A0               	clrf	LED_TurnOffRamp@i
  5509  0E4B                     l3843:	
  5510                           
  5511                           ;led.c: 197: gLedRunPara.nTargetBrt[i] = 0;
  5512  0E4B  3520               	lslf	LED_TurnOffRamp@i,w
  5513  0E4C  27BF  318C         	fcall	PL26	;call to abstracted procedure
  5514  0E4E  3005               	movlw	5
  5515  0E4F  0AA0               	incf	LED_TurnOffRamp@i,f
  5516  0E50  0220               	subwf	LED_TurnOffRamp@i,w
  5517  0E51  1803               	btfsc	3,0
  5518  0E52  0008               	return
  5519  0E53  2E4B               	goto	l3843
  5520  0E54                     __end_of_LED_TurnOffRamp:	
  5521  0E54                     __ptext43:	
  5522 ;; *************** function _LED_IndicateDay *****************
  5523 ;; Defined at:
  5524 ;;		line 262 in file "src/led.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 1F/0
  5535 ;;		On exit  : 1F/2
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:   10
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_LED_InitStatus
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _LED_IndicateDay
  5554  0E54                     _LED_IndicateDay:	
  5555                           
  5556                           ;led.c: 263: gLedPara.fSta = 1;
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _LED_IndicateDay: [wreg+status,2+status,0]
  5560  0E54  3185  2DDE         	ljmp	PL18	;call to abstracted procedure
  5561  0E56                     __end_of_LED_IndicateDay:	
  5562  0E56                     __ptext42:	
  5563 ;; *************** function _LED_IndicateNight *****************
  5564 ;; Defined at:
  5565 ;;		line 271 in file "src/led.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 1F/0
  5576 ;;		On exit  : 1F/2
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:   10
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_LED_InitStatus
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _LED_IndicateNight
  5595  0E56                     _LED_IndicateNight:	
  5596                           
  5597                           ;led.c: 272: gLedPara.fSta = 2;
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _LED_IndicateNight: [wreg+status,2+status,0]
  5601  0E56  3185  2DE7         	ljmp	PL22	;call to abstracted procedure
  5602  0E58                     __end_of_LED_IndicateNight:	
  5603  0E58                     __ptext40:	
  5604 ;; *************** function _LED_UpdateDayBright *****************
  5605 ;; Defined at:
  5606 ;;		line 287 in file "src/led.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;		None
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  i               1    5[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 1C/0
  5617 ;;		On exit  : 1F/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;Total ram usage:        1 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   12
  5627 ;; This function calls:
  5628 ;;		_LED_UpdatePWM
  5629 ;; This function is called by:
  5630 ;;		_LED_InitStatus
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _LED_UpdateDayBright
  5636  0E58                     _LED_UpdateDayBright:	
  5637                           
  5638                           ;led.c: 288: for ( uint8_t i = 0; i < 5; i++ ) {
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _LED_UpdateDayBright: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5642  0E58  0020               	movlb	0	; select bank0
  5643  0E59  01A5               	clrf	LED_UpdateDayBright@i
  5644  0E5A                     l3879:	
  5645                           
  5646                           ;led.c: 289: gLedPara.mPara.manualPara.nBrt[i] = gLedPara.tPara.nDayBrt;
  5647  0E5A  3525               	lslf	LED_UpdateDayBright@i,w
  5648  0E5B  27D9  318C         	fcall	PL72	;call to abstracted procedure
  5649                           
  5650                           ;led.c: 290: gLedRunPara.nTargetBrt[i] = gLedPara.tPara.nDayBrt;
  5651  0E5D  27B8  318C         	fcall	PL24	;call to abstracted procedure
  5652  0E5F  3525               	lslf	LED_UpdateDayBright@i,w
  5653  0E60  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  5654  0E61  0086               	movwf	6
  5655  0E62  0187               	clrf	7
  5656                           
  5657                           ;led.c: 291: gLedRunPara.nCurrentBrt[i] = gLedPara.tPara.nDayBrt;
  5658  0E63  27B8  318C         	fcall	PL24	;call to abstracted procedure
  5659  0E65  3525               	lslf	LED_UpdateDayBright@i,w
  5660  0E66  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
  5661  0E67  0086               	movwf	6
  5662  0E68  27B8  318C         	fcall	PL24	;call to abstracted procedure
  5663  0E6A  3005               	movlw	5
  5664  0E6B  0AA5               	incf	LED_UpdateDayBright@i,f
  5665  0E6C  0225               	subwf	LED_UpdateDayBright@i,w
  5666  0E6D  1C03               	skipc
  5667  0E6E  2E5A               	goto	l3879
  5668                           
  5669                           ;led.c: 292: }
  5670                           ;led.c: 293: LED_UpdatePWM( );
  5671  0E6F  2E98               	ljmp	l3709
  5672  0E70                     __end_of_LED_UpdateDayBright:	
  5673  0E70                     __ptext39:	
  5674 ;; *************** function _LED_UpdateNightBright *****************
  5675 ;; Defined at:
  5676 ;;		line 304 in file "src/led.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  i               1    5[BANK0 ] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 1C/0
  5687 ;;		On exit  : 1F/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:   12
  5697 ;; This function calls:
  5698 ;;		_LED_UpdatePWM
  5699 ;; This function is called by:
  5700 ;;		_LED_InitStatus
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function _LED_UpdateNightBright
  5706  0E70                     _LED_UpdateNightBright:	
  5707                           
  5708                           ;led.c: 305: for ( uint8_t i = 0; i < 5; i++ ) {
  5709                           
  5710                           ;incstack = 0
  5711                           ; Regs used in _LED_UpdateNightBright: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5712  0E70  0020               	movlb	0	; select bank0
  5713  0E71  01A5               	clrf	LED_UpdateNightBright@i
  5714  0E72                     l3893:	
  5715                           
  5716                           ;led.c: 306: if ( i == 1 ) {
  5717  0E72  0B25               	decfsz	LED_UpdateNightBright@i,w
  5718  0E73  2E87               	goto	l3897
  5719                           
  5720                           ;led.c: 307: gLedPara.mPara.manualPara.nBrt[i] = gLedPara.tPara.nNightBrt;
  5721  0E74  3525               	lslf	LED_UpdateNightBright@i,w
  5722  0E75  27D9  318C         	fcall	PL72	;call to abstracted procedure
  5723  0E77  27C6  318C         	fcall	PL48	;call to abstracted procedure
  5724                           
  5725                           ;led.c: 308: gLedRunPara.nTargetBrt[i] = gLedPara.tPara.nNightBrt;
  5726  0E79  0020               	movlb	0	; select bank0
  5727  0E7A  3525               	lslf	LED_UpdateNightBright@i,w
  5728  0E7B  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  5729  0E7C  0086               	movwf	6
  5730  0E7D  0187               	clrf	7
  5731  0E7E  27C6  318C         	fcall	PL48	;call to abstracted procedure
  5732                           
  5733                           ;led.c: 309: gLedRunPara.nCurrentBrt[i] = gLedPara.tPara.nNightBrt;
  5734  0E80  0020               	movlb	0	; select bank0
  5735  0E81  3525               	lslf	LED_UpdateNightBright@i,w
  5736  0E82  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
  5737  0E83  0086               	movwf	6
  5738  0E84  27C6  318C         	fcall	PL48	;call to abstracted procedure
  5739                           
  5740                           ;led.c: 310: } else {
  5741  0E86  2E91               	goto	l3899
  5742  0E87                     l3897:	
  5743                           
  5744                           ;led.c: 311: gLedPara.mPara.manualPara.nBrt[i] = 0;
  5745  0E87  3525               	lslf	LED_UpdateNightBright@i,w
  5746  0E88  3185  25F0  318C   	fcall	PL40	;call to abstracted procedure
  5747                           
  5748                           ;led.c: 312: gLedRunPara.nTargetBrt[i] = 0;
  5749  0E8B  3525               	lslf	LED_UpdateNightBright@i,w
  5750  0E8C  27BF               	fcall	PL26	;call to abstracted procedure
  5751                           
  5752                           ;led.c: 313: gLedRunPara.nCurrentBrt[i] = 0;
  5753  0E8D  3525               	lslf	LED_UpdateNightBright@i,w
  5754  0E8E  3186  260E  318C   	fcall	PL62	;call to abstracted procedure
  5755  0E91                     l3899:	
  5756  0E91  0020               	movlb	0	; select bank0
  5757  0E92  3005               	movlw	5
  5758  0E93  0AA5               	incf	LED_UpdateNightBright@i,f
  5759  0E94  0225               	subwf	LED_UpdateNightBright@i,w
  5760  0E95  1C03               	skipc
  5761  0E96  2E72               	goto	l3893
  5762                           
  5763                           ;led.c: 314: }
  5764                           ;led.c: 315: }
  5765                           ;led.c: 316: LED_UpdatePWM( );
  5766  0E97  2E98               	ljmp	l3709
  5767  0E98                     __end_of_LED_UpdateNightBright:	
  5768  0E98                     __ptext64:	
  5769 ;; *************** function _LED_UpdatePWM *****************
  5770 ;; Defined at:
  5771 ;;		line 104 in file "src/led.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  i               1    4[BANK0 ] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 1F/0
  5782 ;;		On exit  : 1F/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        1 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:   11
  5792 ;; This function calls:
  5793 ;;		_PWM1_LoadDutyValue
  5794 ;;		_PWM2_LoadDutyValue
  5795 ;;		_PWM3_LoadDutyValue
  5796 ;;		_PWM4_LoadDutyValue
  5797 ;;		_PWM5_LoadDutyValue
  5798 ;; This function is called by:
  5799 ;;		_LED_AutoRun
  5800 ;;		_LED_UpdateDayBright
  5801 ;;		_LED_UpdateNightBright
  5802 ;;		_LED_SetPreviewBrights
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function _LED_UpdatePWM
  5808  0E98                     _LED_UpdatePWM:	
  5809  0E98                     l3709:	
  5810                           ;incstack = 0
  5811                           ; Regs used in _LED_UpdatePWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5812                           
  5813                           
  5814                           ;led.c: 105: for ( uint8_t i = 0; i < 5; i++ ) {
  5815  0E98  01A4               	clrf	LED_UpdatePWM@i
  5816  0E99                     l3715:	
  5817                           
  5818                           ;led.c: 106: PWM_LoadDutyValue[i]( gLedRunPara.nCurrentBrt[i] );
  5819  0E99  3524               	lslf	LED_UpdatePWM@i,w
  5820  0E9A  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
  5821  0E9B  0086               	movwf	6
  5822  0E9C  0187               	clrf	7
  5823  0E9D  3F40               	moviw [0]fsr1
  5824  0E9E  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
  5825  0E9F  3F41               	moviw [1]fsr1
  5826  0EA0  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  5827  0EA1  3524               	lslf	LED_UpdatePWM@i,w
  5828  0EA2  3ED1               	addlw	(low (_PWM_LoadDutyValue| 0))& (0+255)
  5829  0EA3  0086               	movwf	6
  5830  0EA4  3F41               	moviw [1]fsr1
  5831  0EA5  008A               	movwf	10
  5832  0EA6  3F40               	moviw [0]fsr1
  5833  0EA7  000A               	callw
  5834  0EA8  318C               	pagesel	$
  5835  0EA9  0020               	movlb	0	; select bank0
  5836  0EAA  3005               	movlw	5
  5837  0EAB  0AA4               	incf	LED_UpdatePWM@i,f
  5838  0EAC  0224               	subwf	LED_UpdatePWM@i,w
  5839  0EAD  1803               	btfsc	3,0
  5840  0EAE  0008               	return
  5841  0EAF  2E99               	goto	l3715
  5842  0EB0                     __end_of_LED_UpdatePWM:	
  5843  0EB0                     __ptext77:	
  5844 ;; *************** function _LED_TurnOnRamp *****************
  5845 ;; Defined at:
  5846 ;;		line 186 in file "src/led.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  i               1    0[BANK0 ] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 1C/2
  5857 ;;		On exit  : 1F/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;Total ram usage:        1 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:   10
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_LED_SetAuto
  5871 ;;		_LED_SetOn
  5872 ;;		_LED_InitStatus
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           
  5877                           ;psect for function _LED_TurnOnRamp
  5878  0EB0                     _LED_TurnOnRamp:	
  5879  0EB0                     l3825:	
  5880                           ;incstack = 0
  5881                           ; Regs used in _LED_TurnOnRamp: [wreg-fsr1h+status,2+status,0]
  5882                           
  5883                           
  5884                           ;led.c: 187: for ( uint8_t i = 0; i < 5; i++ ) {
  5885  0EB0  0020               	movlb	0	; select bank0
  5886  0EB1  01A0               	clrf	LED_TurnOnRamp@i
  5887  0EB2                     l3831:	
  5888                           
  5889                           ;led.c: 188: gLedRunPara.nTargetBrt[i] = gLedPara.mPara.manualPara.nBrt[i];
  5890  0EB2  3520               	lslf	LED_TurnOnRamp@i,w
  5891  0EB3  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  5892  0EB4  0086               	movwf	6
  5893  0EB5  3001               	movlw	1	; select bank2/3
  5894  0EB6  0087               	movwf	7
  5895  0EB7  3520               	lslf	LED_TurnOnRamp@i,w
  5896  0EB8  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  5897  0EB9  3186  2607  318C   	fcall	PL50	;call to abstracted procedure
  5898  0EBC  3005               	movlw	5
  5899  0EBD  0AA0               	incf	LED_TurnOnRamp@i,f
  5900  0EBE  0220               	subwf	LED_TurnOnRamp@i,w
  5901  0EBF  1803               	btfsc	3,0
  5902  0EC0  0008               	return
  5903  0EC1  2EB2               	goto	l3831
  5904  0EC2                     __end_of_LED_TurnOnRamp:	
  5905  0EC2                     __ptext41:	
  5906 ;; *************** function _LED_IndicateOff *****************
  5907 ;; Defined at:
  5908 ;;		line 253 in file "src/led.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 1F/0
  5919 ;;		On exit  : 1F/2
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:   10
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_LED_InitStatus
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function _LED_IndicateOff
  5938  0EC2                     _LED_IndicateOff:	
  5939                           
  5940                           ;led.c: 254: gLedPara.fSta = 0;
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _LED_IndicateOff: [wreg+status,2+status,0]
  5944  0EC2  3186  2E00         	ljmp	PL44	;call to abstracted procedure
  5945  0EC4                     __end_of_LED_IndicateOff:	
  5946  0EC4                     __ptext83:	
  5947 ;; *************** function _Util_Decrease *****************
  5948 ;; Defined at:
  5949 ;;		line 11 in file "src/util.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  psrc            2    0[BANK0 ] const PTR unsigned int 
  5952 ;;		 -> gLedPara.mPara.nBrt(10), gLedRunPara.nTargetBrt(10), gLedRunPara(25), gLedPara.mPara(32), 
  5953 ;;  delta           1    2[BANK0 ] unsigned char 
  5954 ;;  min             2    3[BANK0 ] unsigned int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, fsr1l, fsr1h
  5961 ;; Tracked objects:
  5962 ;;		On entry : 1F/0
  5963 ;;		On exit  : 1F/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        9 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:   10
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_LED_ManualDecrease
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _Util_Decrease
  5982  0EC4                     _Util_Decrease:	
  5983                           
  5984                           ;util.c: 12: if ( ( *psrc ) > min + delta ) {
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _Util_Decrease: [wregfsr1]
  5988  0EC4  0820               	movf	Util_Decrease@psrc,w
  5989  0EC5  0086               	movwf	6
  5990  0EC6  0821               	movf	Util_Decrease@psrc+1,w
  5991  0EC7  0087               	movwf	7
  5992  0EC8  3F40               	moviw [0]fsr1
  5993  0EC9  00A5               	movwf	??_Util_Decrease
  5994  0ECA  3F41               	moviw [1]fsr1
  5995  0ECB  00A6               	movwf	??_Util_Decrease+1
  5996  0ECC  0822               	movf	Util_Decrease@delta,w
  5997  0ECD  0723               	addwf	Util_Decrease@min,w
  5998  0ECE  00A7               	movwf	??_Util_Decrease+2
  5999  0ECF  0824               	movf	Util_Decrease@min+1,w
  6000  0ED0  1803               	skipnc
  6001  0ED1  0A24               	incf	Util_Decrease@min+1,w
  6002  0ED2  00A8               	movwf	??_Util_Decrease+3
  6003  0ED3  0826               	movf	??_Util_Decrease+1,w
  6004  0ED4  0228               	subwf	??_Util_Decrease+3,w
  6005  0ED5  1D03               	skipz
  6006  0ED6  2ED9               	goto	u3325
  6007  0ED7  0825               	movf	??_Util_Decrease,w
  6008  0ED8  0227               	subwf	??_Util_Decrease+2,w
  6009  0ED9                     u3325:	
  6010                           
  6011                           ;util.c: 13: ( *psrc ) -= delta;
  6012  0ED9  0820               	movf	Util_Decrease@psrc,w
  6013  0EDA  0086               	movwf	6
  6014  0EDB  0821               	movf	Util_Decrease@psrc+1,w
  6015  0EDC  0087               	movwf	7
  6016  0EDD  1803               	skipnc
  6017  0EDE  2EE6               	goto	L13
  6018  0EDF  0822               	movf	Util_Decrease@delta,w
  6019  0EE0  0281               	subwf	1,f
  6020  0EE1  3141               	addfsr 1,1
  6021  0EE2  1C03               	skipc
  6022  0EE3  0381               	decf	1,f
  6023  0EE4  317F               	addfsr 1,-1
  6024                           
  6025                           ;util.c: 14: } else {
  6026  0EE5  0008               	return
  6027  0EE6                     L13:	
  6028                           ;util.c: 15: ( *psrc ) = min;
  6029                           
  6030  0EE6  0823               	movf	Util_Decrease@min,w
  6031  0EE7  3FC0               	movwi [0]fsr1
  6032  0EE8  0824               	movf	Util_Decrease@min+1,w
  6033  0EE9  3FC1               	movwi [1]fsr1
  6034  0EEA  0008               	return
  6035  0EEB                     __end_of_Util_Decrease:	
  6036  0EEB                     __ptext80:	
  6037 ;; *************** function _LED_ManualIncrease *****************
  6038 ;; Defined at:
  6039 ;;		line 766 in file "src/led.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  chn             1    wreg     unsigned char 
  6042 ;;  delta           1    9[BANK0 ] unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  chn             1   10[BANK0 ] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      unsigned char 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 1F/4
  6051 ;;		On exit  : 1C/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        2 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:   11
  6061 ;; This function calls:
  6062 ;;		_Util_Increase
  6063 ;; This function is called by:
  6064 ;;		_BLE_DecodeData
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _LED_ManualIncrease
  6070  0EEB                     _LED_ManualIncrease:	
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in _LED_ManualIncrease: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6074                           ;LED_ManualIncrease@chn stored from wreg
  6075  0EEB  0020               	movlb	0	; select bank0
  6076  0EEC  00AA               	movwf	LED_ManualIncrease@chn
  6077                           
  6078                           ;led.c: 767: if ( !gLedRunPara.find && !gLedPara.fAuto && gLedPara.mPara.manualPara.fOn 
      +                          && chn < 5 ) {
  6079  0EED  0021               	movlb	1	; select bank1
  6080  0EEE  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
  6081  0EEF  3400               	retlw	0
  6082  0EF0  0022               	movlb	2	; select bank2
  6083  0EF1  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  6084  0EF2  1C21               	btfss	(_gLedPara^(0+256)+1),0	;volatile
  6085  0EF3  3400               	retlw	0
  6086  0EF4  3005               	movlw	5
  6087  0EF5  0020               	movlb	0	; select bank0
  6088  0EF6  022A               	subwf	LED_ManualIncrease@chn,w
  6089  0EF7  1803               	skipnc
  6090  0EF8  3400               	retlw	0
  6091                           
  6092                           ;led.c: 768: Util_Increase( ( uint16_t * const ) &gLedPara.mPara.manualPara.nBrt[chn], d
      +                          elta, 1000 );
  6093  0EF9  352A               	lslf	LED_ManualIncrease@chn,w
  6094  0EFA  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  6095  0EFB  00A0               	movwf	Util_Increase@psrc
  6096  0EFC  3001               	movlw	1
  6097  0EFD  00A1               	movwf	Util_Increase@psrc+1
  6098  0EFE  27CC  318C         	fcall	PL52	;call to abstracted procedure
  6099  0F00  270A  318C         	fcall	_Util_Increase
  6100                           
  6101                           ;led.c: 769: Util_Increase( ( uint16_t * const ) &gLedRunPara.nTargetBrt[chn], delta, 10
      +                          00 );
  6102  0F02  352A               	lslf	LED_ManualIncrease@chn,w
  6103  0F03  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6104  0F04  00A0               	movwf	Util_Increase@psrc
  6105  0F05  01A1               	clrf	Util_Increase@psrc+1
  6106  0F06  27CC  318C         	fcall	PL52	;call to abstracted procedure
  6107  0F08  270A               	fcall	_Util_Increase
  6108                           
  6109                           ;led.c: 770: return 1;
  6110  0F09  3401               	retlw	1
  6111  0F0A                     __end_of_LED_ManualIncrease:	
  6112                           ;led.c: 771: }
  6113                           ;led.c: 772: return 0;
  6114                           
  6115  0F0A                     __ptext81:	
  6116 ;; *************** function _Util_Increase *****************
  6117 ;; Defined at:
  6118 ;;		line 3 in file "src/util.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  psrc            2    0[BANK0 ] const PTR unsigned int 
  6121 ;;		 -> gLedPara.mPara.nBrt(10), gLedRunPara.nTargetBrt(10), gLedRunPara(25), gLedPara.mPara(32), 
  6122 ;;  delta           1    2[BANK0 ] unsigned char 
  6123 ;;  max             2    3[BANK0 ] unsigned int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 1F/0
  6132 ;;		On exit  : 1F/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6135 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;Total ram usage:        9 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   10
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_LED_ManualIncrease
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _Util_Increase
  6151  0F0A                     _Util_Increase:	
  6152                           
  6153                           ;util.c: 4: if ( ( *psrc ) + delta < max ) {
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _Util_Increase: [wreg+fsr1l+fsr1h+status,2+status,0]
  6157  0F0A  0820               	movf	Util_Increase@psrc,w
  6158  0F0B  0086               	movwf	6
  6159  0F0C  0821               	movf	Util_Increase@psrc+1,w
  6160  0F0D  0087               	movwf	7
  6161  0F0E  3F40               	moviw [0]fsr1
  6162  0F0F  00A5               	movwf	??_Util_Increase
  6163  0F10  3F41               	moviw [1]fsr1
  6164  0F11  00A6               	movwf	??_Util_Increase+1
  6165  0F12  0822               	movf	Util_Increase@delta,w
  6166  0F13  0725               	addwf	??_Util_Increase,w
  6167  0F14  00A7               	movwf	??_Util_Increase+2
  6168  0F15  0826               	movf	??_Util_Increase+1,w
  6169  0F16  1803               	skipnc
  6170  0F17  0A26               	incf	??_Util_Increase+1,w
  6171  0F18  00A8               	movwf	??_Util_Increase+3
  6172  0F19  0824               	movf	Util_Increase@max+1,w
  6173  0F1A  0228               	subwf	??_Util_Increase+3,w
  6174  0F1B  1D03               	skipz
  6175  0F1C  2F1F               	goto	u3315
  6176  0F1D  0823               	movf	Util_Increase@max,w
  6177  0F1E  0227               	subwf	??_Util_Increase+2,w
  6178  0F1F                     u3315:	
  6179                           
  6180                           ;util.c: 5: ( *psrc ) += delta;
  6181  0F1F  0820               	movf	Util_Increase@psrc,w
  6182  0F20  0086               	movwf	6
  6183  0F21  0821               	movf	Util_Increase@psrc+1,w
  6184  0F22  0087               	movwf	7
  6185  0F23  1803               	skipnc
  6186  0F24  2F2B               	goto	L12
  6187  0F25  0822               	movf	Util_Increase@delta,w
  6188  0F26  0781               	addwf	1,f
  6189  0F27  3141               	addfsr 1,1
  6190  0F28  1803               	skipnc
  6191  0F29  0A81               	incf	1,f
  6192                           
  6193                           ;util.c: 6: } else {
  6194  0F2A  0008               	return
  6195  0F2B                     L12:	
  6196                           ;util.c: 7: ( *psrc ) = max;
  6197                           
  6198  0F2B  0823               	movf	Util_Increase@max,w
  6199  0F2C  3FC0               	movwi [0]fsr1
  6200  0F2D  0824               	movf	Util_Increase@max+1,w
  6201  0F2E  3FC1               	movwi [1]fsr1
  6202  0F2F  0008               	return
  6203  0F30                     __end_of_Util_Increase:	
  6204  0F30                     __ptext72:	
  6205 ;; *************** function _LED_SetCycle *****************
  6206 ;; Defined at:
  6207 ;;		line 755 in file "src/led.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  pbuf            1    wreg     const PTR const unsigned
  6210 ;;		 -> rxBuf(64), 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  pbuf            1    2[BANK0 ] const PTR const unsigned
  6213 ;;		 -> rxBuf(64), 
  6214 ;;  i               1    3[BANK0 ] unsigned char 
  6215 ;;  len             1    1[BANK0 ] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      unsigned char 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 19/4
  6222 ;;		On exit  : 1C/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;Total ram usage:        4 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:   10
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_BLE_DecodeData
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _LED_SetCycle
  6241  0F30                     _LED_SetCycle:	
  6242                           
  6243                           ;incstack = 0
  6244                           ; Regs used in _LED_SetCycle: [wreg-fsr1h+status,2+status,0]
  6245                           ;LED_SetCycle@pbuf stored from wreg
  6246  0F30  0020               	movlb	0	; select bank0
  6247  0F31  00A2               	movwf	LED_SetCycle@pbuf
  6248                           
  6249                           ;led.c: 756: if ( !gLedRunPara.find && !gLedRunPara.fPrev && gLedPara.fAuto ) {
  6250  0F32  0021               	movlb	1	; select bank1
  6251  0F33  1C38               	btfss	_gLedRunPara^(0+128),0	;volatile
  6252  0F34  1938               	btfsc	_gLedRunPara^(0+128),2	;volatile
  6253  0F35  3400               	retlw	0
  6254  0F36  0022               	movlb	2	; select bank2
  6255  0F37  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  6256  0F38  3400               	retlw	0
  6257                           
  6258                           ;led.c: 757: uint8_t len = sizeof ( gLedPara.aPara.array );
  6259  0F39  3012               	movlw	18
  6260  0F3A  0020               	movlb	0	; select bank0
  6261  0F3B  00A1               	movwf	LED_SetCycle@len
  6262                           
  6263                           ;led.c: 758: for ( uint8_t i = 0; i < len; i++ ) {
  6264  0F3C  01A3               	clrf	LED_SetCycle@i
  6265  0F3D                     l4457:	
  6266  0F3D  0821               	movf	LED_SetCycle@len,w
  6267  0F3E  0223               	subwf	LED_SetCycle@i,w
  6268  0F3F  1803               	btfsc	3,0
  6269  0F40  3401               	retlw	1
  6270                           
  6271                           ;led.c: 759: gLedPara.aPara.array[i] = *( pbuf + i );
  6272  0F41  0823               	movf	LED_SetCycle@i,w
  6273  0F42  3E41               	addlw	(low ((_gLedPara| (0+256)+33)))& (0+255)
  6274  0F43  0086               	movwf	6
  6275  0F44  3001               	movlw	1	; select bank2/3
  6276  0F45  0087               	movwf	7
  6277  0F46  0823               	movf	LED_SetCycle@i,w
  6278  0F47  0722               	addwf	LED_SetCycle@pbuf,w
  6279  0F48  00A0               	movwf	??_LED_SetCycle
  6280  0F49  27D3  318C         	fcall	PL56	;call to abstracted procedure
  6281  0F4B  0AA3               	incf	LED_SetCycle@i,f
  6282  0F4C  2F3D               	goto	l4457
  6283  0F4D                     __end_of_LED_SetCycle:	
  6284                           ;led.c: 762: }
  6285                           ;led.c: 763: return 0;
  6286                           
  6287                           ;led.c: 760: }
  6288                           ;led.c: 761: return 1;
  6289                           
  6290  0F4D                     __ptext71:	
  6291 ;; *************** function _LED_SetManualBrights *****************
  6292 ;; Defined at:
  6293 ;;		line 740 in file "src/led.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  pbuf            1    wreg     const PTR const unsigned
  6296 ;;		 -> rxBuf(64), 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  pbuf            1    2[BANK0 ] const PTR const unsigned
  6299 ;;		 -> rxBuf(64), 
  6300 ;;  val             2    3[BANK0 ] unsigned int 
  6301 ;;  i               1    5[BANK0 ] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      unsigned char 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6306 ;; Tracked objects:
  6307 ;;		On entry : 19/4
  6308 ;;		On exit  : 1C/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;Total ram usage:        6 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:   10
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_BLE_DecodeData
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _LED_SetManualBrights
  6327  0F4D                     _LED_SetManualBrights:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _LED_SetManualBrights: [wreg-fsr1h+status,2+status,0]
  6331                           ;LED_SetManualBrights@pbuf stored from wreg
  6332  0F4D  0020               	movlb	0	; select bank0
  6333  0F4E  00A2               	movwf	LED_SetManualBrights@pbuf
  6334                           
  6335                           ;led.c: 741: if ( !gLedRunPara.find && gLedPara.mPara.manualPara.fOn && ( !gLedPara.fAut
      +                          o ) ) {
  6336  0F4F  0021               	movlb	1	; select bank1
  6337  0F50  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
  6338  0F51  3400               	retlw	0
  6339  0F52  0022               	movlb	2	; select bank2
  6340  0F53  1821               	btfsc	(_gLedPara^(0+256)+1),0	;volatile
  6341  0F54  1820               	btfsc	_gLedPara^(0+256),0	;volatile
  6342  0F55  3400               	retlw	0
  6343                           
  6344                           ;led.c: 742: gLedPara.mPara.manualPara.fDyn = 0;
  6345  0F56  01A2               	clrf	(_gLedPara^(0+256)+2)	;volatile
  6346                           
  6347                           ;led.c: 743: for ( uint8_t i = 0; i < 5; i++ ) {
  6348  0F57  0020               	movlb	0	; select bank0
  6349  0F58  01A5               	clrf	LED_SetManualBrights@i
  6350  0F59                     l4397:	
  6351                           
  6352                           ;led.c: 744: uint16_t val = ( *( pbuf + 2 * i ) ) << 8 | ( *( pbuf + 2 * i + 1 ) );
  6353  0F59  3525               	lslf	LED_SetManualBrights@i,w
  6354  0F5A  0722               	addwf	LED_SetManualBrights@pbuf,w
  6355  0F5B  00A0               	movwf	??_LED_SetManualBrights
  6356  0F5C  0A20               	incf	??_LED_SetManualBrights,w
  6357  0F5D  0086               	movwf	6
  6358  0F5E  3002               	movlw	2	; select bank4/5
  6359  0F5F  0087               	movwf	7
  6360  0F60  3525               	lslf	LED_SetManualBrights@i,w
  6361  0F61  0722               	addwf	LED_SetManualBrights@pbuf,w
  6362  0F62  00A1               	movwf	??_LED_SetManualBrights+1
  6363  0F63  0084               	movwf	4
  6364  0F64  3002               	movlw	2	; select bank4/5
  6365  0F65  0085               	movwf	5
  6366  0F66  0800               	movf	0,w
  6367  0F67  00A4               	movwf	LED_SetManualBrights@val+1
  6368  0F68  0801               	movf	1,w
  6369  0F69  00A3               	movwf	LED_SetManualBrights@val
  6370                           
  6371                           ;led.c: 745: if ( val <= 1000 ) {
  6372  0F6A  3003               	movlw	3
  6373  0F6B  0224               	subwf	LED_SetManualBrights@val+1,w
  6374  0F6C  30E9               	movlw	233
  6375  0F6D  1903               	skipnz
  6376  0F6E  0223               	subwf	LED_SetManualBrights@val,w
  6377  0F6F  1803               	skipnc
  6378  0F70  2F82               	goto	l4403
  6379                           
  6380                           ;led.c: 746: gLedPara.mPara.manualPara.nBrt[i] = val;
  6381  0F71  3525               	lslf	LED_SetManualBrights@i,w
  6382  0F72  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  6383  0F73  0086               	movwf	6
  6384  0F74  3001               	movlw	1	; select bank2/3
  6385  0F75  0087               	movwf	7
  6386  0F76  0823               	movf	LED_SetManualBrights@val,w
  6387  0F77  3FC0               	movwi [0]fsr1
  6388  0F78  0824               	movf	LED_SetManualBrights@val+1,w
  6389  0F79  3FC1               	movwi [1]fsr1
  6390                           
  6391                           ;led.c: 747: gLedRunPara.nTargetBrt[i] = val;
  6392  0F7A  3525               	lslf	LED_SetManualBrights@i,w
  6393  0F7B  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6394  0F7C  0086               	movwf	6
  6395  0F7D  0187               	clrf	7
  6396  0F7E  0823               	movf	LED_SetManualBrights@val,w
  6397  0F7F  3FC0               	movwi [0]fsr1
  6398  0F80  0824               	movf	LED_SetManualBrights@val+1,w
  6399  0F81  3FC1               	movwi [1]fsr1
  6400  0F82                     l4403:	
  6401  0F82  3005               	movlw	5
  6402  0F83  0AA5               	incf	LED_SetManualBrights@i,f
  6403  0F84  0225               	subwf	LED_SetManualBrights@i,w
  6404  0F85  1803               	btfsc	3,0
  6405                           
  6406                           ;led.c: 748: }
  6407                           ;led.c: 749: }
  6408                           ;led.c: 750: return 1;
  6409  0F86  3401               	retlw	1
  6410  0F87  2F59               	goto	l4397
  6411  0F88                     __end_of_LED_SetManualBrights:	
  6412                           ;led.c: 751: }
  6413                           ;led.c: 752: return 0;
  6414                           
  6415  0F88                     __ptext59:	
  6416 ;; *************** function _RTC_SetCurrentTime *****************
  6417 ;; Defined at:
  6418 ;;		line 133 in file "src/rtc.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  time            1    wreg     const PTR const unsigned
  6421 ;;		 -> rxBuf(64), 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  time            1    1[BANK0 ] const PTR const unsigned
  6424 ;;		 -> rxBuf(64), 
  6425 ;;  i               1    2[BANK0 ] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 19/4
  6432 ;;		On exit  : 1F/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;Total ram usage:        3 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:   10
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_BLE_DecodeData
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function _RTC_SetCurrentTime
  6451  0F88                     _RTC_SetCurrentTime:	
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in _RTC_SetCurrentTime: [wreg-fsr1h+status,2+status,0]
  6455                           ;RTC_SetCurrentTime@time stored from wreg
  6456  0F88  0020               	movlb	0	; select bank0
  6457  0F89  00A1               	movwf	RTC_SetCurrentTime@time
  6458                           
  6459                           ;rtc.c: 134: for ( uint8_t i = 0; i < sizeof ( gCurrentTime ); i++ ) {
  6460  0F8A  01A2               	clrf	RTC_SetCurrentTime@i
  6461  0F8B                     l4547:	
  6462                           
  6463                           ;rtc.c: 135: gCurrentTime.array[i] = *( time + i );
  6464  0F8B  0822               	movf	RTC_SetCurrentTime@i,w
  6465  0F8C  3EA0               	addlw	(low (_gCurrentTime| 0))& (0+255)
  6466  0F8D  0086               	movwf	6
  6467  0F8E  0187               	clrf	7
  6468  0F8F  0822               	movf	RTC_SetCurrentTime@i,w
  6469  0F90  0721               	addwf	RTC_SetCurrentTime@time,w
  6470  0F91  00A0               	movwf	??_RTC_SetCurrentTime
  6471  0F92  27D3  318C         	fcall	PL56	;call to abstracted procedure
  6472  0F94  3007               	movlw	7
  6473  0F95  0AA2               	incf	RTC_SetCurrentTime@i,f
  6474  0F96  0222               	subwf	RTC_SetCurrentTime@i,w
  6475  0F97  1803               	btfsc	3,0
  6476  0F98  0008               	return
  6477  0F99  2F8B               	goto	l4547
  6478  0F9A                     __end_of_RTC_SetCurrentTime:	
  6479  0F9A                     __ptext52:	
  6480 ;; *************** function _BLE_StartReceive *****************
  6481 ;; Defined at:
  6482 ;;		line 353 in file "src/ble.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2
  6491 ;; Tracked objects:
  6492 ;;		On entry : 1D/0
  6493 ;;		On exit  : 1F/2
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;Total ram usage:        1 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   10
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_main
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           
  6511                           ;psect for function _BLE_StartReceive
  6512  0F9A                     _BLE_StartReceive:	
  6513                           
  6514                           ;ble.c: 354: nRcvIdx = 0;
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _BLE_StartReceive: [wreg+status,2]
  6518  0F9A  01FD               	clrf	_nRcvIdx	;volatile
  6519                           
  6520                           ;ble.c: 355: rcvXor = 0;
  6521  0F9B  0021               	movlb	1	; select bank1
  6522  0F9C  01B7               	clrf	_rcvXor^(0+128)	;volatile
  6523                           
  6524                           ;ble.c: 356: _delay((unsigned long)((800)*(16000000/4000000.0)));
  6525  0F9D  3005               	movlw	5
  6526  0F9E  0020               	movlb	0	; select bank0
  6527  0F9F  00A0               	movwf	??_BLE_StartReceive
  6528  0FA0  3026               	movlw	38
  6529  0FA1                     u4967:	
  6530  0FA1  0B89               	decfsz	9,f
  6531  0FA2  2FA1               	goto	u4967
  6532  0FA3  0BA0               	decfsz	??_BLE_StartReceive,f
  6533  0FA4  2FA1               	goto	u4967
  6534  0FA5  0000               	nop
  6535                           
  6536                           ;ble.c: 357: LATC1 = 0;
  6537  0FA6  0022               	movlb	2	; select bank2
  6538  0FA7  108E               	bcf	14,1	;volatile
  6539  0FA8  0008               	return
  6540  0FA9                     __end_of_BLE_StartReceive:	
  6541  0FA9                     __ptext51:	
  6542 ;; *************** function _BLE_StopReceive *****************
  6543 ;; Defined at:
  6544 ;;		line 385 in file "src/ble.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 1F/1
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:   10
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           
  6573                           ;psect for function _BLE_StopReceive
  6574  0FA9                     _BLE_StopReceive:	
  6575                           
  6576                           ;ble.c: 386: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in _BLE_StopReceive: [wreg+status,2]
  6580  0FA9  3085               	movlw	133
  6581  0FAA                     u4957:	
  6582  0FAA  0B89               	decfsz	9,f
  6583  0FAB  2FAA               	goto	u4957
  6584  0FAC  0000               	nop
  6585                           
  6586                           ;ble.c: 387: LATC1 = 1;
  6587  0FAD  0022               	movlb	2	; select bank2
  6588  0FAE  148E               	bsf	14,1	;volatile
  6589                           
  6590                           ;ble.c: 388: nRcvIdx = 0;
  6591  0FAF  01FD               	clrf	_nRcvIdx	;volatile
  6592                           
  6593                           ;ble.c: 389: rcvXor = 0;
  6594  0FB0  0021               	movlb	1	; select bank1
  6595  0FB1  01B7               	clrf	_rcvXor^(0+128)	;volatile
  6596  0FB2  0008               	return
  6597  0FB3                     __end_of_BLE_StopReceive:	
  6598  0FB3                     __ptext7:	
  6599 ;; *************** function _TMR0_StartTimer *****************
  6600 ;; Defined at:
  6601 ;;		line 35 in file "src/tmr.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		None
  6610 ;; Tracked objects:
  6611 ;;		On entry : 1F/1
  6612 ;;		On exit  : 1F/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:   10
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_main
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           
  6630                           ;psect for function _TMR0_StartTimer
  6631  0FB3                     _TMR0_StartTimer:	
  6632                           
  6633                           ;tmr.c: 36: T0CON0bits.T0EN = 1;
  6634                           
  6635                           ;incstack = 0
  6636                           ; Regs used in _TMR0_StartTimer: []
  6637  0FB3  0020               	movlb	0	; select bank0
  6638  0FB4  1797               	bsf	23,7	;volatile
  6639  0FB5  0008               	return
  6640  0FB6                     __end_of_TMR0_StartTimer:	
  6641  0FB6                     __ptext6:	
  6642 ;; *************** function _TMR2_StartTimer *****************
  6643 ;; Defined at:
  6644 ;;		line 77 in file "src/tmr.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		None
  6653 ;; Tracked objects:
  6654 ;;		On entry : 1F/0
  6655 ;;		On exit  : 1F/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:   10
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _TMR2_StartTimer
  6674  0FB6                     _TMR2_StartTimer:	
  6675                           
  6676                           ;tmr.c: 78: T2CONbits.TMR2ON = 1;
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _TMR2_StartTimer: []
  6680  0FB6  151F               	bsf	31,2	;volatile
  6681  0FB7  0008               	return
  6682  0FB8                     __end_of_TMR2_StartTimer:	
  6683  0FB8                     PL24:	
  6684  0FB8  0022               	movlb	2	; select bank2
  6685  0FB9  0853               	movf	(_gLedPara^(0+256)+51),w	;volatile
  6686  0FBA  3FC0               	movwi [0]fsr1
  6687  0FBB  0854               	movf	((_gLedPara+1)^(0+256)+51),w	;volatile
  6688  0FBC  3FC1               	movwi [1]fsr1
  6689  0FBD  0020               	movlb	0	; select bank0
  6690  0FBE  0008               	return
  6691  0FBF                     __end_ofPL24:	
  6692  0FBF                     PL26:	
  6693  0FBF  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6694  0FC0  0086               	movwf	6
  6695  0FC1  3000               	movlw	0
  6696  0FC2  0187               	clrf	7
  6697  0FC3  3FC0               	movwi [0]fsr1
  6698  0FC4  3FC1               	movwi [1]fsr1
  6699  0FC5  0008               	return
  6700  0FC6                     __end_ofPL26:	
  6701  0FC6                     PL48:	
  6702  0FC6  0022               	movlb	2	; select bank2
  6703  0FC7  0855               	movf	(_gLedPara^(0+256)+53),w	;volatile
  6704  0FC8  3FC0               	movwi [0]fsr1
  6705  0FC9  0856               	movf	((_gLedPara+1)^(0+256)+53),w	;volatile
  6706  0FCA  3FC1               	movwi [1]fsr1
  6707  0FCB  0008               	return
  6708  0FCC                     __end_ofPL48:	
  6709  0FCC                     PL52:	
  6710  0FCC  0829               	movf	LED_ManualIncrease@delta,w
  6711  0FCD  00A2               	movwf	Util_Increase@delta
  6712  0FCE  30E8               	movlw	232
  6713  0FCF  00A3               	movwf	Util_Increase@max
  6714  0FD0  3003               	movlw	3
  6715  0FD1  00A4               	movwf	Util_Increase@max+1
  6716  0FD2  0008               	return
  6717  0FD3                     __end_ofPL52:	
  6718  0FD3                     PL56:	
  6719  0FD3  0084               	movwf	4
  6720  0FD4  3002               	movlw	2	; select bank4/5
  6721  0FD5  0085               	movwf	5
  6722  0FD6  0800               	movf	0,w
  6723  0FD7  0081               	movwf	1
  6724  0FD8  0008               	return
  6725  0FD9                     __end_ofPL56:	
  6726  0FD9                     PL72:	
  6727  0FD9  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  6728  0FDA  0086               	movwf	6
  6729  0FDB  3001               	movlw	1	; select bank2/3
  6730  0FDC  0087               	movwf	7
  6731  0FDD  0008               	return
  6732  0FDE                     __end_ofPL72:	
  6733  0FDE                     PL78:	
  6734  0FDE  0829               	movf	LED_ManualDecrease@delta,w
  6735  0FDF  00A2               	movwf	Util_Decrease@delta
  6736  0FE0  01A3               	clrf	Util_Decrease@min
  6737  0FE1  01A4               	clrf	Util_Decrease@min+1
  6738  0FE2  0008               	return
  6739  0FE3                     __end_ofPL78:	
  6740  0FE3                     PL80:	
  6741  0FE3  0086               	movwf	6
  6742  0FE4  3001               	movlw	1	; select bank2/3
  6743  0FE5  0087               	movwf	7
  6744  0FE6  0801               	movf	1,w
  6745  0FE7  0008               	return
  6746  0FE8                     __end_ofPL80:	
  6747  0FE8                     __ptext20:	
  6748 ;; *************** function _RTC_Initialize *****************
  6749 ;; Defined at:
  6750 ;;		line 58 in file "src/rtc.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2
  6759 ;; Tracked objects:
  6760 ;;		On entry : 1D/0
  6761 ;;		On exit  : 1F/1
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:   10
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_main
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _RTC_Initialize
  6780  0FE8                     _RTC_Initialize:	
  6781                           
  6782                           ;rtc.c: 59: gCurrentTime.datetime.second = 0;
  6783                           
  6784                           ;incstack = 0
  6785                           ; Regs used in _RTC_Initialize: [wreg+status,2]
  6786  0FE8  0021               	movlb	1	; select bank1
  6787  0FE9  01A6               	clrf	(_gCurrentTime^(0+128)+6)	;volatile
  6788                           
  6789                           ;rtc.c: 60: gCurrentTime.datetime.minute = 0;
  6790  0FEA  01A5               	clrf	(_gCurrentTime^(0+128)+5)	;volatile
  6791                           
  6792                           ;rtc.c: 61: gCurrentTime.datetime.hour = 0;
  6793  0FEB  01A4               	clrf	(_gCurrentTime^(0+128)+4)	;volatile
  6794                           
  6795                           ;rtc.c: 62: gCurrentTime.datetime.wk = 0;
  6796  0FEC  01A3               	clrf	(_gCurrentTime^(0+128)+3)	;volatile
  6797                           
  6798                           ;rtc.c: 63: gCurrentTime.datetime.day = 1;
  6799  0FED  3001               	movlw	1
  6800  0FEE  00A2               	movwf	(_gCurrentTime^(0+128)+2)	;volatile
  6801                           
  6802                           ;rtc.c: 64: gCurrentTime.datetime.month = 1;
  6803  0FEF  00A1               	movwf	(_gCurrentTime^(0+128)+1)	;volatile
  6804                           
  6805                           ;rtc.c: 65: gCurrentTime.datetime.year = 0;
  6806  0FF0  01A0               	clrf	_gCurrentTime^(0+128)	;volatile
  6807  0FF1  0008               	return
  6808  0FF2                     __end_of_RTC_Initialize:	
  6809  0FF2                     __ptext62:	
  6810 ;; *************** function _LED_StartFlash *****************
  6811 ;; Defined at:
  6812 ;;		line 657 in file "src/led.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg
  6821 ;; Tracked objects:
  6822 ;;		On entry : 19/4
  6823 ;;		On exit  : 1F/1
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:   10
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_BLE_DecodeData
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           
  6841                           ;psect for function _LED_StartFlash
  6842  0FF2                     _LED_StartFlash:	
  6843  0FF2                     l4553:	
  6844                           ;incstack = 0
  6845                           ; Regs used in _LED_StartFlash: [wreg]
  6846                           
  6847                           
  6848                           ;led.c: 658: gLedRunPara.find = 1;
  6849  0FF2  0021               	movlb	1	; select bank1
  6850  0FF3  1438               	bsf	_gLedRunPara^(0+128),0	;volatile
  6851                           
  6852                           ;led.c: 659: gLedRunPara.nFlashCount = 3;
  6853  0FF4  3003               	movlw	3
  6854  0FF5  00B9               	movwf	(_gLedRunPara^(0+128)+1)	;volatile
  6855  0FF6  0008               	return
  6856  0FF7                     __end_of_LED_StartFlash:	
  6857  0FF7                     __ptext61:	
  6858 ;; *************** function _LED_StartPreview *****************
  6859 ;; Defined at:
  6860 ;;		line 671 in file "src/led.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg
  6869 ;; Tracked objects:
  6870 ;;		On entry : 1C/0
  6871 ;;		On exit  : 1F/1
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;Total ram usage:        0 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:   10
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_BLE_DecodeData
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function _LED_StartPreview
  6890  0FF7                     _LED_StartPreview:	
  6891  0FF7                     l4533:	
  6892                           ;incstack = 0
  6893                           ; Regs used in _LED_StartPreview: [wreg]
  6894                           
  6895                           
  6896                           ;led.c: 672: gLedRunPara.fPrev = 1;
  6897  0FF7  0021               	movlb	1	; select bank1
  6898  0FF8  1538               	bsf	_gLedRunPara^(0+128),2	;volatile
  6899                           
  6900                           ;led.c: 673: gLedRunPara.nPrevCount = 3;
  6901  0FF9  3003               	movlw	3
  6902  0FFA  00BA               	movwf	(_gLedRunPara^(0+128)+2)	;volatile
  6903  0FFB  0008               	return
  6904  0FFC                     __end_of_LED_StartPreview:	
  6905  0FFC                     __ptext60:	
  6906 ;; *************** function _LED_StopPreview *****************
  6907 ;; Defined at:
  6908 ;;		line 685 in file "src/led.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		status,2
  6917 ;; Tracked objects:
  6918 ;;		On entry : 19/4
  6919 ;;		On exit  : 1F/1
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:   10
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_BLE_DecodeData
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function _LED_StopPreview
  6938  0FFC                     _LED_StopPreview:	
  6939  0FFC                     l4537:	
  6940                           ;incstack = 0
  6941                           ; Regs used in _LED_StopPreview: [status,2]
  6942                           
  6943                           
  6944                           ;led.c: 686: gLedRunPara.fPrev = 0;
  6945  0FFC  0021               	movlb	1	; select bank1
  6946  0FFD  1138               	bcf	_gLedRunPara^(0+128),2	;volatile
  6947                           
  6948                           ;led.c: 687: gLedRunPara.nPrevCount = 0;
  6949  0FFE  01BA               	clrf	(_gLedRunPara^(0+128)+2)	;volatile
  6950  0FFF  0008               	return
  6951  1000                     __end_of_LED_StopPreview:	
  6952                           
  6953                           	psect	bssCOMMON
  6954  007D                     __pbssCOMMON:	
  6955  007D                     _nRcvIdx:	
  6956  007D                     	ds	1
  6957                           
  6958                           	psect	bssBANK0
  6959  006F                     __pbssBANK0:	
  6960  006F                     KEY_Scan@lastKey:	
  6961  006F                     	ds	1
  6962                           
  6963                           	psect	bssBANK1
  6964  00A0                     __pbssBANK1:	
  6965  00A0                     _gCurrentTime:	
  6966  00A0                     	ds	7
  6967  00A7                     _fnTmr2Callback:	
  6968  00A7                     	ds	2
  6969  00A9                     _fnTmr0Callback:	
  6970  00A9                     	ds	2
  6971  00AB                     _fnReceiveCallback:	
  6972  00AB                     	ds	2
  6973  00AD                     _fnKeyAction:	
  6974  00AD                     	ds	2
  6975  00AF                     _txHead:	
  6976  00AF                     	ds	1
  6977  00B0                     _txTail:	
  6978  00B0                     	ds	1
  6979  00B1                     _prvStatus:	
  6980  00B1                     	ds	1
  6981  00B2                     LED_FindDeviceFlash@tog:	
  6982  00B2                     	ds	1
  6983  00B3                     KEY_Scan@rptCount:	
  6984  00B3                     	ds	1
  6985  00B4                     KEY_Read@Cont:	
  6986  00B4                     	ds	1
  6987  00B5                     KEY_Read@Trg:	
  6988  00B5                     	ds	1
  6989  00B6                     TMR2_InterruptCallback@cnt:	
  6990  00B6                     	ds	1
  6991  00B7                     _rcvXor:	
  6992  00B7                     	ds	1
  6993  00B8                     _gLedRunPara:	
  6994  00B8                     	ds	25
  6995                           
  6996                           	psect	dataBANK1
  6997  00D1                     __pdataBANK1:	
  6998  00D1                     _PWM_LoadDutyValue:	
  6999  00D1                     	ds	10
  7000  00DB                     _led_state_actions:	
  7001  00DB                     	ds	8
  7002  00E3                     BLE_SendCMD@F8112:	
  7003  00E3                     	ds	7
  7004                           
  7005                           	psect	bssBANK2
  7006  0120                     __pbssBANK2:	
  7007  0120                     _gLedPara:	
  7008  0120                     	ds	55
  7009                           
  7010                           	psect	dataBANK2
  7011  0157                     __pdataBANK2:	
  7012  0157                     _MONTH_DAY:	
  7013  0157                     	ds	12
  7014                           
  7015                           	psect	dataBANK3
  7016  01A0                     __pdataBANK3:	
  7017  01A0                     BLE_CheckDevID@F8119:	
  7018  01A0                     	ds	17
  7019                           
  7020                           	psect	bssBANK4
  7021  0220                     __pbssBANK4:	
  7022  0220                     _rxBuf:	
  7023  0220                     	ds	64
  7024                           
  7025                           	psect	bssBANK5
  7026  02A0                     __pbssBANK5:	
  7027  02A0                     _txBuf:	
  7028  02A0                     	ds	64
  7029                           
  7030                           	psect	inittext
  7031  0802                     init_ram:	
  7032  0802  00FE               	movwf	126
  7033  0803                     initloop:	
  7034  0803  0012               	moviw fsr0++
  7035  0804  001E               	movwi fsr1++
  7036  0805  0BFE               	decfsz	126,f
  7037  0806  2803               	goto	initloop
  7038  0807  3400               	retlw	0
  7039                           
  7040                           	psect	clrtext
  7041  1485                     clear_ram0:	
  7042                           ;	Called with FSR0 containing the base address, and
  7043                           ;	WREG with the size to clear
  7044                           
  7045  1485  0064               	clrwdt	;clear the watchdog before getting into this loop
  7046  1486                     clrloop0:	
  7047  1486  0180               	clrf	0	;clear RAM location pointed to by FSR
  7048  1487  3101               	addfsr 0,1
  7049  1488  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7050  1489  2C86               	goto	clrloop0	;have we reached the end yet?
  7051  148A  3400               	retlw	0	;all done for this memory range, return
  7052                           
  7053                           	psect	cstackCOMMON
  7054  0070                     __pcstackCOMMON:	
  7055  0070                     ?_EUSART_Write:	
  7056  0070                     ?_LED_SetAuto:	
  7057                           ; 1 bytes @ 0x0
  7058                           
  7059  0070                     ?_LED_PrepareToSavePara:	
  7060                           ; 1 bytes @ 0x0
  7061                           
  7062  0070                     ?_LED_SetOn:	
  7063                           ; 1 bytes @ 0x0
  7064                           
  7065  0070                     ?_LED_SetManualBrights:	
  7066                           ; 1 bytes @ 0x0
  7067                           
  7068  0070                     ?_LED_SetCustom:	
  7069                           ; 1 bytes @ 0x0
  7070                           
  7071  0070                     ?_LED_SetCycle:	
  7072                           ; 1 bytes @ 0x0
  7073                           
  7074  0070                     ?_LED_SetPreviewBrights:	
  7075                           ; 1 bytes @ 0x0
  7076                           
  7077  0070                     ?_LED_StartPreview:	
  7078                           ; 1 bytes @ 0x0
  7079                           
  7080  0070                     ?_LED_StopPreview:	
  7081                           ; 1 bytes @ 0x0
  7082                           
  7083  0070                     ?_RTC_SetCurrentTime:	
  7084                           ; 1 bytes @ 0x0
  7085                           
  7086  0070                     ?_LED_IndicateBle:	
  7087                           ; 1 bytes @ 0x0
  7088                           
  7089  0070                     ?_LED_StartFlash:	
  7090                           ; 1 bytes @ 0x0
  7091                           
  7092  0070                     ?_PIN_Initialize:	
  7093                           ; 1 bytes @ 0x0
  7094                           
  7095  0070                     ?_PWM1_Initialize:	
  7096                           ; 1 bytes @ 0x0
  7097                           
  7098  0070                     ?_PWM2_Initialize:	
  7099                           ; 1 bytes @ 0x0
  7100                           
  7101  0070                     ?_PWM3_Initialize:	
  7102                           ; 1 bytes @ 0x0
  7103                           
  7104  0070                     ?_PWM4_Initialize:	
  7105                           ; 1 bytes @ 0x0
  7106                           
  7107  0070                     ?_PWM5_Initialize:	
  7108                           ; 1 bytes @ 0x0
  7109                           
  7110  0070                     ?_TMR2_Initialize:	
  7111                           ; 1 bytes @ 0x0
  7112                           
  7113  0070                     ?_TMR0_Initialize:	
  7114                           ; 1 bytes @ 0x0
  7115                           
  7116  0070                     ?_EUSART_Initialize:	
  7117                           ; 1 bytes @ 0x0
  7118                           
  7119  0070                     ?_KEY_Scan:	
  7120                           ; 1 bytes @ 0x0
  7121                           
  7122  0070                     ?_LED_UpdateBrightRamp:	
  7123                           ; 1 bytes @ 0x0
  7124                           
  7125  0070                     ?_RTC_Run:	
  7126                           ; 1 bytes @ 0x0
  7127                           
  7128  0070                     ?_EUSART_RCV_ISR:	
  7129                           ; 1 bytes @ 0x0
  7130                           
  7131  0070                     ?_TMR0_ISR:	
  7132                           ; 1 bytes @ 0x0
  7133                           
  7134  0070                     ?_TMR2_ISR:	
  7135                           ; 1 bytes @ 0x0
  7136                           
  7137  0070                     ?_EUSART_Transmit_ISR:	
  7138                           ; 1 bytes @ 0x0
  7139                           
  7140  0070                     ??_EUSART_Transmit_ISR:	
  7141                           ; 1 bytes @ 0x0
  7142                           
  7143  0070                     ?_RTC_GetHour:	
  7144                           ; 1 bytes @ 0x0
  7145                           
  7146  0070                     ?_RTC_GetMinute:	
  7147                           ; 1 bytes @ 0x0
  7148                           
  7149  0070                     ?_RTC_GetSecond:	
  7150                           ; 1 bytes @ 0x0
  7151                           
  7152  0070                     ?_LED_InitStatus:	
  7153                           ; 1 bytes @ 0x0
  7154                           
  7155  0070                     ?_RTC_Initialize:	
  7156                           ; 1 bytes @ 0x0
  7157                           
  7158  0070                     ?_TMR0_StartTimer:	
  7159                           ; 1 bytes @ 0x0
  7160                           
  7161  0070                     ?_TMR2_StartTimer:	
  7162                           ; 1 bytes @ 0x0
  7163                           
  7164  0070                     ?_RTC_IsSecondReady:	
  7165                           ; 1 bytes @ 0x0
  7166                           
  7167  0070                     ?_BLE_Receive:	
  7168                           ; 1 bytes @ 0x0
  7169                           
  7170  0070                     ?_BLE_CheckDevID:	
  7171                           ; 1 bytes @ 0x0
  7172                           
  7173  0070                     ?_BLE_StartTransmit:	
  7174                           ; 1 bytes @ 0x0
  7175                           
  7176  0070                     ?_BLE_StopTransmit:	
  7177                           ; 1 bytes @ 0x0
  7178                           
  7179  0070                     ?_BLE_SendDeviceData:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182  0070                     ?_BLE_SendOTAAck:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185  0070                     ?_BLE_DecodeData:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188  0070                     ?_BLE_Initialize:	
  7189                           ; 1 bytes @ 0x0
  7190                           
  7191  0070                     ?_BLE_ReadyToReceive:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194  0070                     ?_BLE_StartReceive:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197  0070                     ?_BLE_ReceiveComplete:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200  0070                     ?_BLE_StopReceive:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203  0070                     ?_OSCILLATOR_Initialize:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206  0070                     ?_SYSTEM_Initialize:	
  7207                           ; 1 bytes @ 0x0
  7208                           
  7209  0070                     ?_TMR2_InterruptCallback:	
  7210                           ; 1 bytes @ 0x0
  7211                           
  7212  0070                     ?_registerCallback:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0070                     ?_INTERRUPT_InterruptManager:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     ?_EEPROM_Read:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ?_KEY_Read:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ??_KEY_Read:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ?_LED_SavePara:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_LED_ReadPara:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_LED_UpdatePWM:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ?_LED_AutoRun:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_LED_TurnOnRamp:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_LED_TurnOffRamp:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_LED_TurnMax:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_LED_TurnOff:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_LED_FindDeviceFlash:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_LED_Preview:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_LED_IndicateOff:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ?_LED_IndicateDay:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_LED_IndicateNight:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ?_LED_UpdateDayBright:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_LED_UpdateDayRiseStatus:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ?_LED_UpdateNightBright:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ?_LED_UpdateNightRiseStatus:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ?_LED_StateOffAction_OnKeyPressShort:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ?_LED_StateOffAction_OnKeyPressCont:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_LED_StateDay_OnKeyPressShort:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ?_LED_StateDay_OnKeyPressCont:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_LED_StateDay_OnKeyRelease:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ??_LED_StateDay_OnKeyRelease:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_LED_StateNight_OnKeyPressShort:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ??_LED_StateNight_OnKeyPressShort:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_LED_StateNight_OnKeyPressCont:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_LED_StateNight_OnKeyRelease:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ??_LED_StateNight_OnKeyRelease:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_LED_StateBle_OnKeyPressShort:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_LED_ActionOnSecond:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?_LED_InitPara:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?_LED_Initialize:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_main:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?i1_LED_UpdatePWM:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?i1_LED_IndicateOff:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ??i1_LED_IndicateOff:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ?i1_LED_IndicateDay:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ??i1_LED_IndicateDay:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ?i1_LED_IndicateNight:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ??i1_LED_IndicateNight:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ?i1_LED_IndicateBle:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ??i1_LED_IndicateBle:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ?i1_LED_UpdateDayBright:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?i1_LED_UpdateDayRiseStatus:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ??i1_LED_UpdateDayRiseStatus:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?i1_LED_UpdateNightBright:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?i1_LED_UpdateNightRiseStatus:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ??i1_LED_UpdateNightRiseStatus:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?i1_PWM1_LoadDutyValue:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?i1_PWM2_LoadDutyValue:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?i1_PWM3_LoadDutyValue:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?i1_PWM4_LoadDutyValue:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ?i1_PWM5_LoadDutyValue:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ?___lwmod:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0070                     BLE_Receive@rcv:	
  7390                           ; 2 bytes @ 0x0
  7391                           
  7392  0070                     KEY_Read@ReadData:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  0070                     ___lwmod@divisor:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  0070                     i1PWM1_LoadDutyValue@dutyValue:	
  7399                           ; 2 bytes @ 0x0
  7400                           
  7401  0070                     i1PWM2_LoadDutyValue@dutyValue:	
  7402                           ; 2 bytes @ 0x0
  7403                           
  7404  0070                     i1PWM3_LoadDutyValue@dutyValue:	
  7405                           ; 2 bytes @ 0x0
  7406                           
  7407  0070                     i1PWM4_LoadDutyValue@dutyValue:	
  7408                           ; 2 bytes @ 0x0
  7409                           
  7410  0070                     i1PWM5_LoadDutyValue@dutyValue:	
  7411                           ; 2 bytes @ 0x0
  7412                           
  7413                           
  7414                           ; 2 bytes @ 0x0
  7415  0070                     	ds	1
  7416  0071                     ??_EUSART_RCV_ISR:	
  7417  0071                     ??_BLE_Receive:	
  7418                           ; 1 bytes @ 0x1
  7419                           
  7420  0071                     EUSART_RCV_ISR@rcv:	
  7421                           ; 1 bytes @ 0x1
  7422                           
  7423                           
  7424                           ; 1 bytes @ 0x1
  7425  0071                     	ds	1
  7426  0072                     ??i1_PWM1_LoadDutyValue:	
  7427  0072                     ??i1_PWM2_LoadDutyValue:	
  7428                           ; 1 bytes @ 0x2
  7429                           
  7430  0072                     ??i1_PWM3_LoadDutyValue:	
  7431                           ; 1 bytes @ 0x2
  7432                           
  7433  0072                     ??i1_PWM4_LoadDutyValue:	
  7434                           ; 1 bytes @ 0x2
  7435                           
  7436  0072                     ??i1_PWM5_LoadDutyValue:	
  7437                           ; 1 bytes @ 0x2
  7438                           
  7439  0072                     ___lwmod@dividend:	
  7440                           ; 1 bytes @ 0x2
  7441                           
  7442                           
  7443                           ; 2 bytes @ 0x2
  7444  0072                     	ds	2
  7445  0074                     ??___lwmod:	
  7446  0074                     ??i1_LED_UpdatePWM:	
  7447                           ; 1 bytes @ 0x4
  7448                           
  7449  0074                     ___lwmod@counter:	
  7450                           ; 1 bytes @ 0x4
  7451                           
  7452  0074                     i1LED_UpdatePWM@i:	
  7453                           ; 1 bytes @ 0x4
  7454                           
  7455                           
  7456                           ; 1 bytes @ 0x4
  7457  0074                     	ds	1
  7458  0075                     ??_LED_UpdateBrightRamp:	
  7459  0075                     ??_LED_StateBle_OnKeyPressShort:	
  7460                           ; 1 bytes @ 0x5
  7461                           
  7462  0075                     ?_RTC_IsLeapYear:	
  7463                           ; 1 bytes @ 0x5
  7464                           
  7465  0075                     ??i1_LED_UpdateDayBright:	
  7466                           ; 1 bytes @ 0x5
  7467                           
  7468  0075                     ??i1_LED_UpdateNightBright:	
  7469                           ; 1 bytes @ 0x5
  7470                           
  7471  0075                     LED_StateBle_OnKeyPressShort@i:	
  7472                           ; 1 bytes @ 0x5
  7473                           
  7474  0075                     i1LED_UpdateDayBright@i:	
  7475                           ; 1 bytes @ 0x5
  7476                           
  7477  0075                     i1LED_UpdateNightBright@i:	
  7478                           ; 1 bytes @ 0x5
  7479                           
  7480  0075                     RTC_IsLeapYear@year:	
  7481                           ; 1 bytes @ 0x5
  7482                           
  7483                           
  7484                           ; 2 bytes @ 0x5
  7485  0075                     	ds	1
  7486  0076                     ??_LED_StateOffAction_OnKeyPressShort:	
  7487  0076                     ??_LED_StateOffAction_OnKeyPressCont:	
  7488                           ; 1 bytes @ 0x6
  7489                           
  7490  0076                     ??_LED_StateDay_OnKeyPressShort:	
  7491                           ; 1 bytes @ 0x6
  7492                           
  7493  0076                     ??_LED_StateDay_OnKeyPressCont:	
  7494                           ; 1 bytes @ 0x6
  7495                           
  7496  0076                     ??_LED_StateNight_OnKeyPressCont:	
  7497                           ; 1 bytes @ 0x6
  7498                           
  7499                           
  7500                           ; 1 bytes @ 0x6
  7501  0076                     	ds	1
  7502  0077                     ??_RTC_Run:	
  7503  0077                     ??_TMR0_ISR:	
  7504                           ; 1 bytes @ 0x7
  7505                           
  7506  0077                     ??_RTC_IsLeapYear:	
  7507                           ; 1 bytes @ 0x7
  7508                           
  7509                           
  7510                           ; 1 bytes @ 0x7
  7511  0077                     	ds	1
  7512  0078                     ?_LED_StateOffAction_OnKeyStateChanged:	
  7513  0078                     ?_LED_StateDayAction_OnKeyStateChanged:	
  7514                           ; 1 bytes @ 0x8
  7515                           
  7516  0078                     ?_LED_StateNightAction_OnKeyStateChanged:	
  7517                           ; 1 bytes @ 0x8
  7518                           
  7519  0078                     ?_LED_StateBleAction_OnKeyStateChanged:	
  7520                           ; 1 bytes @ 0x8
  7521                           
  7522  0078                     LED_StateOffAction_OnKeyStateChanged@key:	
  7523                           ; 1 bytes @ 0x8
  7524                           
  7525  0078                     LED_StateDayAction_OnKeyStateChanged@key:	
  7526                           ; 1 bytes @ 0x8
  7527                           
  7528  0078                     LED_StateNightAction_OnKeyStateChanged@key:	
  7529                           ; 1 bytes @ 0x8
  7530                           
  7531  0078                     LED_StateBleAction_OnKeyStateChanged@key:	
  7532                           ; 1 bytes @ 0x8
  7533                           
  7534                           
  7535                           ; 1 bytes @ 0x8
  7536  0078                     	ds	1
  7537  0079                     LED_StateOffAction_OnKeyStateChanged@state:	
  7538  0079                     LED_StateDayAction_OnKeyStateChanged@state:	
  7539                           ; 1 bytes @ 0x9
  7540                           
  7541  0079                     LED_StateNightAction_OnKeyStateChanged@state:	
  7542                           ; 1 bytes @ 0x9
  7543                           
  7544  0079                     LED_StateBleAction_OnKeyStateChanged@state:	
  7545                           ; 1 bytes @ 0x9
  7546                           
  7547                           
  7548                           ; 1 bytes @ 0x9
  7549  0079                     	ds	1
  7550  007A                     ?_LED_Action_OnKeyStateChanged:	
  7551  007A                     ??_LED_StateOffAction_OnKeyStateChanged:	
  7552                           ; 1 bytes @ 0xA
  7553                           
  7554  007A                     ??_LED_StateDayAction_OnKeyStateChanged:	
  7555                           ; 1 bytes @ 0xA
  7556                           
  7557  007A                     ??_LED_StateNightAction_OnKeyStateChanged:	
  7558                           ; 1 bytes @ 0xA
  7559                           
  7560  007A                     ??_LED_StateBleAction_OnKeyStateChanged:	
  7561                           ; 1 bytes @ 0xA
  7562                           
  7563  007A                     LED_Action_OnKeyStateChanged@key:	
  7564                           ; 1 bytes @ 0xA
  7565                           
  7566                           
  7567                           ; 1 bytes @ 0xA
  7568  007A                     	ds	1
  7569  007B                     LED_UpdateBrightRamp@i:	
  7570  007B                     LED_Action_OnKeyStateChanged@state:	
  7571                           ; 1 bytes @ 0xB
  7572                           
  7573                           
  7574                           ; 1 bytes @ 0xB
  7575  007B                     	ds	1
  7576  007C                     ??_KEY_Scan:	
  7577  007C                     ??_LED_Action_OnKeyStateChanged:	
  7578                           ; 1 bytes @ 0xC
  7579                           
  7580  007C                     KEY_Scan@keyNum:	
  7581                           ; 1 bytes @ 0xC
  7582                           
  7583                           
  7584                           ; 1 bytes @ 0xC
  7585  007C                     	ds	1
  7586  007D                     ??_TMR2_ISR:	
  7587  007D                     ??_TMR2_InterruptCallback:	
  7588                           ; 1 bytes @ 0xD
  7589                           
  7590  007D                     ??_INTERRUPT_InterruptManager:	
  7591                           ; 1 bytes @ 0xD
  7592                           
  7593                           
  7594                           	psect	cstackBANK0
  7595  0020                     __pcstackBANK0:	
  7596                           ; 1 bytes @ 0xD
  7597                           
  7598  0020                     ??_EUSART_Write:	
  7599  0020                     ??_LED_PrepareToSavePara:	
  7600                           ; 1 bytes @ 0x0
  7601                           
  7602  0020                     ??_LED_SetManualBrights:	
  7603                           ; 1 bytes @ 0x0
  7604                           
  7605  0020                     ??_LED_SetCycle:	
  7606                           ; 1 bytes @ 0x0
  7607                           
  7608  0020                     ??_LED_StartPreview:	
  7609                           ; 1 bytes @ 0x0
  7610                           
  7611  0020                     ??_LED_StopPreview:	
  7612                           ; 1 bytes @ 0x0
  7613                           
  7614  0020                     ??_RTC_SetCurrentTime:	
  7615                           ; 1 bytes @ 0x0
  7616                           
  7617  0020                     ??_LED_IndicateBle:	
  7618                           ; 1 bytes @ 0x0
  7619                           
  7620  0020                     ??_LED_StartFlash:	
  7621                           ; 1 bytes @ 0x0
  7622                           
  7623  0020                     ??_PIN_Initialize:	
  7624                           ; 1 bytes @ 0x0
  7625                           
  7626  0020                     ??_PWM1_Initialize:	
  7627                           ; 1 bytes @ 0x0
  7628                           
  7629  0020                     ??_PWM2_Initialize:	
  7630                           ; 1 bytes @ 0x0
  7631                           
  7632  0020                     ??_PWM3_Initialize:	
  7633                           ; 1 bytes @ 0x0
  7634                           
  7635  0020                     ??_PWM4_Initialize:	
  7636                           ; 1 bytes @ 0x0
  7637                           
  7638  0020                     ??_PWM5_Initialize:	
  7639                           ; 1 bytes @ 0x0
  7640                           
  7641  0020                     ??_TMR2_Initialize:	
  7642                           ; 1 bytes @ 0x0
  7643                           
  7644  0020                     ??_TMR0_Initialize:	
  7645                           ; 1 bytes @ 0x0
  7646                           
  7647  0020                     ??_EUSART_Initialize:	
  7648                           ; 1 bytes @ 0x0
  7649                           
  7650  0020                     ?_KEY_SetOnStateChangedCallback:	
  7651                           ; 1 bytes @ 0x0
  7652                           
  7653  0020                     ?_TMR0_SetInterruptCallback:	
  7654                           ; 1 bytes @ 0x0
  7655                           
  7656  0020                     ?_TMR2_SetInterruptCallback:	
  7657                           ; 1 bytes @ 0x0
  7658                           
  7659  0020                     ?_EUSART_SetReceiveCallback:	
  7660                           ; 1 bytes @ 0x0
  7661                           
  7662  0020                     ?_PWM2_LoadDutyValue:	
  7663                           ; 1 bytes @ 0x0
  7664                           
  7665  0020                     ?_PWM5_LoadDutyValue:	
  7666                           ; 1 bytes @ 0x0
  7667                           
  7668  0020                     ?_PWM3_LoadDutyValue:	
  7669                           ; 1 bytes @ 0x0
  7670                           
  7671  0020                     ?_PWM1_LoadDutyValue:	
  7672                           ; 1 bytes @ 0x0
  7673                           
  7674  0020                     ?_PWM4_LoadDutyValue:	
  7675                           ; 1 bytes @ 0x0
  7676                           
  7677  0020                     ??_RTC_GetHour:	
  7678                           ; 1 bytes @ 0x0
  7679                           
  7680  0020                     ??_RTC_GetMinute:	
  7681                           ; 1 bytes @ 0x0
  7682                           
  7683  0020                     ??_RTC_GetSecond:	
  7684                           ; 1 bytes @ 0x0
  7685                           
  7686  0020                     ?_Util_Increase:	
  7687                           ; 1 bytes @ 0x0
  7688                           
  7689  0020                     ?_Util_Decrease:	
  7690                           ; 1 bytes @ 0x0
  7691                           
  7692  0020                     ??_RTC_Initialize:	
  7693                           ; 1 bytes @ 0x0
  7694                           
  7695  0020                     ??_TMR0_StartTimer:	
  7696                           ; 1 bytes @ 0x0
  7697                           
  7698  0020                     ??_TMR2_StartTimer:	
  7699                           ; 1 bytes @ 0x0
  7700                           
  7701  0020                     ??_RTC_IsSecondReady:	
  7702                           ; 1 bytes @ 0x0
  7703                           
  7704  0020                     ??_BLE_StartTransmit:	
  7705                           ; 1 bytes @ 0x0
  7706                           
  7707  0020                     ??_BLE_StopTransmit:	
  7708                           ; 1 bytes @ 0x0
  7709                           
  7710  0020                     ??_BLE_ReadyToReceive:	
  7711                           ; 1 bytes @ 0x0
  7712                           
  7713  0020                     ??_BLE_StartReceive:	
  7714                           ; 1 bytes @ 0x0
  7715                           
  7716  0020                     ??_BLE_ReceiveComplete:	
  7717                           ; 1 bytes @ 0x0
  7718                           
  7719  0020                     ??_BLE_StopReceive:	
  7720                           ; 1 bytes @ 0x0
  7721                           
  7722  0020                     ??_OSCILLATOR_Initialize:	
  7723                           ; 1 bytes @ 0x0
  7724                           
  7725  0020                     ?_EEPROM_WriteByte:	
  7726                           ; 1 bytes @ 0x0
  7727                           
  7728  0020                     ?_EEPROM_ReadByte:	
  7729                           ; 1 bytes @ 0x0
  7730                           
  7731  0020                     ??_LED_TurnOnRamp:	
  7732                           ; 1 bytes @ 0x0
  7733                           
  7734  0020                     ??_LED_TurnOffRamp:	
  7735                           ; 1 bytes @ 0x0
  7736                           
  7737  0020                     ??_LED_Preview:	
  7738                           ; 1 bytes @ 0x0
  7739                           
  7740  0020                     ??_LED_IndicateOff:	
  7741                           ; 1 bytes @ 0x0
  7742                           
  7743  0020                     ??_LED_IndicateDay:	
  7744                           ; 1 bytes @ 0x0
  7745                           
  7746  0020                     ??_LED_IndicateNight:	
  7747                           ; 1 bytes @ 0x0
  7748                           
  7749  0020                     ??_LED_UpdateDayRiseStatus:	
  7750                           ; 1 bytes @ 0x0
  7751                           
  7752  0020                     ??_LED_UpdateNightRiseStatus:	
  7753                           ; 1 bytes @ 0x0
  7754                           
  7755  0020                     ?___bmul:	
  7756                           ; 1 bytes @ 0x0
  7757                           
  7758  0020                     ?___lwdiv:	
  7759                           ; 1 bytes @ 0x0
  7760                           
  7761  0020                     ?___lmul:	
  7762                           ; 2 bytes @ 0x0
  7763                           
  7764  0020                     LED_TurnOnRamp@i:	
  7765                           ; 4 bytes @ 0x0
  7766                           
  7767  0020                     LED_TurnOffRamp@i:	
  7768                           ; 1 bytes @ 0x0
  7769                           
  7770  0020                     EUSART_Write@byte:	
  7771                           ; 1 bytes @ 0x0
  7772                           
  7773  0020                     PIN_Initialize@state:	
  7774                           ; 1 bytes @ 0x0
  7775                           
  7776  0020                     ___bmul@multiplicand:	
  7777                           ; 1 bytes @ 0x0
  7778                           
  7779  0020                     EEPROM_WriteByte@addr:	
  7780                           ; 1 bytes @ 0x0
  7781                           
  7782  0020                     EEPROM_ReadByte@addr:	
  7783                           ; 2 bytes @ 0x0
  7784                           
  7785  0020                     KEY_SetOnStateChangedCallback@callback:	
  7786                           ; 2 bytes @ 0x0
  7787                           
  7788  0020                     EUSART_SetReceiveCallback@callback:	
  7789                           ; 2 bytes @ 0x0
  7790                           
  7791  0020                     PWM1_LoadDutyValue@dutyValue:	
  7792                           ; 2 bytes @ 0x0
  7793                           
  7794  0020                     PWM2_LoadDutyValue@dutyValue:	
  7795                           ; 2 bytes @ 0x0
  7796                           
  7797  0020                     PWM3_LoadDutyValue@dutyValue:	
  7798                           ; 2 bytes @ 0x0
  7799                           
  7800  0020                     PWM4_LoadDutyValue@dutyValue:	
  7801                           ; 2 bytes @ 0x0
  7802                           
  7803  0020                     PWM5_LoadDutyValue@dutyValue:	
  7804                           ; 2 bytes @ 0x0
  7805                           
  7806  0020                     TMR0_SetInterruptCallback@callback:	
  7807                           ; 2 bytes @ 0x0
  7808                           
  7809  0020                     TMR2_SetInterruptCallback@callback:	
  7810                           ; 2 bytes @ 0x0
  7811                           
  7812  0020                     Util_Increase@psrc:	
  7813                           ; 2 bytes @ 0x0
  7814                           
  7815  0020                     Util_Decrease@psrc:	
  7816                           ; 2 bytes @ 0x0
  7817                           
  7818  0020                     ___lwdiv@divisor:	
  7819                           ; 2 bytes @ 0x0
  7820                           
  7821  0020                     ___lmul@multiplier:	
  7822                           ; 2 bytes @ 0x0
  7823                           
  7824                           
  7825                           ; 4 bytes @ 0x0
  7826  0020                     	ds	1
  7827  0021                     ??_LED_SetAuto:	
  7828  0021                     ??_LED_SetOn:	
  7829                           ; 1 bytes @ 0x1
  7830                           
  7831  0021                     ?_BLE_SendCMD:	
  7832                           ; 1 bytes @ 0x1
  7833                           
  7834  0021                     ??_BLE_SendDeviceData:	
  7835                           ; 1 bytes @ 0x1
  7836                           
  7837  0021                     ??_BLE_SendOTAAck:	
  7838                           ; 1 bytes @ 0x1
  7839                           
  7840  0021                     ??_SYSTEM_Initialize:	
  7841                           ; 1 bytes @ 0x1
  7842                           
  7843  0021                     ??___bmul:	
  7844                           ; 1 bytes @ 0x1
  7845                           
  7846  0021                     BLE_SendDeviceData@len:	
  7847                           ; 1 bytes @ 0x1
  7848                           
  7849  0021                     LED_SetAuto@a:	
  7850                           ; 1 bytes @ 0x1
  7851                           
  7852  0021                     LED_SetOn@on:	
  7853                           ; 1 bytes @ 0x1
  7854                           
  7855  0021                     LED_SetCycle@len:	
  7856                           ; 1 bytes @ 0x1
  7857                           
  7858  0021                     RTC_SetCurrentTime@time:	
  7859                           ; 1 bytes @ 0x1
  7860                           
  7861  0021                     ___bmul@product:	
  7862                           ; 1 bytes @ 0x1
  7863                           
  7864  0021                     BLE_SendCMD@pBuf:	
  7865                           ; 1 bytes @ 0x1
  7866                           
  7867                           
  7868                           ; 2 bytes @ 0x1
  7869  0021                     	ds	1
  7870  0022                     ??_KEY_SetOnStateChangedCallback:	
  7871  0022                     ??_TMR0_SetInterruptCallback:	
  7872                           ; 1 bytes @ 0x2
  7873                           
  7874  0022                     ??_TMR2_SetInterruptCallback:	
  7875                           ; 1 bytes @ 0x2
  7876                           
  7877  0022                     ??_EUSART_SetReceiveCallback:	
  7878                           ; 1 bytes @ 0x2
  7879                           
  7880  0022                     ??_PWM2_LoadDutyValue:	
  7881                           ; 1 bytes @ 0x2
  7882                           
  7883  0022                     ??_PWM5_LoadDutyValue:	
  7884                           ; 1 bytes @ 0x2
  7885                           
  7886  0022                     ??_PWM3_LoadDutyValue:	
  7887                           ; 1 bytes @ 0x2
  7888                           
  7889  0022                     ??_PWM1_LoadDutyValue:	
  7890                           ; 1 bytes @ 0x2
  7891                           
  7892  0022                     ??_PWM4_LoadDutyValue:	
  7893                           ; 1 bytes @ 0x2
  7894                           
  7895  0022                     ??_registerCallback:	
  7896                           ; 1 bytes @ 0x2
  7897                           
  7898  0022                     ??_EEPROM_ReadByte:	
  7899                           ; 1 bytes @ 0x2
  7900                           
  7901  0022                     ??_EEPROM_Read:	
  7902                           ; 1 bytes @ 0x2
  7903                           
  7904  0022                     BLE_SendDeviceData@xor:	
  7905                           ; 1 bytes @ 0x2
  7906                           
  7907  0022                     EEPROM_WriteByte@byte:	
  7908                           ; 1 bytes @ 0x2
  7909                           
  7910  0022                     EEPROM_Read@addr:	
  7911                           ; 1 bytes @ 0x2
  7912                           
  7913  0022                     LED_SetManualBrights@pbuf:	
  7914                           ; 1 bytes @ 0x2
  7915                           
  7916  0022                     LED_SetCycle@pbuf:	
  7917                           ; 1 bytes @ 0x2
  7918                           
  7919  0022                     RTC_SetCurrentTime@i:	
  7920                           ; 1 bytes @ 0x2
  7921                           
  7922  0022                     Util_Increase@delta:	
  7923                           ; 1 bytes @ 0x2
  7924                           
  7925  0022                     Util_Decrease@delta:	
  7926                           ; 1 bytes @ 0x2
  7927                           
  7928  0022                     ___bmul@multiplier:	
  7929                           ; 1 bytes @ 0x2
  7930                           
  7931  0022                     ___lwdiv@dividend:	
  7932                           ; 1 bytes @ 0x2
  7933                           
  7934                           
  7935                           ; 2 bytes @ 0x2
  7936  0022                     	ds	1
  7937  0023                     ??_BLE_SendCMD:	
  7938  0023                     ??_EEPROM_WriteByte:	
  7939                           ; 1 bytes @ 0x3
  7940                           
  7941  0023                     ?_EEPROM_ReadBuffer:	
  7942                           ; 1 bytes @ 0x3
  7943                           
  7944  0023                     ?___wmul:	
  7945                           ; 1 bytes @ 0x3
  7946                           
  7947  0023                     BLE_SendDeviceData@i:	
  7948                           ; 2 bytes @ 0x3
  7949                           
  7950  0023                     EEPROM_WriteByte@GIEBitValue:	
  7951                           ; 1 bytes @ 0x3
  7952                           
  7953  0023                     EEPROM_ReadBuffer@pbuf:	
  7954                           ; 1 bytes @ 0x3
  7955                           
  7956  0023                     LED_SetCycle@i:	
  7957                           ; 1 bytes @ 0x3
  7958                           
  7959  0023                     LED_SetManualBrights@val:	
  7960                           ; 1 bytes @ 0x3
  7961                           
  7962  0023                     Util_Increase@max:	
  7963                           ; 2 bytes @ 0x3
  7964                           
  7965  0023                     Util_Decrease@min:	
  7966                           ; 2 bytes @ 0x3
  7967                           
  7968  0023                     ___wmul@multiplier:	
  7969                           ; 2 bytes @ 0x3
  7970                           
  7971                           
  7972                           ; 2 bytes @ 0x3
  7973  0023                     	ds	1
  7974  0024                     ?_EEPROM_Write:	
  7975  0024                     ??_LED_UpdatePWM:	
  7976                           ; 1 bytes @ 0x4
  7977                           
  7978  0024                     ??_LED_TurnMax:	
  7979                           ; 1 bytes @ 0x4
  7980                           
  7981  0024                     ??_LED_TurnOff:	
  7982                           ; 1 bytes @ 0x4
  7983                           
  7984  0024                     ??___lwdiv:	
  7985                           ; 1 bytes @ 0x4
  7986                           
  7987  0024                     EEPROM_Write@byte:	
  7988                           ; 1 bytes @ 0x4
  7989                           
  7990  0024                     EEPROM_ReadBuffer@len:	
  7991                           ; 1 bytes @ 0x4
  7992                           
  7993  0024                     LED_UpdatePWM@i:	
  7994                           ; 1 bytes @ 0x4
  7995                           
  7996  0024                     ___lwdiv@quotient:	
  7997                           ; 1 bytes @ 0x4
  7998                           
  7999  0024                     ___lmul@multiplicand:	
  8000                           ; 2 bytes @ 0x4
  8001                           
  8002  0024                     BLE_SendCMD@ack:	
  8003                           ; 4 bytes @ 0x4
  8004                           
  8005                           
  8006                           ; 7 bytes @ 0x4
  8007  0024                     	ds	1
  8008  0025                     ??_LED_SetPreviewBrights:	
  8009  0025                     ??_Util_Increase:	
  8010                           ; 1 bytes @ 0x5
  8011                           
  8012  0025                     ??_Util_Decrease:	
  8013                           ; 1 bytes @ 0x5
  8014                           
  8015  0025                     ??_EEPROM_Write:	
  8016                           ; 1 bytes @ 0x5
  8017                           
  8018  0025                     ??_EEPROM_ReadBuffer:	
  8019                           ; 1 bytes @ 0x5
  8020                           
  8021  0025                     ??_LED_UpdateDayBright:	
  8022                           ; 1 bytes @ 0x5
  8023                           
  8024  0025                     ??_LED_UpdateNightBright:	
  8025                           ; 1 bytes @ 0x5
  8026                           
  8027  0025                     EEPROM_Write@addr:	
  8028                           ; 1 bytes @ 0x5
  8029                           
  8030  0025                     LED_UpdateDayBright@i:	
  8031                           ; 1 bytes @ 0x5
  8032                           
  8033  0025                     LED_UpdateNightBright@i:	
  8034                           ; 1 bytes @ 0x5
  8035                           
  8036  0025                     LED_SetManualBrights@i:	
  8037                           ; 1 bytes @ 0x5
  8038                           
  8039  0025                     ___wmul@multiplicand:	
  8040                           ; 1 bytes @ 0x5
  8041                           
  8042                           
  8043                           ; 2 bytes @ 0x5
  8044  0025                     	ds	1
  8045  0026                     ??_LED_InitStatus:	
  8046  0026                     ?_EEPROM_WriteBuffer:	
  8047                           ; 1 bytes @ 0x6
  8048                           
  8049  0026                     EEPROM_WriteBuffer@pbuf:	
  8050                           ; 1 bytes @ 0x6
  8051                           
  8052  0026                     EEPROM_ReadBuffer@addr:	
  8053                           ; 1 bytes @ 0x6
  8054                           
  8055  0026                     LED_InitStatus@sta:	
  8056                           ; 1 bytes @ 0x6
  8057                           
  8058  0026                     ___lwdiv@counter:	
  8059                           ; 1 bytes @ 0x6
  8060                           
  8061                           
  8062                           ; 1 bytes @ 0x6
  8063  0026                     	ds	1
  8064  0027                     ??_LED_SetCustom:	
  8065  0027                     ??_LED_FindDeviceFlash:	
  8066                           ; 1 bytes @ 0x7
  8067                           
  8068  0027                     ??___wmul:	
  8069                           ; 1 bytes @ 0x7
  8070                           
  8071  0027                     EEPROM_WriteBuffer@len:	
  8072                           ; 1 bytes @ 0x7
  8073                           
  8074  0027                     EEPROM_ReadBuffer@i:	
  8075                           ; 1 bytes @ 0x7
  8076                           
  8077  0027                     LED_SetPreviewBrights@val:	
  8078                           ; 1 bytes @ 0x7
  8079                           
  8080  0027                     ___wmul@product:	
  8081                           ; 2 bytes @ 0x7
  8082                           
  8083                           
  8084                           ; 2 bytes @ 0x7
  8085  0027                     	ds	1
  8086  0028                     ??_EEPROM_WriteBuffer:	
  8087  0028                     ??_LED_ReadPara:	
  8088                           ; 1 bytes @ 0x8
  8089                           
  8090  0028                     ??_LED_InitPara:	
  8091                           ; 1 bytes @ 0x8
  8092                           
  8093  0028                     ??___lmul:	
  8094                           ; 1 bytes @ 0x8
  8095                           
  8096  0028                     LED_SetCustom@idx:	
  8097                           ; 1 bytes @ 0x8
  8098                           
  8099  0028                     ___lmul@product:	
  8100                           ; 1 bytes @ 0x8
  8101                           
  8102                           
  8103                           ; 4 bytes @ 0x8
  8104  0028                     	ds	1
  8105  0029                     ?_LED_ManualIncrease:	
  8106  0029                     ?_LED_ManualDecrease:	
  8107                           ; 1 bytes @ 0x9
  8108                           
  8109  0029                     EEPROM_WriteBuffer@addr:	
  8110                           ; 1 bytes @ 0x9
  8111                           
  8112  0029                     LED_SetCustom@i:	
  8113                           ; 1 bytes @ 0x9
  8114                           
  8115  0029                     LED_ManualIncrease@delta:	
  8116                           ; 1 bytes @ 0x9
  8117                           
  8118  0029                     LED_ManualDecrease@delta:	
  8119                           ; 1 bytes @ 0x9
  8120                           
  8121  0029                     LED_SetPreviewBrights@pbuf:	
  8122                           ; 1 bytes @ 0x9
  8123                           
  8124                           
  8125                           ; 1 bytes @ 0x9
  8126  0029                     	ds	1
  8127  002A                     ??_LED_ManualIncrease:	
  8128  002A                     ??_LED_ManualDecrease:	
  8129                           ; 1 bytes @ 0xA
  8130                           
  8131  002A                     EEPROM_WriteBuffer@i:	
  8132                           ; 1 bytes @ 0xA
  8133                           
  8134  002A                     LED_ManualIncrease@chn:	
  8135                           ; 1 bytes @ 0xA
  8136                           
  8137  002A                     LED_ManualDecrease@chn:	
  8138                           ; 1 bytes @ 0xA
  8139                           
  8140  002A                     LED_SetPreviewBrights@i:	
  8141                           ; 1 bytes @ 0xA
  8142                           
  8143  002A                     LED_InitPara@j:	
  8144                           ; 1 bytes @ 0xA
  8145                           
  8146                           
  8147                           ; 1 bytes @ 0xA
  8148  002A                     	ds	1
  8149  002B                     ??_BLE_DecodeData:	
  8150  002B                     ??_LED_SavePara:	
  8151                           ; 1 bytes @ 0xB
  8152                           
  8153  002B                     LED_InitPara@i:	
  8154                           ; 1 bytes @ 0xB
  8155                           
  8156  002B                     BLE_SendCMD@cnt:	
  8157                           ; 1 bytes @ 0xB
  8158                           
  8159                           
  8160                           ; 2 bytes @ 0xB
  8161  002B                     	ds	1
  8162  002C                     ??_LED_Initialize:	
  8163  002C                     ?___lldiv:	
  8164                           ; 1 bytes @ 0xC
  8165                           
  8166  002C                     ___lldiv@divisor:	
  8167                           ; 4 bytes @ 0xC
  8168                           
  8169                           
  8170                           ; 4 bytes @ 0xC
  8171  002C                     	ds	1
  8172  002D                     BLE_SendCMD@rev:	
  8173                           
  8174                           ; 1 bytes @ 0xD
  8175  002D                     	ds	1
  8176  002E                     BLE_SendCMD@index:	
  8177                           
  8178                           ; 1 bytes @ 0xE
  8179  002E                     	ds	1
  8180  002F                     ??_BLE_CheckDevID:	
  8181                           
  8182                           ; 1 bytes @ 0xF
  8183  002F                     	ds	1
  8184  0030                     ___lldiv@dividend:	
  8185  0030                     BLE_CheckDevID@dev:	
  8186                           ; 4 bytes @ 0x10
  8187                           
  8188                           
  8189                           ; 17 bytes @ 0x10
  8190  0030                     	ds	4
  8191  0034                     ??___lldiv:	
  8192  0034                     ___lldiv@quotient:	
  8193                           ; 1 bytes @ 0x14
  8194                           
  8195                           
  8196                           ; 4 bytes @ 0x14
  8197  0034                     	ds	4
  8198  0038                     ___lldiv@counter:	
  8199                           
  8200                           ; 1 bytes @ 0x18
  8201  0038                     	ds	1
  8202  0039                     ??_LED_AutoRun:	
  8203                           
  8204                           ; 1 bytes @ 0x19
  8205  0039                     	ds	8
  8206  0041                     BLE_CheckDevID@cnt:	
  8207                           
  8208                           ; 2 bytes @ 0x21
  8209  0041                     	ds	1
  8210  0042                     LED_AutoRun@val:	
  8211                           
  8212                           ; 20 bytes @ 0x22
  8213  0042                     	ds	1
  8214  0043                     BLE_CheckDevID@rev:	
  8215                           
  8216                           ; 1 bytes @ 0x23
  8217  0043                     	ds	1
  8218  0044                     BLE_CheckDevID@index:	
  8219                           
  8220                           ; 1 bytes @ 0x24
  8221  0044                     	ds	1
  8222  0045                     ??_BLE_Initialize:	
  8223                           
  8224                           ; 1 bytes @ 0x25
  8225  0045                     	ds	17
  8226  0056                     LED_AutoRun@tr:	
  8227                           
  8228                           ; 8 bytes @ 0x36
  8229  0056                     	ds	8
  8230  005E                     LED_AutoRun@dbrt:	
  8231                           
  8232                           ; 1 bytes @ 0x3E
  8233  005E                     	ds	1
  8234  005F                     LED_AutoRun@duration:	
  8235                           
  8236                           ; 2 bytes @ 0x3F
  8237  005F                     	ds	2
  8238  0061                     LED_AutoRun@dt:	
  8239                           
  8240                           ; 4 bytes @ 0x41
  8241  0061                     	ds	4
  8242  0065                     LED_AutoRun@sec:	
  8243                           
  8244                           ; 1 bytes @ 0x45
  8245  0065                     	ds	1
  8246  0066                     LED_AutoRun@j:	
  8247                           
  8248                           ; 1 bytes @ 0x46
  8249  0066                     	ds	1
  8250  0067                     LED_AutoRun@et:	
  8251                           
  8252                           ; 2 bytes @ 0x47
  8253  0067                     	ds	2
  8254  0069                     LED_AutoRun@ct:	
  8255                           
  8256                           ; 2 bytes @ 0x49
  8257  0069                     	ds	2
  8258  006B                     LED_AutoRun@st:	
  8259                           
  8260                           ; 2 bytes @ 0x4B
  8261  006B                     	ds	2
  8262  006D                     LED_AutoRun@k:	
  8263                           
  8264                           ; 1 bytes @ 0x4D
  8265  006D                     	ds	1
  8266  006E                     LED_AutoRun@i:	
  8267                           
  8268                           ; 1 bytes @ 0x4E
  8269  006E                     	ds	1
  8270  006F                     ??_LED_ActionOnSecond:	
  8271  006F                     ??_main:	
  8272                           ; 1 bytes @ 0x4F
  8273                           
  8274                           
  8275                           	psect	text1
  8276  1590                     __ptext1:	
  8277 ;; *************** function _registerCallback *****************
  8278 ;; Defined at:
  8279 ;;		line 82 in file "src/comman.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0, pclath, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 1F/2
  8290 ;;		On exit  : 1F/1
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;Total ram usage:        0 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:   11
  8300 ;; This function calls:
  8301 ;;		_EUSART_SetReceiveCallback
  8302 ;;		_KEY_SetOnStateChangedCallback
  8303 ;;		_TMR0_SetInterruptCallback
  8304 ;;		_TMR2_SetInterruptCallback
  8305 ;; This function is called by:
  8306 ;;		_main
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function _registerCallback
  8312  1590                     _registerCallback:	
  8313                           
  8314                           ;comman.c: 83: KEY_SetOnStateChangedCallback( LED_Action_OnKeyStateChanged );
  8315                           
  8316                           ;incstack = 0
  8317                           ; Regs used in _registerCallback: [wreg+status,2+status,0+pclath+cstack]
  8318  1590  30BE               	movlw	low _LED_Action_OnKeyStateChanged
  8319  1591  0020               	movlb	0	; select bank0
  8320  1592  00A0               	movwf	KEY_SetOnStateChangedCallback@callback
  8321  1593  3014               	movlw	high _LED_Action_OnKeyStateChanged
  8322  1594  00A1               	movwf	KEY_SetOnStateChangedCallback@callback+1
  8323  1595  25AB  3195         	fcall	_KEY_SetOnStateChangedCallback
  8324                           
  8325                           ;comman.c: 84: TMR0_SetInterruptCallback( RTC_Run );
  8326  1597  3058               	movlw	low _RTC_Run
  8327  1598  0020               	movlb	0	; select bank0
  8328  1599  00A0               	movwf	TMR0_SetInterruptCallback@callback
  8329  159A  3007               	movlw	high _RTC_Run
  8330  159B  00A1               	movwf	TMR0_SetInterruptCallback@callback+1
  8331  159C  25B3  3195         	fcall	_TMR0_SetInterruptCallback
  8332                           
  8333                           ;comman.c: 85: TMR2_SetInterruptCallback( TMR2_InterruptCallback );
  8334  159E  30CB               	movlw	low _TMR2_InterruptCallback
  8335  159F  0020               	movlb	0	; select bank0
  8336  15A0  00A0               	movwf	TMR2_SetInterruptCallback@callback
  8337  15A1  3015               	movlw	high _TMR2_InterruptCallback
  8338  15A2  00A1               	movwf	TMR2_SetInterruptCallback@callback+1
  8339  15A3  25C3  3195         	fcall	_TMR2_SetInterruptCallback
  8340                           
  8341                           ;comman.c: 86: EUSART_SetReceiveCallback( BLE_Receive );
  8342  15A5  30AF               	movlw	low _BLE_Receive
  8343  15A6  0020               	movlb	0	; select bank0
  8344  15A7  00A0               	movwf	EUSART_SetReceiveCallback@callback
  8345  15A8  3014               	movlw	high _BLE_Receive
  8346  15A9  00A1               	movwf	EUSART_SetReceiveCallback@callback+1
  8347  15AA  2DBB               	ljmp	l4705
  8348  15AB                     __end_of_registerCallback:	
  8349  15AB                     __ptext4:	
  8350 ;; *************** function _KEY_SetOnStateChangedCallback *****************
  8351 ;; Defined at:
  8352 ;;		line 66 in file "src/key.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,e
  8355 ;;		 -> LED_Action_OnKeyStateChanged(1), 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg
  8362 ;; Tracked objects:
  8363 ;;		On entry : 1F/0
  8364 ;;		On exit  : 1F/1
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:   10
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_registerCallback
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           
  8382                           ;psect for function _KEY_SetOnStateChangedCallback
  8383  15AB                     _KEY_SetOnStateChangedCallback:	
  8384                           
  8385                           ;key.c: 67: fnKeyAction = callback;
  8386                           
  8387                           ;incstack = 0
  8388                           ; Regs used in _KEY_SetOnStateChangedCallback: [wreg]
  8389  15AB  0821               	movf	KEY_SetOnStateChangedCallback@callback+1,w
  8390  15AC  0021               	movlb	1	; select bank1
  8391  15AD  00AE               	movwf	(_fnKeyAction+1)^(0+128)
  8392  15AE  0020               	movlb	0	; select bank0
  8393  15AF  0820               	movf	KEY_SetOnStateChangedCallback@callback,w
  8394  15B0  0021               	movlb	1	; select bank1
  8395  15B1  00AD               	movwf	_fnKeyAction^(0+128)
  8396  15B2  0008               	return
  8397  15B3                     __end_of_KEY_SetOnStateChangedCallback:	
  8398  15B3                     __ptext3:	
  8399 ;; *************** function _TMR0_SetInterruptCallback *****************
  8400 ;; Defined at:
  8401 ;;		line 43 in file "src/tmr.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  callback        2    0[BANK0 ] PTR FTN()void 
  8404 ;;		 -> RTC_Run(1), 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg
  8411 ;; Tracked objects:
  8412 ;;		On entry : 1F/0
  8413 ;;		On exit  : 1F/1
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        2 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:   10
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_registerCallback
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _TMR0_SetInterruptCallback
  8432  15B3                     _TMR0_SetInterruptCallback:	
  8433                           
  8434                           ;tmr.c: 44: fnTmr0Callback = callback;
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _TMR0_SetInterruptCallback: [wreg]
  8438  15B3  0821               	movf	TMR0_SetInterruptCallback@callback+1,w
  8439  15B4  0021               	movlb	1	; select bank1
  8440  15B5  00AA               	movwf	(_fnTmr0Callback+1)^(0+128)
  8441  15B6  0020               	movlb	0	; select bank0
  8442  15B7  0820               	movf	TMR0_SetInterruptCallback@callback,w
  8443  15B8  0021               	movlb	1	; select bank1
  8444  15B9  00A9               	movwf	_fnTmr0Callback^(0+128)
  8445  15BA  0008               	return
  8446  15BB                     __end_of_TMR0_SetInterruptCallback:	
  8447  15BB                     __ptext5:	
  8448 ;; *************** function _EUSART_SetReceiveCallback *****************
  8449 ;; Defined at:
  8450 ;;		line 116 in file "src/eusart.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
  8453 ;;		 -> BLE_Receive(1), 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg
  8460 ;; Tracked objects:
  8461 ;;		On entry : 1F/0
  8462 ;;		On exit  : 1F/1
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;Total ram usage:        2 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:   10
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_registerCallback
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _EUSART_SetReceiveCallback
  8481  15BB                     _EUSART_SetReceiveCallback:	
  8482  15BB                     l4705:	
  8483                           ;incstack = 0
  8484                           ; Regs used in _EUSART_SetReceiveCallback: [wreg]
  8485                           
  8486                           
  8487                           ;eusart.c: 117: fnReceiveCallback = callback;
  8488  15BB  0821               	movf	EUSART_SetReceiveCallback@callback+1,w
  8489  15BC  0021               	movlb	1	; select bank1
  8490  15BD  00AC               	movwf	(_fnReceiveCallback+1)^(0+128)
  8491  15BE  0020               	movlb	0	; select bank0
  8492  15BF  0820               	movf	EUSART_SetReceiveCallback@callback,w
  8493  15C0  0021               	movlb	1	; select bank1
  8494  15C1  00AB               	movwf	_fnReceiveCallback^(0+128)
  8495  15C2  0008               	return
  8496  15C3                     __end_of_EUSART_SetReceiveCallback:	
  8497  15C3                     __ptext2:	
  8498 ;; *************** function _TMR2_SetInterruptCallback *****************
  8499 ;; Defined at:
  8500 ;;		line 85 in file "src/tmr.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  callback        2    0[BANK0 ] PTR FTN()void 
  8503 ;;		 -> TMR2_InterruptCallback(1), 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg
  8510 ;; Tracked objects:
  8511 ;;		On entry : 1F/0
  8512 ;;		On exit  : 1F/1
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:   10
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_registerCallback
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           
  8530                           ;psect for function _TMR2_SetInterruptCallback
  8531  15C3                     _TMR2_SetInterruptCallback:	
  8532                           
  8533                           ;tmr.c: 86: fnTmr2Callback = callback;
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _TMR2_SetInterruptCallback: [wreg]
  8537  15C3  0821               	movf	TMR2_SetInterruptCallback@callback+1,w
  8538  15C4  0021               	movlb	1	; select bank1
  8539  15C5  00A8               	movwf	(_fnTmr2Callback+1)^(0+128)
  8540  15C6  0020               	movlb	0	; select bank0
  8541  15C7  0820               	movf	TMR2_SetInterruptCallback@callback,w
  8542  15C8  0021               	movlb	1	; select bank1
  8543  15C9  00A7               	movwf	_fnTmr2Callback^(0+128)
  8544  15CA  0008               	return
  8545  15CB                     __end_of_TMR2_SetInterruptCallback:	
  8546                           
  8547                           	psect	text8
  8548  1649                     __ptext8:	
  8549 ;; *************** function _SYSTEM_Initialize *****************
  8550 ;; Defined at:
  8551 ;;		line 57 in file "src/comman.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0, pclath, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : B1F/0
  8562 ;;		On exit  : 1F/1
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   11
  8572 ;; This function calls:
  8573 ;;		_EUSART_Initialize
  8574 ;;		_OSCILLATOR_Initialize
  8575 ;;		_PIN_Initialize
  8576 ;;		_PWM1_Initialize
  8577 ;;		_PWM2_Initialize
  8578 ;;		_PWM3_Initialize
  8579 ;;		_PWM4_Initialize
  8580 ;;		_PWM5_Initialize
  8581 ;;		_TMR0_Initialize
  8582 ;;		_TMR2_Initialize
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           
  8589                           ;psect for function _SYSTEM_Initialize
  8590  1649                     _SYSTEM_Initialize:	
  8591                           
  8592                           ;comman.c: 58: PIN_Initialize( );
  8593                           
  8594                           ;incstack = 0
  8595                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8596  1649  2666  3196         	fcall	_PIN_Initialize
  8597                           
  8598                           ;comman.c: 59: OSCILLATOR_Initialize( );
  8599  164B  265C  3196         	fcall	_OSCILLATOR_Initialize
  8600                           
  8601                           ;comman.c: 60: PWM1_Initialize( );
  8602  164D  26B0  3196         	fcall	_PWM1_Initialize
  8603                           
  8604                           ;comman.c: 61: PWM2_Initialize( );
  8605  164F  26BA  3196         	fcall	_PWM2_Initialize
  8606                           
  8607                           ;comman.c: 62: PWM3_Initialize( );
  8608  1651  26C3  3196         	fcall	_PWM3_Initialize
  8609                           
  8610                           ;comman.c: 63: PWM4_Initialize( );
  8611  1653  26CE  3196         	fcall	_PWM4_Initialize
  8612                           
  8613                           ;comman.c: 64: PWM5_Initialize( );
  8614  1655  26D9  3196         	fcall	_PWM5_Initialize
  8615                           
  8616                           ;comman.c: 65: TMR2_Initialize( );
  8617  1657  26E3  3196         	fcall	_TMR2_Initialize
  8618                           
  8619                           ;comman.c: 66: TMR0_Initialize( );
  8620  1659  2701  3196         	fcall	_TMR0_Initialize
  8621                           
  8622                           ;comman.c: 67: EUSART_Initialize( );
  8623  165B  2EED               	ljmp	l4681
  8624  165C                     __end_of_SYSTEM_Initialize:	
  8625  165C                     __ptext17:	
  8626 ;; *************** function _OSCILLATOR_Initialize *****************
  8627 ;; Defined at:
  8628 ;;		line 43 in file "src/comman.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      void 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 1F/12
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:   10
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_SYSTEM_Initialize
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _OSCILLATOR_Initialize
  8658  165C                     _OSCILLATOR_Initialize:	
  8659                           
  8660                           ;comman.c: 45: OSCCON1 = 0x60;
  8661                           
  8662                           ;incstack = 0
  8663                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8664  165C  3060               	movlw	96
  8665  165D  0032               	movlb	18	; select bank18
  8666  165E  0099               	movwf	25	;volatile
  8667                           
  8668                           ;comman.c: 47: OSCCON3 = 0x00;
  8669  165F  019B               	clrf	27	;volatile
  8670                           
  8671                           ;comman.c: 49: OSCEN = 0x48;
  8672  1660  3048               	movlw	72
  8673  1661  009D               	movwf	29	;volatile
  8674                           
  8675                           ;comman.c: 51: OSCFRQ = 0x06;
  8676  1662  3006               	movlw	6
  8677  1663  009F               	movwf	31	;volatile
  8678                           
  8679                           ;comman.c: 53: OSCTUNE = 0x00;
  8680  1664  019E               	clrf	30	;volatile
  8681  1665  0008               	return
  8682  1666                     __end_of_OSCILLATOR_Initialize:	
  8683  1666                     __ptext16:	
  8684 ;; *************** function _PIN_Initialize *****************
  8685 ;; Defined at:
  8686 ;;		line 3 in file "src/pin.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  state           1    0[BANK0 ] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0
  8695 ;; Tracked objects:
  8696 ;;		On entry : B1F/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;Total ram usage:        1 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:   10
  8707 ;; This function calls:
  8708 ;;		Nothing
  8709 ;; This function is called by:
  8710 ;;		_SYSTEM_Initialize
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           
  8715                           ;psect for function _PIN_Initialize
  8716  1666                     _PIN_Initialize:	
  8717                           
  8718                           ;pin.c: 8: LATA = 0x02;
  8719                           
  8720                           ;incstack = 0
  8721                           ; Regs used in _PIN_Initialize: [wreg+status,2+status,0]
  8722  1666  3002               	movlw	2
  8723  1667  0022               	movlb	2	; select bank2
  8724  1668  008C               	movwf	12	;volatile
  8725                           
  8726                           ;pin.c: 9: LATB = 0xD0;
  8727  1669  30D0               	movlw	208
  8728  166A  008D               	movwf	13	;volatile
  8729                           
  8730                           ;pin.c: 10: LATC = 0x00;
  8731  166B  018E               	clrf	14	;volatile
  8732                           
  8733                           ;pin.c: 15: TRISA = 0x34;
  8734  166C  3034               	movlw	52
  8735  166D  0021               	movlb	1	; select bank1
  8736  166E  008C               	movwf	12	;volatile
  8737                           
  8738                           ;pin.c: 16: TRISB = 0x00;
  8739  166F  018D               	clrf	13	;volatile
  8740                           
  8741                           ;pin.c: 17: TRISC = 0x05;
  8742  1670  3005               	movlw	5
  8743  1671  008E               	movwf	14	;volatile
  8744                           
  8745                           ;pin.c: 22: ANSELC = 0x00;
  8746  1672  0023               	movlb	3	; select bank3
  8747  1673  018E               	clrf	14	;volatile
  8748                           
  8749                           ;pin.c: 23: ANSELB = 0x00;
  8750  1674  018D               	clrf	13	;volatile
  8751                           
  8752                           ;pin.c: 24: ANSELA = 0x00;
  8753  1675  018C               	clrf	12	;volatile
  8754                           
  8755                           ;pin.c: 29: WPUB = 0x00;
  8756  1676  0024               	movlb	4	; select bank4
  8757  1677  018D               	clrf	13	;volatile
  8758                           
  8759                           ;pin.c: 30: WPUA = 0x04;
  8760  1678  3004               	movlw	4
  8761  1679  008C               	movwf	12	;volatile
  8762                           
  8763                           ;pin.c: 31: WPUC = 0x01;
  8764  167A  3001               	movlw	1
  8765  167B  008E               	movwf	14	;volatile
  8766                           
  8767                           ;pin.c: 36: ODCONA = 0x00;
  8768  167C  0025               	movlb	5	; select bank5
  8769  167D  018C               	clrf	12	;volatile
  8770                           
  8771                           ;pin.c: 37: ODCONB = 0x00;
  8772  167E  018D               	clrf	13	;volatile
  8773                           
  8774                           ;pin.c: 38: ODCONC = 0x00;
  8775  167F  018E               	clrf	14	;volatile
  8776                           
  8777                           ;pin.c: 40: uint8_t state = GIE;
  8778  1680  3000               	movlw	0
  8779  1681  1B8B               	btfsc	11,7	;volatile
  8780  1682  3001               	movlw	1
  8781  1683  0020               	movlb	0	; select bank0
  8782  1684  00A0               	movwf	PIN_Initialize@state
  8783                           
  8784                           ;pin.c: 41: GIE = 0;
  8785  1685  138B               	bcf	11,7	;volatile
  8786                           
  8787                           ;pin.c: 42: PPSLOCK = 0x55;
  8788                           
  8789                           ;pin.c: 43: PPSLOCK = 0xAA;
  8790  1686  270C  3196         	fcall	PL68	;call to abstracted procedure
  8791                           
  8792                           ;pin.c: 44: PPSLOCKbits.PPSLOCKED = 0x00;
  8793  1688  100F               	bcf	15,0	;volatile
  8794                           
  8795                           ;pin.c: 46: RXPPSbits.RXPPS = 0x12;
  8796  1689  0824               	movf	36,w	;volatile
  8797  168A  39E0               	andlw	-32
  8798  168B  3812               	iorlw	18
  8799  168C  00A4               	movwf	36	;volatile
  8800                           
  8801                           ;pin.c: 47: RB4PPSbits.RB4PPS = 0x14;
  8802  168D  003D               	movlb	29	; select bank29
  8803  168E  081C               	movf	28,w	;volatile
  8804  168F  39E0               	andlw	-32
  8805  1690  3814               	iorlw	20
  8806  1691  009C               	movwf	28	;volatile
  8807                           
  8808                           ;pin.c: 48: RC5PPSbits.RC5PPS = 0x0C;
  8809  1692  0825               	movf	37,w	;volatile
  8810  1693  39E0               	andlw	-32
  8811  1694  380C               	iorlw	12
  8812  1695  00A5               	movwf	37	;volatile
  8813                           
  8814                           ;pin.c: 49: RC4PPSbits.RC4PPS = 0x0D;
  8815  1696  0824               	movf	36,w	;volatile
  8816  1697  39E0               	andlw	-32
  8817  1698  380D               	iorlw	13
  8818  1699  00A4               	movwf	36	;volatile
  8819                           
  8820                           ;pin.c: 50: RC3PPSbits.RC3PPS = 0x0E;
  8821  169A  0823               	movf	35,w	;volatile
  8822  169B  39E0               	andlw	-32
  8823  169C  380E               	iorlw	14
  8824  169D  00A3               	movwf	35	;volatile
  8825                           
  8826                           ;pin.c: 51: RC6PPSbits.RC6PPS = 0x0F;
  8827  169E  0826               	movf	38,w	;volatile
  8828  169F  39E0               	andlw	-32
  8829  16A0  380F               	iorlw	15
  8830  16A1  00A6               	movwf	38	;volatile
  8831                           
  8832                           ;pin.c: 52: RC7PPSbits.RC7PPS = 0x02;
  8833  16A2  0827               	movf	39,w	;volatile
  8834  16A3  39E0               	andlw	-32
  8835  16A4  3802               	iorlw	2
  8836  16A5  00A7               	movwf	39	;volatile
  8837                           
  8838                           ;pin.c: 54: PPSLOCK = 0x55;
  8839                           
  8840                           ;pin.c: 55: PPSLOCK = 0xAA;
  8841  16A6  270C  3196         	fcall	PL68	;call to abstracted procedure
  8842                           
  8843                           ;pin.c: 56: PPSLOCKbits.PPSLOCKED = 0x01;
  8844  16A8  140F               	bsf	15,0	;volatile
  8845                           
  8846                           ;pin.c: 58: GIE = state;
  8847  16A9  0020               	movlb	0	; select bank0
  8848  16AA  1C20               	btfss	PIN_Initialize@state,0
  8849  16AB  2EAE               	goto	u3940
  8850  16AC  178B               	bsf	11,7	;volatile
  8851  16AD  0008               	return
  8852  16AE                     u3940:	
  8853  16AE  138B               	bcf	11,7	;volatile
  8854  16AF  0008               	return
  8855  16B0                     __end_of_PIN_Initialize:	
  8856  16B0                     __ptext15:	
  8857 ;; *************** function _PWM1_Initialize *****************
  8858 ;; Defined at:
  8859 ;;		line 4 in file "src/pwm.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;		None
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 1F/12
  8870 ;;		On exit  : 1F/5
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;Total ram usage:        0 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:   10
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_SYSTEM_Initialize
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function _PWM1_Initialize
  8889  16B0                     _PWM1_Initialize:	
  8890                           
  8891                           ;pwm.c: 8: CCP1CON = 0x8F;
  8892                           
  8893                           ;incstack = 0
  8894                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  8895  16B0  308F               	movlw	143
  8896  16B1  0025               	movlb	5	; select bank5
  8897  16B2  0093               	movwf	19	;volatile
  8898                           
  8899                           ;pwm.c: 11: CCPR1H = 0x00;
  8900  16B3  0192               	clrf	18	;volatile
  8901                           
  8902                           ;pwm.c: 14: CCPR1L = 0x00;
  8903  16B4  0191               	clrf	17	;volatile
  8904                           
  8905                           ;pwm.c: 17: CCPTMRSbits.C1TSEL = 0x1;
  8906  16B5  081F               	movf	31,w	;volatile
  8907  16B6  39FC               	andlw	-4
  8908  16B7  3801               	iorlw	1
  8909  16B8  009F               	movwf	31	;volatile
  8910  16B9  0008               	return
  8911  16BA                     __end_of_PWM1_Initialize:	
  8912  16BA                     __ptext14:	
  8913 ;; *************** function _PWM2_Initialize *****************
  8914 ;; Defined at:
  8915 ;;		line 34 in file "src/pwm.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 1F/5
  8926 ;;		On exit  : 1F/5
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:        0 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:   10
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_SYSTEM_Initialize
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _PWM2_Initialize
  8945  16BA                     _PWM2_Initialize:	
  8946                           
  8947                           ;pwm.c: 38: CCP2CON = 0x8F;
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
  8951  16BA  308F               	movlw	143
  8952  16BB  0097               	movwf	23	;volatile
  8953                           
  8954                           ;pwm.c: 41: CCPR2H = 0x00;
  8955  16BC  0196               	clrf	22	;volatile
  8956                           
  8957                           ;pwm.c: 44: CCPR2L = 0x00;
  8958  16BD  0195               	clrf	21	;volatile
  8959                           
  8960                           ;pwm.c: 47: CCPTMRSbits.C2TSEL = 0x1;
  8961  16BE  081F               	movf	31,w	;volatile
  8962  16BF  39F3               	andlw	-13
  8963  16C0  3804               	iorlw	4
  8964  16C1  009F               	movwf	31	;volatile
  8965  16C2  0008               	return
  8966  16C3                     __end_of_PWM2_Initialize:	
  8967  16C3                     __ptext13:	
  8968 ;; *************** function _PWM3_Initialize *****************
  8969 ;; Defined at:
  8970 ;;		line 64 in file "src/pwm.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 1F/5
  8981 ;;		On exit  : 1F/5
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        0 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:   10
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_SYSTEM_Initialize
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           
  8999                           ;psect for function _PWM3_Initialize
  9000  16C3                     _PWM3_Initialize:	
  9001                           
  9002                           ;pwm.c: 68: CCP3CON = 0x8F;
  9003                           
  9004                           ;incstack = 0
  9005                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  9006  16C3  308F               	movlw	143
  9007  16C4  0026               	movlb	6	; select bank6
  9008  16C5  0093               	movwf	19	;volatile
  9009                           
  9010                           ;pwm.c: 71: CCPR3H = 0x00;
  9011  16C6  0192               	clrf	18	;volatile
  9012                           
  9013                           ;pwm.c: 74: CCPR3L = 0x00;
  9014  16C7  0191               	clrf	17	;volatile
  9015                           
  9016                           ;pwm.c: 77: CCPTMRSbits.C3TSEL = 0x1;
  9017  16C8  0025               	movlb	5	; select bank5
  9018  16C9  081F               	movf	31,w	;volatile
  9019  16CA  39CF               	andlw	-49
  9020  16CB  3810               	iorlw	16
  9021  16CC  009F               	movwf	31	;volatile
  9022  16CD  0008               	return
  9023  16CE                     __end_of_PWM3_Initialize:	
  9024  16CE                     __ptext12:	
  9025 ;; *************** function _PWM4_Initialize *****************
  9026 ;; Defined at:
  9027 ;;		line 94 in file "src/pwm.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 1F/5
  9038 ;;		On exit  : 1F/5
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;Total ram usage:        0 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:   10
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_SYSTEM_Initialize
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _PWM4_Initialize
  9057  16CE                     _PWM4_Initialize:	
  9058                           
  9059                           ;pwm.c: 98: CCP4CON = 0x8F;
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
  9063  16CE  308F               	movlw	143
  9064  16CF  0026               	movlb	6	; select bank6
  9065  16D0  0097               	movwf	23	;volatile
  9066                           
  9067                           ;pwm.c: 101: CCPR4H = 0x00;
  9068  16D1  0196               	clrf	22	;volatile
  9069                           
  9070                           ;pwm.c: 104: CCPR4L = 0x00;
  9071  16D2  0195               	clrf	21	;volatile
  9072                           
  9073                           ;pwm.c: 107: CCPTMRSbits.C4TSEL = 0x1;
  9074  16D3  0025               	movlb	5	; select bank5
  9075  16D4  081F               	movf	31,w	;volatile
  9076  16D5  393F               	andlw	-193
  9077  16D6  3840               	iorlw	64
  9078  16D7  009F               	movwf	31	;volatile
  9079  16D8  0008               	return
  9080  16D9                     __end_of_PWM4_Initialize:	
  9081  16D9                     __ptext11:	
  9082 ;; *************** function _PWM5_Initialize *****************
  9083 ;; Defined at:
  9084 ;;		line 124 in file "src/pwm.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;		None
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      void 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0
  9093 ;; Tracked objects:
  9094 ;;		On entry : 1F/5
  9095 ;;		On exit  : 1F/C
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;Total ram usage:        0 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; Hardware stack levels required when called:   10
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_SYSTEM_Initialize
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           
  9113                           ;psect for function _PWM5_Initialize
  9114  16D9                     _PWM5_Initialize:	
  9115                           
  9116                           ;pwm.c: 125: PWM5DCH = 0;
  9117                           
  9118                           ;incstack = 0
  9119                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  9120  16D9  002C               	movlb	12	; select bank12
  9121  16DA  0198               	clrf	24	;volatile
  9122                           
  9123                           ;pwm.c: 126: PWM5DCL = 0;
  9124  16DB  0197               	clrf	23	;volatile
  9125                           
  9126                           ;pwm.c: 127: PWMTMRSbits.P5TSEL = 0X01;
  9127  16DC  081F               	movf	31,w	;volatile
  9128  16DD  39FC               	andlw	-4
  9129  16DE  3801               	iorlw	1
  9130  16DF  009F               	movwf	31	;volatile
  9131                           
  9132                           ;pwm.c: 128: PWM5CON = 0X80;
  9133  16E0  3080               	movlw	128
  9134  16E1  0099               	movwf	25	;volatile
  9135  16E2  0008               	return
  9136  16E3                     __end_of_PWM5_Initialize:	
  9137  16E3                     __ptext9:	
  9138 ;; *************** function _TMR2_Initialize *****************
  9139 ;; Defined at:
  9140 ;;		line 58 in file "src/tmr.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		wreg, status,2
  9149 ;; Tracked objects:
  9150 ;;		On entry : 1F/C
  9151 ;;		On exit  : 1F/1
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:   10
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_SYSTEM_Initialize
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           
  9169                           ;psect for function _TMR2_Initialize
  9170  16E3                     _TMR2_Initialize:	
  9171                           
  9172                           ;tmr.c: 62: T2CON = 0x78;
  9173                           
  9174                           ;incstack = 0
  9175                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9176  16E3  3078               	movlw	120
  9177  16E4  0020               	movlb	0	; select bank0
  9178  16E5  009F               	movwf	31	;volatile
  9179                           
  9180                           ;tmr.c: 65: PR2 = 0xF9;
  9181  16E6  30F9               	movlw	249
  9182  16E7  009E               	movwf	30	;volatile
  9183                           
  9184                           ;tmr.c: 68: TMR2 = 0x00;
  9185  16E8  019D               	clrf	29	;volatile
  9186                           
  9187                           ;tmr.c: 71: PIR1bits.TMR2IF = 0;
  9188  16E9  1091               	bcf	17,1	;volatile
  9189                           
  9190                           ;tmr.c: 74: PIE1bits.TMR2IE = 1;
  9191  16EA  0021               	movlb	1	; select bank1
  9192  16EB  1491               	bsf	17,1	;volatile
  9193  16EC  0008               	return
  9194  16ED                     __end_of_TMR2_Initialize:	
  9195  16ED                     __ptext18:	
  9196 ;; *************** function _EUSART_Initialize *****************
  9197 ;; Defined at:
  9198 ;;		line 12 in file "src/eusart.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;		None
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;		None
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      void 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2
  9207 ;; Tracked objects:
  9208 ;;		On entry : 1F/1
  9209 ;;		On exit  : 1F/1
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;Total ram usage:        0 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:   10
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_SYSTEM_Initialize
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           
  9227                           ;psect for function _EUSART_Initialize
  9228  16ED                     _EUSART_Initialize:	
  9229  16ED                     l4681:	
  9230                           ;incstack = 0
  9231                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  9232                           
  9233                           
  9234                           ;eusart.c: 14: PIE1bits.RCIE = 0;
  9235  16ED  1291               	bcf	17,5	;volatile
  9236                           
  9237                           ;eusart.c: 15: PIE1bits.TXIE = 0;
  9238  16EE  1211               	bcf	17,4	;volatile
  9239                           
  9240                           ;eusart.c: 20: BAUD1CON = 0x08;
  9241  16EF  3008               	movlw	8
  9242  16F0  0023               	movlb	3	; select bank3
  9243  16F1  009F               	movwf	31	;volatile
  9244                           
  9245                           ;eusart.c: 23: RC1STA = 0x90;
  9246  16F2  3090               	movlw	144
  9247  16F3  009D               	movwf	29	;volatile
  9248                           
  9249                           ;eusart.c: 26: TX1STA = 0x24;
  9250  16F4  3024               	movlw	36
  9251  16F5  009E               	movwf	30	;volatile
  9252                           
  9253                           ;eusart.c: 29: SP1BRGL = 0xA0;
  9254  16F6  30A0               	movlw	160
  9255  16F7  009B               	movwf	27	;volatile
  9256                           
  9257                           ;eusart.c: 32: SP1BRGH = 0x01;
  9258  16F8  3001               	movlw	1
  9259  16F9  009C               	movwf	28	;volatile
  9260                           
  9261                           ;eusart.c: 35: PIE1bits.RCIE = 1;
  9262  16FA  0021               	movlb	1	; select bank1
  9263  16FB  1691               	bsf	17,5	;volatile
  9264  16FC  3040               	movlw	64
  9265                           
  9266                           ;eusart.c: 37: txTail = 0;
  9267  16FD  01B0               	clrf	_txTail^(0+128)
  9268  16FE  01AF               	clrf	_txHead^(0+128)
  9269                           
  9270                           ;eusart.c: 39: txRemain = sizeof (txBuf );
  9271  16FF  00EA               	movwf	_txRemain^(0+128)
  9272  1700  0008               	return
  9273  1701                     __end_of_EUSART_Initialize:	
  9274  1701                     __ptext10:	
  9275 ;; *************** function _TMR0_Initialize *****************
  9276 ;; Defined at:
  9277 ;;		line 13 in file "src/tmr.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  1    wreg      void 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2
  9286 ;; Tracked objects:
  9287 ;;		On entry : 1F/1
  9288 ;;		On exit  : 1F/1
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;Total ram usage:        0 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:   10
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_SYSTEM_Initialize
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           
  9306                           ;psect for function _TMR0_Initialize
  9307  1701                     _TMR0_Initialize:	
  9308                           
  9309                           ;tmr.c: 17: T0CON0 = 0x00;
  9310                           
  9311                           ;incstack = 0
  9312                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  9313  1701  0020               	movlb	0	; select bank0
  9314  1702  0197               	clrf	23	;volatile
  9315                           
  9316                           ;tmr.c: 20: T0CON1 = 0xD7;
  9317  1703  30D7               	movlw	215
  9318  1704  0098               	movwf	24	;volatile
  9319                           
  9320                           ;tmr.c: 23: TMR0H = 0xFF;
  9321  1705  30FF               	movlw	255
  9322  1706  0096               	movwf	22	;volatile
  9323                           
  9324                           ;tmr.c: 26: TMR0L = 0x00;
  9325  1707  0195               	clrf	21	;volatile
  9326                           
  9327                           ;tmr.c: 29: PIR0bits.TMR0IF = 0;
  9328  1708  1290               	bcf	16,5	;volatile
  9329                           
  9330                           ;tmr.c: 32: PIE0bits.TMR0IE = 1;
  9331  1709  0021               	movlb	1	; select bank1
  9332  170A  1690               	bsf	16,5	;volatile
  9333  170B  0008               	return
  9334  170C                     __end_of_TMR0_Initialize:	
  9335  170C                     PL68:	
  9336  170C  3055               	movlw	85
  9337  170D  003C               	movlb	28	; select bank28
  9338  170E  008F               	movwf	15	;volatile
  9339  170F  30AA               	movlw	170
  9340  1710  008F               	movwf	15	;volatile
  9341  1711  0008               	return
  9342  1712                     __end_ofPL68:	
  9343                           
  9344                           	psect	text23
  9345  14E0                     __ptext23:	
  9346 ;; *************** function _LED_UpdateNightRiseStatus *****************
  9347 ;; Defined at:
  9348 ;;		line 319 in file "src/led.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg
  9357 ;; Tracked objects:
  9358 ;;		On entry : 1F/2
  9359 ;;		On exit  : 1C/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   10
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_LED_InitPara
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           
  9377                           ;psect for function _LED_UpdateNightRiseStatus
  9378  14E0                     _LED_UpdateNightRiseStatus:	
  9379  14E0                     l4111:	
  9380                           ;incstack = 0
  9381                           ; Regs used in _LED_UpdateNightRiseStatus: [wreg]
  9382                           
  9383                           
  9384                           ;led.c: 320: if ( gLedPara.tPara.nNightBrt > 1000 - 200 ) {
  9385  14E0  3003               	movlw	3
  9386  14E1  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
  9387  14E2  3021               	movlw	33
  9388  14E3  1903               	skipnz
  9389  14E4  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
  9390  14E5  1C03               	skipc
  9391  14E6  2CEA               	goto	l4115
  9392                           
  9393                           ;led.c: 321: gLedRunPara.fNr = 0;
  9394  14E7  0021               	movlb	1	; select bank1
  9395  14E8  1238               	bcf	_gLedRunPara^(0+128),4	;volatile
  9396                           
  9397                           ;led.c: 322: } else if ( gLedPara.tPara.nNightBrt < 200 ) {
  9398  14E9  0008               	return
  9399  14EA                     l4115:	
  9400  14EA  3000               	movlw	0
  9401  14EB  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
  9402  14EC  30C8               	movlw	200
  9403  14ED  1903               	skipnz
  9404  14EE  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
  9405  14EF  1803               	skipnc
  9406  14F0  0008               	return
  9407                           
  9408                           ;led.c: 323: gLedRunPara.fNr = 1;
  9409  14F1  0021               	movlb	1	; select bank1
  9410  14F2  1638               	bsf	_gLedRunPara^(0+128),4	;volatile
  9411  14F3  0008               	return
  9412  14F4                     __end_of_LED_UpdateNightRiseStatus:	
  9413                           
  9414                           	psect	text26
  9415  1536                     __ptext26:	
  9416 ;; *************** function _EEPROM_ReadBuffer *****************
  9417 ;; Defined at:
  9418 ;;		line 85 in file "src/eeprom.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  addr            1    wreg     unsigned char 
  9421 ;;  pbuf            1    3[BANK0 ] const PTR unsigned char 
  9422 ;;		 -> gLedPara(55), 
  9423 ;;  len             1    4[BANK0 ] unsigned char 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  addr            1    6[BANK0 ] unsigned char 
  9426 ;;  i               1    7[BANK0 ] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9431 ;; Tracked objects:
  9432 ;;		On entry : 1F/0
  9433 ;;		On exit  : 1F/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;Total ram usage:        5 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:   12
  9443 ;; This function calls:
  9444 ;;		_EEPROM_Read
  9445 ;; This function is called by:
  9446 ;;		_LED_ReadPara
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           
  9451                           ;psect for function _EEPROM_ReadBuffer
  9452  1536                     _EEPROM_ReadBuffer:	
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _EEPROM_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9456                           ;EEPROM_ReadBuffer@addr stored from wreg
  9457  1536  00A6               	movwf	EEPROM_ReadBuffer@addr
  9458                           
  9459                           ;eeprom.c: 86: for ( uint8_t i = 0; i < len; i++ ) {
  9460  1537  01A7               	clrf	EEPROM_ReadBuffer@i
  9461  1538                     l3809:	
  9462  1538  0824               	movf	EEPROM_ReadBuffer@len,w
  9463  1539  0227               	subwf	EEPROM_ReadBuffer@i,w
  9464  153A  1803               	btfsc	3,0
  9465  153B  0008               	return
  9466                           
  9467                           ;eeprom.c: 87: *( pbuf + i ) = EEPROM_Read( addr + i );
  9468  153C  0827               	movf	EEPROM_ReadBuffer@i,w
  9469  153D  0723               	addwf	EEPROM_ReadBuffer@pbuf,w
  9470  153E  00A5               	movwf	??_EEPROM_ReadBuffer
  9471  153F  0086               	movwf	6
  9472  1540  3001               	movlw	1	; select bank2/3
  9473  1541  0087               	movwf	7
  9474  1542  0826               	movf	EEPROM_ReadBuffer@addr,w
  9475  1543  0727               	addwf	EEPROM_ReadBuffer@i,w
  9476  1544  254A  3195         	fcall	_EEPROM_Read
  9477  1546  0081               	movwf	1
  9478  1547  0020               	movlb	0	; select bank0
  9479  1548  0AA7               	incf	EEPROM_ReadBuffer@i,f
  9480  1549  2D38               	goto	l3809
  9481  154A                     __end_of_EEPROM_ReadBuffer:	
  9482  154A                     __ptext27:	
  9483 ;; *************** function _EEPROM_Read *****************
  9484 ;; Defined at:
  9485 ;;		line 57 in file "src/eeprom.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  addr            1    wreg     unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  addr            1    2[BANK0 ] unsigned char 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, pclath, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 1F/0
  9496 ;;		On exit  : 1F/11
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;Total ram usage:        1 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:   11
  9506 ;; This function calls:
  9507 ;;		_EEPROM_ReadByte
  9508 ;; This function is called by:
  9509 ;;		_EEPROM_ReadBuffer
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           
  9514                           ;psect for function _EEPROM_Read
  9515  154A                     _EEPROM_Read:	
  9516                           
  9517                           ;incstack = 0
  9518                           ; Regs used in _EEPROM_Read: [wreg+pclath+cstack]
  9519                           ;EEPROM_Read@addr stored from wreg
  9520  154A  00A2               	movwf	EEPROM_Read@addr
  9521                           
  9522                           ;eeprom.c: 58: return EEPROM_ReadByte( 0x7000 + addr );
  9523  154B  00A0               	movwf	EEPROM_ReadByte@addr
  9524  154C  3070               	movlw	112
  9525  154D  01A1               	clrf	EEPROM_ReadByte@addr+1
  9526  154E  07A1               	addwf	EEPROM_ReadByte@addr+1,f
  9527  154F  2D50               	ljmp	l3561
  9528  1550                     __end_of_EEPROM_Read:	
  9529  1550                     __ptext28:	
  9530 ;; *************** function _EEPROM_ReadByte *****************
  9531 ;; Defined at:
  9532 ;;		line 24 in file "src/eeprom.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  addr            2    0[BANK0 ] unsigned int 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      unsigned char 
  9539 ;; Registers used:
  9540 ;;		wreg
  9541 ;; Tracked objects:
  9542 ;;		On entry : 1F/0
  9543 ;;		On exit  : 1F/11
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;Total ram usage:        2 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:   10
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_EEPROM_Read
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           
  9561                           ;psect for function _EEPROM_ReadByte
  9562  1550                     _EEPROM_ReadByte:	
  9563  1550                     l3561:	
  9564                           ;incstack = 0
  9565                           ; Regs used in _EEPROM_ReadByte: [wreg]
  9566                           
  9567                           
  9568                           ;eeprom.c: 25: NVMADRH = ( ( addr >> 8 ) & 0xFF );
  9569  1550  0821               	movf	EEPROM_ReadByte@addr+1,w
  9570  1551  0031               	movlb	17	; select bank17
  9571  1552  0092               	movwf	18	;volatile
  9572                           
  9573                           ;eeprom.c: 26: NVMADRL = ( addr & 0xFF );
  9574  1553  0020               	movlb	0	; select bank0
  9575  1554  0820               	movf	EEPROM_ReadByte@addr,w
  9576  1555  0031               	movlb	17	; select bank17
  9577  1556  0091               	movwf	17	;volatile
  9578                           
  9579                           ;eeprom.c: 27: NVMCON1bits.NVMREGS = 1;
  9580  1557  1715               	bsf	21,6	;volsfr
  9581                           
  9582                           ;eeprom.c: 28: NVMCON1bits.RD = 1;
  9583  1558  1415               	bsf	21,0	;volsfr
  9584                           
  9585                           ;eeprom.c: 29: __nop();
  9586  1559  0000               	nop
  9587                           
  9588                           ;eeprom.c: 30: __nop();
  9589  155A  0000               	nop
  9590                           
  9591                           ;eeprom.c: 32: return ( NVMDATL );
  9592  155B  0031               	movlb	17	; select bank17
  9593  155C  0813               	movf	19,w	;volatile
  9594  155D  0008               	return
  9595  155E                     __end_of_EEPROM_ReadByte:	
  9596                           
  9597                           	psect	text29
  9598  0821                     __ptext29:	
  9599 ;; *************** function _LED_ActionOnSecond *****************
  9600 ;; Defined at:
  9601 ;;		line 630 in file "src/led.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 1F/1
  9612 ;;		On exit  : 1F/1
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   15
  9622 ;; This function calls:
  9623 ;;		_LED_AutoRun
  9624 ;;		_LED_FindDeviceFlash
  9625 ;;		_LED_Preview
  9626 ;;		_LED_SavePara
  9627 ;; This function is called by:
  9628 ;;		_main
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function _LED_ActionOnSecond
  9634  0821                     _LED_ActionOnSecond:	
  9635                           
  9636                           ;led.c: 632: if ( gLedRunPara.find ) {
  9637                           
  9638                           ;incstack = 0
  9639                           ; Regs used in _LED_ActionOnSecond: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9640  0821  1C38               	btfss	_gLedRunPara^(0+128),0	;volatile
  9641  0822  2827               	goto	l5179
  9642                           
  9643                           ;led.c: 633: LED_FindDeviceFlash( );
  9644  0823  3186  261F  3188   	fcall	_LED_FindDeviceFlash
  9645                           
  9646                           ;led.c: 634: } else if ( gLedPara.fSta == 3 && gLedPara.fAuto ) {
  9647  0826  2836               	goto	l5189
  9648  0827                     l5179:	
  9649  0827  0022               	movlb	2	; select bank2
  9650  0828  0C20               	rrf	_gLedPara^(0+256),w	;volatile
  9651  0829  3903               	andlw	3
  9652  082A  3A03               	xorlw	3
  9653  082B  1903               	btfsc	3,2
  9654  082C  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  9655  082D  2836               	goto	l5189
  9656                           
  9657                           ;led.c: 636: if ( gLedRunPara.fPrev ) {
  9658  082E  0021               	movlb	1	; select bank1
  9659  082F  1D38               	btfss	_gLedRunPara^(0+128),2	;volatile
  9660  0830  2834               	goto	l5187
  9661                           
  9662                           ;led.c: 637: LED_Preview( );
  9663  0831  2344  3188         	fcall	_LED_Preview
  9664                           
  9665                           ;led.c: 638: } else {
  9666  0833  2836               	goto	l5189
  9667  0834                     l5187:	
  9668                           
  9669                           ;led.c: 639: LED_AutoRun( );
  9670  0834  2147  3188         	fcall	_LED_AutoRun
  9671  0836                     l5189:	
  9672                           
  9673                           ;led.c: 640: }
  9674                           ;led.c: 641: }
  9675                           ;led.c: 643: if ( gLedRunPara.fSave ) {
  9676  0836  0021               	movlb	1	; select bank1
  9677  0837  1CB8               	btfss	_gLedRunPara^(0+128),1	;volatile
  9678  0838  0008               	return
  9679                           
  9680                           ;led.c: 644: LED_SavePara( );
  9681  0839  2BC7               	ljmp	l4707
  9682  083A                     __end_of_LED_ActionOnSecond:	
  9683  083A                     __ptext73:	
  9684 ;; *************** function _LED_SetCustom *****************
  9685 ;; Defined at:
  9686 ;;		line 699 in file "src/led.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  idx             1    wreg     unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;  idx             1    8[BANK0 ] unsigned char 
  9691 ;;  i               1    9[BANK0 ] unsigned char 
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      unsigned char 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 1F/4
  9698 ;;		On exit  : 1C/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;Total ram usage:        3 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:   11
  9708 ;; This function calls:
  9709 ;;		___bmul
  9710 ;;		___lwdiv
  9711 ;; This function is called by:
  9712 ;;		_BLE_DecodeData
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           
  9717                           ;psect for function _LED_SetCustom
  9718  083A                     _LED_SetCustom:	
  9719                           
  9720                           ;incstack = 0
  9721                           ; Regs used in _LED_SetCustom: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9722                           ;LED_SetCustom@idx stored from wreg
  9723  083A  0020               	movlb	0	; select bank0
  9724  083B  00A8               	movwf	LED_SetCustom@idx
  9725                           
  9726                           ;led.c: 700: if ( !gLedRunPara.find && !gLedPara.fAuto && gLedPara.mPara.manualPara.fOn 
      +                          && idx < 4 ) {
  9727  083C  0021               	movlb	1	; select bank1
  9728  083D  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
  9729  083E  3400               	retlw	0
  9730  083F  0022               	movlb	2	; select bank2
  9731  0840  1C20               	btfss	_gLedPara^(0+256),0	;volatile
  9732  0841  1C21               	btfss	(_gLedPara^(0+256)+1),0	;volatile
  9733  0842  3400               	retlw	0
  9734  0843  3004               	movlw	4
  9735  0844  0020               	movlb	0	; select bank0
  9736  0845  0228               	subwf	LED_SetCustom@idx,w
  9737  0846  1803               	skipnc
  9738  0847  3400               	retlw	0
  9739                           
  9740                           ;led.c: 701: for ( uint8_t i = 0; i < 5; i++ ) {
  9741  0848  01A9               	clrf	LED_SetCustom@i
  9742  0849                     l4429:	
  9743                           
  9744                           ;led.c: 702: gLedPara.mPara.manualPara.nCustomBrt[idx][i] = gLedRunPara.nCurrentBrt[i] /
      +                           10;
  9745  0849  3005               	movlw	5
  9746  084A  00A0               	movwf	___bmul@multiplicand
  9747  084B  0828               	movf	LED_SetCustom@idx,w
  9748  084C  22B0  3188         	fcall	___bmul
  9749  084E  3E2D               	addlw	(low ((_gLedPara| (0+256)+13)))& (0+255)
  9750  084F  0729               	addwf	LED_SetCustom@i,w
  9751  0850  00A7               	movwf	??_LED_SetCustom
  9752  0851  0086               	movwf	6
  9753  0852  3001               	movlw	1	; select bank2/3
  9754  0853  0087               	movwf	7
  9755  0854  300A               	movlw	10
  9756  0855  00A0               	movwf	___lwdiv@divisor
  9757  0856  01A1               	clrf	___lwdiv@divisor+1
  9758  0857  3529               	lslf	LED_SetCustom@i,w
  9759  0858  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
  9760  0859  0084               	movwf	4
  9761  085A  0185               	clrf	5
  9762  085B  3F00               	moviw [0]fsr0
  9763  085C  00A2               	movwf	___lwdiv@dividend
  9764  085D  3F01               	moviw [1]fsr0
  9765  085E  00A3               	movwf	___lwdiv@dividend+1
  9766  085F  2069  3188         	fcall	___lwdiv
  9767  0861  0820               	movf	?___lwdiv,w
  9768  0862  0081               	movwf	1
  9769  0863  3005               	movlw	5
  9770  0864  0AA9               	incf	LED_SetCustom@i,f
  9771  0865  0229               	subwf	LED_SetCustom@i,w
  9772  0866  1803               	btfsc	3,0
  9773                           
  9774                           ;led.c: 703: }
  9775                           ;led.c: 704: return 1;
  9776  0867  3401               	retlw	1
  9777  0868  2849               	goto	l4429
  9778  0869                     __end_of_LED_SetCustom:	
  9779                           ;led.c: 705: }
  9780                           ;led.c: 706: return 0;
  9781                           
  9782  0869                     __ptext74:	
  9783 ;; *************** function ___lwdiv *****************
  9784 ;; Defined at:
  9785 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  divisor         2    0[BANK0 ] unsigned int 
  9788 ;;  dividend        2    2[BANK0 ] unsigned int 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  quotient        2    4[BANK0 ] unsigned int 
  9791 ;;  counter         1    6[BANK0 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2    0[BANK0 ] unsigned int 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 1F/0
  9798 ;;		On exit  : 1F/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;Total ram usage:        7 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:   10
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_LED_SetCustom
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           
  9816                           ;psect for function ___lwdiv
  9817  0869                     ___lwdiv:	
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9821  0869  01A4               	clrf	___lwdiv@quotient
  9822  086A  01A5               	clrf	___lwdiv@quotient+1
  9823  086B  0820               	movf	___lwdiv@divisor,w
  9824  086C  0421               	iorwf	___lwdiv@divisor+1,w
  9825  086D  1903               	btfsc	3,2
  9826  086E  2889               	goto	l4239
  9827  086F  01A6               	clrf	___lwdiv@counter
  9828  0870                     L11:	
  9829  0870  0AA6               	incf	___lwdiv@counter,f
  9830  0871  1BA1               	btfsc	___lwdiv@divisor+1,7
  9831  0872  2876               	goto	l4227
  9832  0873  35A0               	lslf	___lwdiv@divisor,f
  9833  0874  0DA1               	rlf	___lwdiv@divisor+1,f
  9834  0875  2870               	goto	L11
  9835  0876                     l4227:	
  9836  0876  35A4               	lslf	___lwdiv@quotient,f
  9837  0877  0DA5               	rlf	___lwdiv@quotient+1,f
  9838  0878  0821               	movf	___lwdiv@divisor+1,w
  9839  0879  0223               	subwf	___lwdiv@dividend+1,w
  9840  087A  1D03               	skipz
  9841  087B  287E               	goto	u3485
  9842  087C  0820               	movf	___lwdiv@divisor,w
  9843  087D  0222               	subwf	___lwdiv@dividend,w
  9844  087E                     u3485:	
  9845  087E  1C03               	skipc
  9846  087F  2885               	goto	l4235
  9847  0880  0820               	movf	___lwdiv@divisor,w
  9848  0881  02A2               	subwf	___lwdiv@dividend,f
  9849  0882  0821               	movf	___lwdiv@divisor+1,w
  9850  0883  3BA3               	subwfb	___lwdiv@dividend+1,f
  9851  0884  1424               	bsf	___lwdiv@quotient,0
  9852  0885                     l4235:	
  9853  0885  36A1               	lsrf	___lwdiv@divisor+1,f
  9854  0886  0CA0               	rrf	___lwdiv@divisor,f
  9855  0887  0BA6               	decfsz	___lwdiv@counter,f
  9856  0888  2876               	goto	l4227
  9857  0889                     l4239:	
  9858  0889  0825               	movf	___lwdiv@quotient+1,w
  9859  088A  00A1               	movwf	?___lwdiv+1
  9860  088B  0824               	movf	___lwdiv@quotient,w
  9861  088C  00A0               	movwf	?___lwdiv
  9862  088D  0008               	return
  9863  088E                     __end_of___lwdiv:	
  9864  088E                     __ptext22:	
  9865 ;; *************** function _LED_InitPara *****************
  9866 ;; Defined at:
  9867 ;;		line 798 in file "src/led.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  j               1   10[BANK0 ] unsigned char 
  9872 ;;  i               1   11[BANK0 ] unsigned char 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  1    wreg      void 
  9875 ;; Registers used:
  9876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9877 ;; Tracked objects:
  9878 ;;		On entry : 1F/1
  9879 ;;		On exit  : 1C/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;Total ram usage:        4 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:   14
  9889 ;; This function calls:
  9890 ;;		_LED_ReadPara
  9891 ;;		_LED_UpdateDayRiseStatus
  9892 ;;		_LED_UpdateNightRiseStatus
  9893 ;;		___bmul
  9894 ;; This function is called by:
  9895 ;;		_LED_Initialize
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           
  9900                           ;psect for function _LED_InitPara
  9901  088E                     _LED_InitPara:	
  9902                           
  9903                           ;led.c: 799: LED_ReadPara( );
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _LED_InitPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9907  088E  2328  3188         	fcall	_LED_ReadPara
  9908                           
  9909                           ;led.c: 800: gLedPara.fRsv = 0;
  9910  0890  3007               	movlw	-249
  9911  0891  0022               	movlb	2	; select bank2
  9912  0892  05A0               	andwf	_gLedPara^(0+256),f	;volatile
  9913                           
  9914                           ;led.c: 801: gLedPara.mPara.manualPara.fRsv = 0;
  9915  0893  3001               	movlw	-255
  9916  0894  05A1               	andwf	(_gLedPara^(0+256)+1),f	;volatile
  9917                           
  9918                           ;led.c: 802: for ( uint8_t i = 0; i < 5; i++ ) {
  9919  0895  0020               	movlb	0	; select bank0
  9920  0896  01AB               	clrf	LED_InitPara@i
  9921  0897                     l4845:	
  9922                           
  9923                           ;led.c: 804: if ( gLedPara.mPara.manualPara.nBrt[i] > 1000 ) {
  9924  0897  352B               	lslf	LED_InitPara@i,w
  9925  0898  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  9926  0899  0086               	movwf	6
  9927  089A  3001               	movlw	1	; select bank2/3
  9928  089B  0087               	movwf	7
  9929  089C  3F40               	moviw [0]fsr1
  9930  089D  00A8               	movwf	??_LED_InitPara
  9931  089E  3F41               	moviw [1]fsr1
  9932  089F  00A9               	movwf	??_LED_InitPara+1
  9933  08A0  3003               	movlw	3
  9934  08A1  0229               	subwf	??_LED_InitPara+1,w
  9935  08A2  30E9               	movlw	233
  9936  08A3  1903               	skipnz
  9937  08A4  0228               	subwf	??_LED_InitPara,w
  9938  08A5  1C03               	skipc
  9939  08A6  28B2               	goto	l4849
  9940                           
  9941                           ;led.c: 805: gLedPara.mPara.manualPara.nBrt[i] = 1000;
  9942  08A7  30E8               	movlw	232
  9943  08A8  00A8               	movwf	??_LED_InitPara
  9944  08A9  3003               	movlw	3
  9945  08AA  00A9               	movwf	??_LED_InitPara+1
  9946  08AB  352B               	lslf	LED_InitPara@i,w
  9947  08AC  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
  9948  08AD  0086               	movwf	6
  9949  08AE  0828               	movf	??_LED_InitPara,w
  9950  08AF  3FC0               	movwi [0]fsr1
  9951  08B0  0829               	movf	??_LED_InitPara+1,w
  9952  08B1  3FC1               	movwi [1]fsr1
  9953  08B2                     l4849:	
  9954                           
  9955                           ;led.c: 806: }
  9956                           ;led.c: 808: for ( uint8_t j = 0; j < 4; j++ ) {
  9957  08B2  01AA               	clrf	LED_InitPara@j
  9958  08B3                     l4855:	
  9959                           
  9960                           ;led.c: 809: if ( gLedPara.mPara.manualPara.nCustomBrt[j][i] > 100 ) {
  9961  08B3  3005               	movlw	5
  9962  08B4  00A0               	movwf	___bmul@multiplicand
  9963  08B5  082A               	movf	LED_InitPara@j,w
  9964  08B6  22B0  3188         	fcall	___bmul
  9965  08B8  3E2D               	addlw	(low ((_gLedPara| (0+256)+13)))& (0+255)
  9966  08B9  072B               	addwf	LED_InitPara@i,w
  9967  08BA  00A8               	movwf	??_LED_InitPara
  9968  08BB  0086               	movwf	6
  9969  08BC  3001               	movlw	1	; select bank2/3
  9970  08BD  0087               	movwf	7
  9971  08BE  3065               	movlw	101
  9972  08BF  0201               	subwf	1,w
  9973  08C0  1C03               	skipc
  9974  08C1  28CF               	goto	l4859
  9975                           
  9976                           ;led.c: 810: gLedPara.mPara.manualPara.nCustomBrt[j][i] = 100;
  9977  08C2  3005               	movlw	5
  9978  08C3  00A0               	movwf	___bmul@multiplicand
  9979  08C4  082A               	movf	LED_InitPara@j,w
  9980  08C5  22B0  3188         	fcall	___bmul
  9981  08C7  3E2D               	addlw	(low ((_gLedPara| (0+256)+13)))& (0+255)
  9982  08C8  072B               	addwf	LED_InitPara@i,w
  9983  08C9  00A8               	movwf	??_LED_InitPara
  9984  08CA  0086               	movwf	6
  9985  08CB  3001               	movlw	1	; select bank2/3
  9986  08CC  0087               	movwf	7
  9987  08CD  3064               	movlw	100
  9988  08CE  0081               	movwf	1
  9989  08CF                     l4859:	
  9990  08CF  3004               	movlw	4
  9991  08D0  0AAA               	incf	LED_InitPara@j,f
  9992  08D1  022A               	subwf	LED_InitPara@j,w
  9993  08D2  1C03               	skipc
  9994  08D3  28B3               	goto	l4855
  9995                           
  9996                           ;led.c: 811: }
  9997                           ;led.c: 812: }
  9998                           ;led.c: 814: if ( gLedPara.aPara.autoPara.daylight[i] > 100 ) {
  9999  08D4  082B               	movf	LED_InitPara@i,w
 10000  08D5  3E45               	addlw	(low ((_gLedPara| (0+256)+37)))& (0+255)
 10001  08D6  0086               	movwf	6
 10002  08D7  3001               	movlw	1	; select bank2/3
 10003  08D8  0087               	movwf	7
 10004  08D9  3065               	movlw	101
 10005  08DA  0201               	subwf	1,w
 10006                           
 10007                           ;led.c: 815: gLedPara.aPara.autoPara.daylight[i] = 100;
 10008  08DB  082B               	movf	LED_InitPara@i,w
 10009  08DC  1C03               	skipc
 10010  08DD  28E3               	goto	L1
 10011  08DE  3E45               	addlw	(low ((_gLedPara| (0+256)+37)))& (0+255)
 10012  08DF  0086               	movwf	6
 10013  08E0  3064               	movlw	100
 10014  08E1  0081               	movwf	1
 10015                           
 10016                           ;led.c: 816: }
 10017                           ;led.c: 818: if ( gLedPara.aPara.autoPara.moonlight[i] > 100 ) {
 10018  08E2  082B               	movf	LED_InitPara@i,w
 10019  08E3                     L1:	
 10020  08E3  3E4E               	addlw	(low ((_gLedPara| (0+256)+46)))& (0+255)
 10021  08E4  0086               	movwf	6
 10022  08E5  3001               	movlw	1	; select bank2/3
 10023  08E6  0087               	movwf	7
 10024  08E7  3065               	movlw	101
 10025  08E8  0201               	subwf	1,w
 10026  08E9  1C03               	skipc
 10027  08EA  28F0               	goto	l4869
 10028                           
 10029                           ;led.c: 819: gLedPara.aPara.autoPara.moonlight[i] = 100;
 10030  08EB  082B               	movf	LED_InitPara@i,w
 10031  08EC  3E4E               	addlw	(low ((_gLedPara| (0+256)+46)))& (0+255)
 10032  08ED  0086               	movwf	6
 10033  08EE  3064               	movlw	100
 10034  08EF  0081               	movwf	1
 10035  08F0                     l4869:	
 10036  08F0  3005               	movlw	5
 10037  08F1  0AAB               	incf	LED_InitPara@i,f
 10038  08F2  022B               	subwf	LED_InitPara@i,w
 10039  08F3  1C03               	skipc
 10040  08F4  2897               	goto	l4845
 10041                           
 10042                           ;led.c: 820: }
 10043                           ;led.c: 821: }
 10044                           ;led.c: 824: if ( gLedPara.aPara.autoPara.sunrise.start.hour > 23 ) {
 10045  08F5  3018               	movlw	24
 10046  08F6  0022               	movlb	2	; select bank2
 10047  08F7  0241               	subwf	(_gLedPara^(0+256)+33),w	;volatile
 10048  08F8  1803               	btfsc	3,0
 10049                           
 10050                           ;led.c: 825: gLedPara.aPara.autoPara.sunrise.start.hour = 0;
 10051  08F9  01C1               	clrf	(_gLedPara^(0+256)+33)	;volatile
 10052                           
 10053                           ;led.c: 826: }
 10054                           ;led.c: 827: if ( gLedPara.aPara.autoPara.sunrise.start.minute > 59 ) {
 10055  08FA  303C               	movlw	60
 10056  08FB  0242               	subwf	(_gLedPara^(0+256)+34),w	;volatile
 10057  08FC  1803               	btfsc	3,0
 10058                           
 10059                           ;led.c: 828: gLedPara.aPara.autoPara.sunrise.start.minute = 0;
 10060  08FD  01C2               	clrf	(_gLedPara^(0+256)+34)	;volatile
 10061                           
 10062                           ;led.c: 829: }
 10063                           ;led.c: 831: if ( gLedPara.aPara.autoPara.sunrise.end.hour > 23 ) {
 10064  08FE  3018               	movlw	24
 10065  08FF  0243               	subwf	(_gLedPara^(0+256)+35),w	;volatile
 10066  0900  1803               	btfsc	3,0
 10067                           
 10068                           ;led.c: 832: gLedPara.aPara.autoPara.sunrise.end.hour = 0;
 10069  0901  01C3               	clrf	(_gLedPara^(0+256)+35)	;volatile
 10070                           
 10071                           ;led.c: 833: }
 10072                           ;led.c: 834: if ( gLedPara.aPara.autoPara.sunrise.end.minute > 59 ) {
 10073  0902  303C               	movlw	60
 10074  0903  0244               	subwf	(_gLedPara^(0+256)+36),w	;volatile
 10075  0904  1803               	btfsc	3,0
 10076                           
 10077                           ;led.c: 835: gLedPara.aPara.autoPara.sunrise.end.minute = 0;
 10078  0905  01C4               	clrf	(_gLedPara^(0+256)+36)	;volatile
 10079                           
 10080                           ;led.c: 836: }
 10081                           ;led.c: 838: if ( gLedPara.aPara.autoPara.sunset.start.hour > 23 ) {
 10082  0906  3018               	movlw	24
 10083  0907  024A               	subwf	(_gLedPara^(0+256)+42),w	;volatile
 10084  0908  1803               	btfsc	3,0
 10085                           
 10086                           ;led.c: 839: gLedPara.aPara.autoPara.sunset.start.hour = 0;
 10087  0909  01CA               	clrf	(_gLedPara^(0+256)+42)	;volatile
 10088                           
 10089                           ;led.c: 840: }
 10090                           ;led.c: 841: if ( gLedPara.aPara.autoPara.sunset.start.minute > 59 ) {
 10091  090A  303C               	movlw	60
 10092  090B  024B               	subwf	(_gLedPara^(0+256)+43),w	;volatile
 10093  090C  1803               	btfsc	3,0
 10094                           
 10095                           ;led.c: 842: gLedPara.aPara.autoPara.sunset.start.minute = 0;
 10096  090D  01CB               	clrf	(_gLedPara^(0+256)+43)	;volatile
 10097                           
 10098                           ;led.c: 843: }
 10099                           ;led.c: 845: if ( gLedPara.aPara.autoPara.sunset.end.hour > 23 ) {
 10100  090E  3018               	movlw	24
 10101  090F  024C               	subwf	(_gLedPara^(0+256)+44),w	;volatile
 10102  0910  1803               	btfsc	3,0
 10103                           
 10104                           ;led.c: 846: gLedPara.aPara.autoPara.sunset.end.hour = 0;
 10105  0911  01CC               	clrf	(_gLedPara^(0+256)+44)	;volatile
 10106                           
 10107                           ;led.c: 847: }
 10108                           ;led.c: 848: if ( gLedPara.aPara.autoPara.sunset.end.minute > 59 ) {
 10109  0912  303C               	movlw	60
 10110  0913  024D               	subwf	(_gLedPara^(0+256)+45),w	;volatile
 10111  0914  1803               	btfsc	3,0
 10112                           
 10113                           ;led.c: 849: gLedPara.aPara.autoPara.sunset.end.minute = 0;
 10114  0915  01CD               	clrf	(_gLedPara^(0+256)+45)	;volatile
 10115                           
 10116                           ;led.c: 850: }
 10117                           ;led.c: 852: if ( gLedPara.tPara.nDayBrt > 1000 ) {
 10118  0916  3003               	movlw	3
 10119  0917  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 10120  0918  30E9               	movlw	233
 10121  0919  1903               	skipnz
 10122  091A  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 10123  091B  1C03               	skipc
 10124  091C  2922               	goto	l4909
 10125                           
 10126                           ;led.c: 853: gLedPara.tPara.nDayBrt = 1000;
 10127  091D  3003               	movlw	3
 10128  091E  00D4               	movwf	((_gLedPara+1)^(0+256)+51)	;volatile
 10129  091F  30E8               	movlw	232
 10130  0920  00D3               	movwf	(_gLedPara^(0+256)+51)	;volatile
 10131                           
 10132                           ;led.c: 854: } else if ( gLedPara.tPara.nDayBrt < 10 ) {
 10133  0921  292C               	goto	l4913
 10134  0922                     l4909:	
 10135  0922  3000               	movlw	0
 10136  0923  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 10137  0924  300A               	movlw	10
 10138  0925  1903               	skipnz
 10139  0926  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 10140  0927  1803               	skipnc
 10141  0928  292C               	goto	l4913
 10142                           
 10143                           ;led.c: 855: gLedPara.tPara.nDayBrt = 10;
 10144  0929  300A               	movlw	10
 10145  092A  00D3               	movwf	(_gLedPara^(0+256)+51)	;volatile
 10146  092B  01D4               	clrf	((_gLedPara+1)^(0+256)+51)	;volatile
 10147  092C                     l4913:	
 10148                           
 10149                           ;led.c: 856: }
 10150                           ;led.c: 857: LED_UpdateDayRiseStatus( );
 10151  092C  2330  3188         	fcall	_LED_UpdateDayRiseStatus
 10152                           
 10153                           ;led.c: 858: if ( gLedPara.tPara.nNightBrt > 1000 ) {
 10154  092E  3003               	movlw	3
 10155  092F  0022               	movlb	2	; select bank2
 10156  0930  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
 10157  0931  30E9               	movlw	233
 10158  0932  1903               	skipnz
 10159  0933  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
 10160  0934  1C03               	skipc
 10161  0935  293B               	goto	l4919
 10162                           
 10163                           ;led.c: 859: gLedPara.tPara.nNightBrt = 1000;
 10164  0936  3003               	movlw	3
 10165  0937  00D6               	movwf	((_gLedPara+1)^(0+256)+53)	;volatile
 10166  0938  30E8               	movlw	232
 10167  0939  00D5               	movwf	(_gLedPara^(0+256)+53)	;volatile
 10168                           
 10169                           ;led.c: 860: } else if ( gLedPara.tPara.nNightBrt < 10 ) {
 10170  093A  2945               	goto	l4923
 10171  093B                     l4919:	
 10172  093B  3000               	movlw	0
 10173  093C  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
 10174  093D  300A               	movlw	10
 10175  093E  1903               	skipnz
 10176  093F  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
 10177  0940  1803               	skipnc
 10178  0941  2945               	goto	l4923
 10179                           
 10180                           ;led.c: 861: gLedPara.tPara.nNightBrt = 10;
 10181  0942  300A               	movlw	10
 10182  0943  00D5               	movwf	(_gLedPara^(0+256)+53)	;volatile
 10183  0944  01D6               	clrf	((_gLedPara+1)^(0+256)+53)	;volatile
 10184  0945                     l4923:	
 10185                           
 10186                           ;led.c: 862: }
 10187                           ;led.c: 863: LED_UpdateNightRiseStatus( );
 10188  0945  3194  2CE0         	ljmp	l4111
 10189  0947                     __end_of_LED_InitPara:	
 10190  0947                     __ptext44:	
 10191 ;; *************** function _LED_AutoRun *****************
 10192 ;; Defined at:
 10193 ;;		line 128 in file "src/led.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  k               1   77[BANK0 ] unsigned char 
 10198 ;;  dt              4   65[BANK0 ] unsigned long 
 10199 ;;  st              2   75[BANK0 ] unsigned int 
 10200 ;;  et              2   71[BANK0 ] unsigned int 
 10201 ;;  duration        2   63[BANK0 ] unsigned int 
 10202 ;;  dbrt            1   62[BANK0 ] unsigned char 
 10203 ;;  val            20   34[BANK0 ] unsigned char [5][4]
 10204 ;;  tr              8   54[BANK0 ] unsigned int [4]
 10205 ;;  ct              2   73[BANK0 ] unsigned int 
 10206 ;;  i               1   78[BANK0 ] unsigned char 
 10207 ;;  j               1   70[BANK0 ] unsigned char 
 10208 ;;  sec             1   69[BANK0 ] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 1F/1
 10215 ;;		On exit  : 1F/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:       54 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:   12
 10225 ;; This function calls:
 10226 ;;		_LED_UpdatePWM
 10227 ;;		_RTC_GetHour
 10228 ;;		_RTC_GetMinute
 10229 ;;		_RTC_GetSecond
 10230 ;;		___bmul
 10231 ;;		___lldiv
 10232 ;;		___lmul
 10233 ;;		___wmul
 10234 ;; This function is called by:
 10235 ;;		_LED_ActionOnSecond
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           
 10240                           ;psect for function _LED_AutoRun
 10241  0947                     _LED_AutoRun:	
 10242                           
 10243                           ;led.c: 129: uint8_t i, j;
 10244                           ;led.c: 130: uint16_t ct = RTC_GetHour( ) * 60u + RTC_GetMinute( );
 10245                           
 10246                           ;incstack = 0
 10247                           ; Regs used in _LED_AutoRun: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10248  0947  2320  3188         	fcall	_RTC_GetHour
 10249  0949  2367  3188         	fcall	PL6	;call to abstracted procedure
 10250  094B  229B  3188         	fcall	___wmul
 10251  094D  0824               	movf	?___wmul+1,w
 10252  094E  00EA               	movwf	LED_AutoRun@ct+1
 10253  094F  0823               	movf	?___wmul,w
 10254  0950  00E9               	movwf	LED_AutoRun@ct
 10255  0951  2322  3188         	fcall	_RTC_GetMinute
 10256  0953  0020               	movlb	0	; select bank0
 10257  0954  07E9               	addwf	LED_AutoRun@ct,f
 10258  0955  1803               	skipnc
 10259  0956  0AEA               	incf	LED_AutoRun@ct+1,f
 10260                           
 10261                           ;led.c: 131: uint8_t sec = RTC_GetSecond( );
 10262  0957  2325  3188         	fcall	_RTC_GetSecond
 10263  0959  0020               	movlb	0	; select bank0
 10264  095A  00E5               	movwf	LED_AutoRun@sec
 10265                           
 10266                           ;led.c: 132: uint16_t tr[4];
 10267                           ;led.c: 133: tr[0] = gLedPara.aPara.autoPara.sunrise.start.hour * 60u + gLedPara.aPara.a
      +                          utoPara.sunrise.start.minute;
 10268  095B  0022               	movlb	2	; select bank2
 10269  095C  0841               	movf	(_gLedPara^(0+256)+33),w	;volatile
 10270  095D  2367  3188         	fcall	PL6	;call to abstracted procedure
 10271  095F  229B  3188         	fcall	___wmul
 10272  0961  0824               	movf	?___wmul+1,w
 10273  0962  00D7               	movwf	LED_AutoRun@tr+1
 10274  0963  0823               	movf	?___wmul,w
 10275  0964  00D6               	movwf	LED_AutoRun@tr
 10276  0965  0022               	movlb	2	; select bank2
 10277  0966  0842               	movf	(_gLedPara^(0+256)+34),w	;volatile
 10278  0967  0020               	movlb	0	; select bank0
 10279  0968  07D6               	addwf	LED_AutoRun@tr,f
 10280  0969  1803               	skipnc
 10281  096A  0AD7               	incf	LED_AutoRun@tr+1,f
 10282                           
 10283                           ;led.c: 134: tr[1] = gLedPara.aPara.autoPara.sunrise.end.hour * 60u + gLedPara.aPara.aut
      +                          oPara.sunrise.end.minute;
 10284  096B  0022               	movlb	2	; select bank2
 10285  096C  0844               	movf	(_gLedPara^(0+256)+36),w	;volatile
 10286  096D  0020               	movlb	0	; select bank0
 10287  096E  00B9               	movwf	??_LED_AutoRun
 10288  096F  01BA               	clrf	??_LED_AutoRun+1
 10289  0970  0022               	movlb	2	; select bank2
 10290  0971  0843               	movf	(_gLedPara^(0+256)+35),w	;volatile
 10291  0972  2367  3188         	fcall	PL6	;call to abstracted procedure
 10292  0974  229B  3188         	fcall	___wmul
 10293  0976  2396  3188         	fcall	PL16	;call to abstracted procedure
 10294  0978  00D8               	movwf	LED_AutoRun@tr+2
 10295  0979  083C               	movf	??_LED_AutoRun+3,w
 10296  097A  00D9               	movwf	LED_AutoRun@tr+3
 10297                           
 10298                           ;led.c: 135: tr[2] = gLedPara.aPara.autoPara.sunset.start.hour * 60u + gLedPara.aPara.au
      +                          toPara.sunset.start.minute;
 10299  097B  0022               	movlb	2	; select bank2
 10300  097C  084B               	movf	(_gLedPara^(0+256)+43),w	;volatile
 10301  097D  0020               	movlb	0	; select bank0
 10302  097E  00B9               	movwf	??_LED_AutoRun
 10303  097F  01BA               	clrf	??_LED_AutoRun+1
 10304  0980  0022               	movlb	2	; select bank2
 10305  0981  084A               	movf	(_gLedPara^(0+256)+42),w	;volatile
 10306  0982  2367  3188         	fcall	PL6	;call to abstracted procedure
 10307  0984  229B  3188         	fcall	___wmul
 10308  0986  2396  3188         	fcall	PL16	;call to abstracted procedure
 10309  0988  00DA               	movwf	LED_AutoRun@tr+4
 10310  0989  083C               	movf	??_LED_AutoRun+3,w
 10311  098A  00DB               	movwf	LED_AutoRun@tr+5
 10312                           
 10313                           ;led.c: 136: tr[3] = gLedPara.aPara.autoPara.sunset.end.hour * 60u + gLedPara.aPara.auto
      +                          Para.sunset.end.minute;
 10314  098B  0022               	movlb	2	; select bank2
 10315  098C  084D               	movf	(_gLedPara^(0+256)+45),w	;volatile
 10316  098D  0020               	movlb	0	; select bank0
 10317  098E  00B9               	movwf	??_LED_AutoRun
 10318  098F  01BA               	clrf	??_LED_AutoRun+1
 10319  0990  0022               	movlb	2	; select bank2
 10320  0991  084C               	movf	(_gLedPara^(0+256)+44),w	;volatile
 10321  0992  2367  3188         	fcall	PL6	;call to abstracted procedure
 10322  0994  229B  3188         	fcall	___wmul
 10323  0996  2396  3188         	fcall	PL16	;call to abstracted procedure
 10324  0998  00DC               	movwf	LED_AutoRun@tr+6
 10325  0999  083C               	movf	??_LED_AutoRun+3,w
 10326  099A  00DD               	movwf	LED_AutoRun@tr+7
 10327                           
 10328                           ;led.c: 137: uint8_t val[4][5];
 10329                           ;led.c: 138: for ( i = 0; i < 5; i++ ) {
 10330  099B  01EE               	clrf	LED_AutoRun@i
 10331  099C                     l4737:	
 10332                           
 10333                           ;led.c: 139: val[0][i] = gLedPara.aPara.autoPara.moonlight[i];
 10334  099C  086E               	movf	LED_AutoRun@i,w
 10335  099D  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 10336  099E  0086               	movwf	6
 10337  099F  0187               	clrf	7
 10338  09A0  086E               	movf	LED_AutoRun@i,w
 10339  09A1  3E4E               	addlw	(low ((_gLedPara| (0+256)+46)))& (0+255)
 10340  09A2  0084               	movwf	4
 10341  09A3  3001               	movlw	1	; select bank2/3
 10342  09A4  0085               	movwf	5
 10343  09A5  0800               	movf	0,w
 10344  09A6  0081               	movwf	1
 10345                           
 10346                           ;led.c: 140: val[1][i] = gLedPara.aPara.autoPara.daylight[i];
 10347  09A7  086E               	movf	LED_AutoRun@i,w
 10348  09A8  3E05               	addlw	5
 10349                           
 10350                           ;led.c: 141: val[2][i] = gLedPara.aPara.autoPara.daylight[i];
 10351  09A9  23B1  3188         	fcall	PL34	;call to abstracted procedure
 10352  09AB  3E0A               	addlw	10
 10353                           
 10354                           ;led.c: 142: val[3][i] = gLedPara.aPara.autoPara.moonlight[i];
 10355  09AC  23B1  3188         	fcall	PL34	;call to abstracted procedure
 10356  09AE  3E0F               	addlw	15
 10357  09AF  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 10358  09B0  0086               	movwf	6
 10359  09B1  086E               	movf	LED_AutoRun@i,w
 10360  09B2  3E4E               	addlw	(low ((_gLedPara| (0+256)+46)))& (0+255)
 10361  09B3  0084               	movwf	4
 10362  09B4  0800               	movf	0,w
 10363  09B5  0081               	movwf	1
 10364  09B6  3005               	movlw	5
 10365  09B7  0AEE               	incf	LED_AutoRun@i,f
 10366  09B8  026E               	subwf	LED_AutoRun@i,w
 10367  09B9  1C03               	skipc
 10368  09BA  299C               	goto	l4737
 10369                           
 10370                           ;led.c: 143: }
 10371                           ;led.c: 144: for ( i = 0; i < 4; i++ ) {
 10372  09BB  01EE               	clrf	LED_AutoRun@i
 10373  09BC                     l4749:	
 10374                           
 10375                           ;led.c: 145: j = ( i + 1 ) % 4;
 10376  09BC  086E               	movf	LED_AutoRun@i,w
 10377  09BD  3E01               	addlw	1
 10378  09BE  00E6               	movwf	LED_AutoRun@j
 10379  09BF  3003               	movlw	3
 10380  09C0  05E6               	andwf	LED_AutoRun@j,f
 10381                           
 10382                           ;led.c: 146: uint16_t st = tr[i];
 10383  09C1  356E               	lslf	LED_AutoRun@i,w
 10384  09C2  3E56               	addlw	(low (LED_AutoRun@tr| 0))& (0+255)
 10385  09C3  0086               	movwf	6
 10386  09C4  0187               	clrf	7
 10387  09C5  3F40               	moviw [0]fsr1
 10388  09C6  00EB               	movwf	LED_AutoRun@st
 10389  09C7  3F41               	moviw [1]fsr1
 10390  09C8  00EC               	movwf	LED_AutoRun@st+1
 10391                           
 10392                           ;led.c: 147: uint16_t et = tr[j];
 10393  09C9  3566               	lslf	LED_AutoRun@j,w
 10394  09CA  3E56               	addlw	(low (LED_AutoRun@tr| 0))& (0+255)
 10395  09CB  0086               	movwf	6
 10396  09CC  3F40               	moviw [0]fsr1
 10397  09CD  00E7               	movwf	LED_AutoRun@et
 10398  09CE  3F41               	moviw [1]fsr1
 10399  09CF  00E8               	movwf	LED_AutoRun@et+1
 10400                           
 10401                           ;led.c: 148: uint16_t duration;
 10402                           ;led.c: 149: unsigned long dt;
 10403                           ;led.c: 150: uint8_t dbrt;
 10404                           ;led.c: 151: if ( et >= st ) {
 10405  09D0  086C               	movf	LED_AutoRun@st+1,w
 10406  09D1  0268               	subwf	LED_AutoRun@et+1,w
 10407  09D2  1D03               	skipz
 10408  09D3  29D6               	goto	u4015
 10409  09D4  086B               	movf	LED_AutoRun@st,w
 10410  09D5  0267               	subwf	LED_AutoRun@et,w
 10411  09D6                     u4015:	
 10412                           
 10413                           ;led.c: 152: if ( ct >= st && ct < et ) {
 10414  09D6  086C               	movf	LED_AutoRun@st+1,w
 10415  09D7  1C03               	skipc
 10416  09D8  29F1               	goto	L4
 10417  09D9  026A               	subwf	LED_AutoRun@ct+1,w
 10418  09DA  1D03               	skipz
 10419  09DB  29DE               	goto	u4025
 10420  09DC  086B               	movf	LED_AutoRun@st,w
 10421  09DD  0269               	subwf	LED_AutoRun@ct,w
 10422  09DE                     u4025:	
 10423  09DE  1C03               	skipc
 10424  09DF  2A94               	goto	l4801
 10425  09E0  0868               	movf	LED_AutoRun@et+1,w
 10426  09E1  026A               	subwf	LED_AutoRun@ct+1,w
 10427  09E2  1D03               	skipz
 10428  09E3  29E6               	goto	u4035
 10429  09E4  0867               	movf	LED_AutoRun@et,w
 10430  09E5  0269               	subwf	LED_AutoRun@ct,w
 10431  09E6                     u4035:	
 10432  09E6  1803               	skipnc
 10433  09E7  2A94               	goto	l4801
 10434                           
 10435                           ;led.c: 153: duration = et - st;
 10436  09E8  0868               	movf	LED_AutoRun@et+1,w
 10437  09E9  23BA  3188         	fcall	PL46	;call to abstracted procedure
 10438                           
 10439                           ;led.c: 154: dt = ( ct - st ) * 60ul + sec;
 10440  09EB  086B               	movf	LED_AutoRun@st,w
 10441  09EC                     L6:	
 10442  09EC  0269               	subwf	LED_AutoRun@ct,w
 10443  09ED  00A0               	movwf	___lmul@multiplier
 10444  09EE  086C               	movf	LED_AutoRun@st+1,w
 10445  09EF  3B6A               	subwfb	LED_AutoRun@ct+1,w
 10446  09F0  2A1A               	goto	L3
 10447  09F1                     L4:	
 10448                           ;led.c: 159: if ( ct >= st || ct < et ) {
 10449                           
 10450                           ;led.c: 155: } else {
 10451                           
 10452  09F1  026A               	subwf	LED_AutoRun@ct+1,w
 10453  09F2  1D03               	skipz
 10454  09F3  29F6               	goto	u4045
 10455  09F4  086B               	movf	LED_AutoRun@st,w
 10456  09F5  0269               	subwf	LED_AutoRun@ct,w
 10457  09F6                     u4045:	
 10458  09F6  0868               	movf	LED_AutoRun@et+1,w
 10459  09F7  1803               	skipnc
 10460  09F8  2A01               	goto	L5
 10461  09F9  026A               	subwf	LED_AutoRun@ct+1,w
 10462  09FA  1D03               	skipz
 10463  09FB  29FE               	goto	u4055
 10464  09FC  0867               	movf	LED_AutoRun@et,w
 10465  09FD  0269               	subwf	LED_AutoRun@ct,w
 10466  09FE                     u4055:	
 10467  09FE  1803               	skipnc
 10468  09FF  2A94               	goto	l4801
 10469                           
 10470                           ;led.c: 160: duration = 1440u - st + et;
 10471  0A00  0868               	movf	LED_AutoRun@et+1,w
 10472  0A01                     L5:	
 10473  0A01  23BA  3188         	fcall	PL46	;call to abstracted procedure
 10474  0A03  30A0               	movlw	160
 10475  0A04  07DF               	addwf	LED_AutoRun@duration,f
 10476  0A05  3005               	movlw	5
 10477  0A06  3DE0               	addwfc	LED_AutoRun@duration+1,f
 10478                           
 10479                           ;led.c: 161: if ( ct >= st ) {
 10480  0A07  086C               	movf	LED_AutoRun@st+1,w
 10481  0A08  026A               	subwf	LED_AutoRun@ct+1,w
 10482  0A09  1D03               	skipz
 10483  0A0A  2A0D               	goto	u4065
 10484  0A0B  086B               	movf	LED_AutoRun@st,w
 10485  0A0C  0269               	subwf	LED_AutoRun@ct,w
 10486  0A0D                     u4065:	
 10487                           
 10488                           ;led.c: 164: dt = ( 1440u - st + ct ) * 60ul + sec;
 10489  0A0D  086B               	movf	LED_AutoRun@st,w
 10490  0A0E  1803               	btfsc	3,0
 10491  0A0F  29EC               	goto	L6
 10492  0A10  0269               	subwf	LED_AutoRun@ct,w
 10493  0A11  00B9               	movwf	??_LED_AutoRun
 10494  0A12  086C               	movf	LED_AutoRun@st+1,w
 10495  0A13  3B6A               	subwfb	LED_AutoRun@ct+1,w
 10496  0A14  00BA               	movwf	??_LED_AutoRun+1
 10497  0A15  0839               	movf	??_LED_AutoRun,w
 10498  0A16  3EA0               	addlw	160
 10499  0A17  00A0               	movwf	___lmul@multiplier
 10500  0A18  3005               	movlw	5
 10501  0A19  3D3A               	addwfc	??_LED_AutoRun+1,w
 10502  0A1A                     L3:	
 10503  0A1A  00A1               	movwf	___lmul@multiplier+1
 10504  0A1B  303C               	movlw	60
 10505  0A1C  01A2               	clrf	___lmul@multiplier+2
 10506  0A1D  01A3               	clrf	___lmul@multiplier+3
 10507  0A1E  00A4               	movwf	___lmul@multiplicand
 10508  0A1F  01A5               	clrf	___lmul@multiplicand+1
 10509  0A20  01A6               	clrf	___lmul@multiplicand+2
 10510  0A21  01A7               	clrf	___lmul@multiplicand+3
 10511  0A22  22BC  3188         	fcall	___lmul
 10512  0A24  0823               	movf	?___lmul+3,w
 10513  0A25  00E4               	movwf	LED_AutoRun@dt+3
 10514  0A26  0822               	movf	?___lmul+2,w
 10515  0A27  00E3               	movwf	LED_AutoRun@dt+2
 10516  0A28  0821               	movf	?___lmul+1,w
 10517  0A29  00E2               	movwf	LED_AutoRun@dt+1
 10518  0A2A  0820               	movf	?___lmul,w
 10519  0A2B  00E1               	movwf	LED_AutoRun@dt
 10520  0A2C  0865               	movf	LED_AutoRun@sec,w
 10521  0A2D  07E1               	addwf	LED_AutoRun@dt,f
 10522  0A2E  3001               	movlw	1
 10523  0A2F  1803               	skipnc
 10524  0A30  07E2               	addwf	LED_AutoRun@dt+1,f
 10525  0A31  1803               	skipnc
 10526  0A32  07E3               	addwf	LED_AutoRun@dt+2,f
 10527  0A33  1803               	skipnc
 10528  0A34  07E4               	addwf	LED_AutoRun@dt+3,f
 10529                           
 10530                           ;led.c: 168: }
 10531                           ;led.c: 169: }
 10532                           ;led.c: 170: for ( uint8_t k = 0; k < 5; k++ ) {
 10533  0A35  01ED               	clrf	LED_AutoRun@k
 10534  0A36                     l4787:	
 10535                           
 10536                           ;led.c: 171: if ( val[j][k] >= val[i][k] ) {
 10537  0A36  3005               	movlw	5
 10538  0A37  00A0               	movwf	___bmul@multiplicand
 10539  0A38  0866               	movf	LED_AutoRun@j,w
 10540  0A39  22B0  3188         	fcall	___bmul
 10541  0A3B  2386  3188         	fcall	PL12	;call to abstracted procedure
 10542  0A3D  086E               	movf	LED_AutoRun@i,w
 10543  0A3E  22B0  3188         	fcall	___bmul
 10544  0A40  238E  3188         	fcall	PL14	;call to abstracted procedure
 10545                           
 10546                           ;led.c: 172: dbrt = val[j][k] - val[i][k];
 10547  0A42  3005               	movlw	5
 10548  0A43  00A0               	movwf	___bmul@multiplicand
 10549  0A44  1C03               	skipc
 10550  0A45  2A6A               	goto	L7
 10551  0A46  0866               	movf	LED_AutoRun@j,w
 10552  0A47  22B0  3188         	fcall	___bmul
 10553  0A49  2386  3188         	fcall	PL12	;call to abstracted procedure
 10554  0A4B  086E               	movf	LED_AutoRun@i,w
 10555  0A4C  22B0  3188         	fcall	___bmul
 10556  0A4E  238E  3188         	fcall	PL14	;call to abstracted procedure
 10557                           
 10558                           ;led.c: 173: gLedRunPara.nCurrentBrt[k] = val[i][k] * 10u + dbrt * dt / ( duration * 6u 
      +                          );
 10559  0A50  23C2  3188         	fcall	PL76	;call to abstracted procedure
 10560  0A52  22B0  3188         	fcall	___bmul
 10561  0A54  237A  3188         	fcall	PL10	;call to abstracted procedure
 10562  0A56  229B  3188         	fcall	___wmul
 10563  0A58  236E  3188         	fcall	PL8	;call to abstracted procedure
 10564  0A5A  229B  3188         	fcall	___wmul
 10565  0A5C  234B  3188         	fcall	PL2	;call to abstracted procedure
 10566  0A5E  22BC  3188         	fcall	___lmul
 10567  0A60  23A8  3188         	fcall	PL30	;call to abstracted procedure
 10568  0A62  22E1  3188         	fcall	___lldiv
 10569  0A64  082C               	movf	?___lldiv,w
 10570  0A65  073A               	addwf	??_LED_AutoRun+1,w
 10571  0A66  00C0               	movwf	??_LED_AutoRun+7
 10572  0A67  082D               	movf	?___lldiv+1,w
 10573  0A68  3D3B               	addwfc	??_LED_AutoRun+2,w
 10574  0A69  2A8D               	goto	L18
 10575  0A6A                     L7:	
 10576                           ;led.c: 175: dbrt = val[i][k] - val[j][k];
 10577                           
 10578                           ;led.c: 174: } else {
 10579                           
 10580  0A6A  086E               	movf	LED_AutoRun@i,w
 10581  0A6B  22B0  3188         	fcall	___bmul
 10582  0A6D  2386  3188         	fcall	PL12	;call to abstracted procedure
 10583  0A6F  0866               	movf	LED_AutoRun@j,w
 10584  0A70  22B0  3188         	fcall	___bmul
 10585  0A72  238E  3188         	fcall	PL14	;call to abstracted procedure
 10586                           
 10587                           ;led.c: 176: gLedRunPara.nCurrentBrt[k] = val[i][k] * 10u - dbrt * dt / ( duration * 6u 
      +                          );
 10588  0A74  23C2  3188         	fcall	PL76	;call to abstracted procedure
 10589  0A76  22B0  3188         	fcall	___bmul
 10590  0A78  237A  3188         	fcall	PL10	;call to abstracted procedure
 10591  0A7A  229B  3188         	fcall	___wmul
 10592  0A7C  236E  3188         	fcall	PL8	;call to abstracted procedure
 10593  0A7E  229B  3188         	fcall	___wmul
 10594  0A80  234B  3188         	fcall	PL2	;call to abstracted procedure
 10595  0A82  22BC  3188         	fcall	___lmul
 10596  0A84  23A8  3188         	fcall	PL30	;call to abstracted procedure
 10597  0A86  22E1  3188         	fcall	___lldiv
 10598  0A88  082C               	movf	?___lldiv,w
 10599  0A89  023A               	subwf	??_LED_AutoRun+1,w
 10600  0A8A  00C0               	movwf	??_LED_AutoRun+7
 10601  0A8B  082D               	movf	?___lldiv+1,w
 10602  0A8C  3B3B               	subwfb	??_LED_AutoRun+2,w
 10603  0A8D                     L18:	
 10604  0A8D  239E  3188         	fcall	PL20	;call to abstracted procedure
 10605  0A8F  3005               	movlw	5
 10606  0A90  0AED               	incf	LED_AutoRun@k,f
 10607  0A91  026D               	subwf	LED_AutoRun@k,w
 10608  0A92  1C03               	skipc
 10609  0A93  2A36               	goto	l4787
 10610  0A94                     l4801:	
 10611  0A94  3004               	movlw	4
 10612  0A95  0AEE               	incf	LED_AutoRun@i,f
 10613  0A96  026E               	subwf	LED_AutoRun@i,w
 10614  0A97  1C03               	skipc
 10615  0A98  29BC               	goto	l4749
 10616                           
 10617                           ;led.c: 177: }
 10618                           ;led.c: 178: }
 10619                           ;led.c: 179: }
 10620                           ;led.c: 180: LED_UpdatePWM( );
 10621  0A99  318E  2E98         	ljmp	l3709
 10622  0A9B                     __end_of_LED_AutoRun:	
 10623  0A9B                     __ptext45:	
 10624 ;; *************** function ___wmul *****************
 10625 ;; Defined at:
 10626 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  multiplier      2    3[BANK0 ] unsigned int 
 10629 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;  product         2    7[BANK0 ] unsigned int 
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  2    3[BANK0 ] unsigned int 
 10634 ;; Registers used:
 10635 ;;		wreg, status,2, status,0
 10636 ;; Tracked objects:
 10637 ;;		On entry : 1F/0
 10638 ;;		On exit  : 1F/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;Total ram usage:        6 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:   10
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_LED_AutoRun
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           
 10656                           ;psect for function ___wmul
 10657  0A9B                     ___wmul:	
 10658                           
 10659                           ;incstack = 0
 10660                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10661  0A9B  01A7               	clrf	___wmul@product
 10662  0A9C  01A8               	clrf	___wmul@product+1
 10663  0A9D                     l4151:	
 10664  0A9D  1C23               	btfss	___wmul@multiplier,0
 10665  0A9E  2AA3               	goto	l4155
 10666  0A9F  0825               	movf	___wmul@multiplicand,w
 10667  0AA0  07A7               	addwf	___wmul@product,f
 10668  0AA1  0826               	movf	___wmul@multiplicand+1,w
 10669  0AA2  3DA8               	addwfc	___wmul@product+1,f
 10670  0AA3                     l4155:	
 10671  0AA3  35A5               	lslf	___wmul@multiplicand,f
 10672  0AA4  0DA6               	rlf	___wmul@multiplicand+1,f
 10673  0AA5  36A4               	lsrf	___wmul@multiplier+1,f
 10674  0AA6  0CA3               	rrf	___wmul@multiplier,f
 10675  0AA7  0823               	movf	___wmul@multiplier,w
 10676  0AA8  0424               	iorwf	___wmul@multiplier+1,w
 10677  0AA9  1D03               	btfss	3,2
 10678  0AAA  2A9D               	goto	l4151
 10679  0AAB  0828               	movf	___wmul@product+1,w
 10680  0AAC  00A4               	movwf	?___wmul+1
 10681  0AAD  0827               	movf	___wmul@product,w
 10682  0AAE  00A3               	movwf	?___wmul
 10683  0AAF  0008               	return
 10684  0AB0                     __end_of___wmul:	
 10685  0AB0                     __ptext75:	
 10686 ;; *************** function ___bmul *****************
 10687 ;; Defined at:
 10688 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\Umul8.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  multiplier      1    wreg     unsigned char 
 10691 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  multiplier      1    2[BANK0 ] unsigned char 
 10694 ;;  product         1    1[BANK0 ] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      unsigned char 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 1F/0
 10701 ;;		On exit  : 1F/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        3 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:   10
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_LED_AutoRun
 10715 ;;		_LED_SetCustom
 10716 ;;		_LED_InitPara
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function ___bmul
 10722  0AB0                     ___bmul:	
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10726                           ;___bmul@multiplier stored from wreg
 10727  0AB0  00A2               	movwf	___bmul@multiplier
 10728  0AB1  01A1               	clrf	___bmul@product
 10729  0AB2                     l4179:	
 10730  0AB2  0820               	movf	___bmul@multiplicand,w
 10731  0AB3  1822               	btfsc	___bmul@multiplier,0
 10732  0AB4  07A1               	addwf	___bmul@product,f
 10733  0AB5  35A0               	lslf	___bmul@multiplicand,f
 10734  0AB6  36A2               	lsrf	___bmul@multiplier,f
 10735  0AB7  0822               	movf	___bmul@multiplier,w
 10736  0AB8  1D03               	btfss	3,2
 10737  0AB9  2AB2               	goto	l4179
 10738  0ABA  0821               	movf	___bmul@product,w
 10739  0ABB  0008               	return
 10740  0ABC                     __end_of___bmul:	
 10741  0ABC                     __ptext46:	
 10742 ;; *************** function ___lmul *****************
 10743 ;; Defined at:
 10744 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\Umul32.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10747 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  product         4    8[BANK0 ] unsigned long 
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  4    0[BANK0 ] unsigned long 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0
 10754 ;; Tracked objects:
 10755 ;;		On entry : 1F/0
 10756 ;;		On exit  : 1F/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;Total ram usage:       12 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:   10
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_LED_AutoRun
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           
 10774                           ;psect for function ___lmul
 10775  0ABC                     ___lmul:	
 10776                           
 10777                           ;incstack = 0
 10778                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10779  0ABC  01A8               	clrf	___lmul@product
 10780  0ABD  01A9               	clrf	___lmul@product+1
 10781  0ABE  01AA               	clrf	___lmul@product+2
 10782  0ABF  01AB               	clrf	___lmul@product+3
 10783  0AC0                     l1196:	
 10784  0AC0  1C20               	btfss	___lmul@multiplier,0
 10785  0AC1  2ACA               	goto	l4169
 10786  0AC2  0824               	movf	___lmul@multiplicand,w
 10787  0AC3  07A8               	addwf	___lmul@product,f
 10788  0AC4  0825               	movf	___lmul@multiplicand+1,w
 10789  0AC5  3DA9               	addwfc	___lmul@product+1,f
 10790  0AC6  0826               	movf	___lmul@multiplicand+2,w
 10791  0AC7  3DAA               	addwfc	___lmul@product+2,f
 10792  0AC8  0827               	movf	___lmul@multiplicand+3,w
 10793  0AC9  3DAB               	addwfc	___lmul@product+3,f
 10794  0ACA                     l4169:	
 10795  0ACA  35A4               	lslf	___lmul@multiplicand,f
 10796  0ACB  0DA5               	rlf	___lmul@multiplicand+1,f
 10797  0ACC  0DA6               	rlf	___lmul@multiplicand+2,f
 10798  0ACD  0DA7               	rlf	___lmul@multiplicand+3,f
 10799  0ACE  36A3               	lsrf	___lmul@multiplier+3,f
 10800  0ACF  0CA2               	rrf	___lmul@multiplier+2,f
 10801  0AD0  0CA1               	rrf	___lmul@multiplier+1,f
 10802  0AD1  0CA0               	rrf	___lmul@multiplier,f
 10803  0AD2  0823               	movf	___lmul@multiplier+3,w
 10804  0AD3  0422               	iorwf	___lmul@multiplier+2,w
 10805  0AD4  0421               	iorwf	___lmul@multiplier+1,w
 10806  0AD5  0420               	iorwf	___lmul@multiplier,w
 10807  0AD6  1D03               	skipz
 10808  0AD7  2AC0               	goto	l1196
 10809  0AD8  082B               	movf	___lmul@product+3,w
 10810  0AD9  00A3               	movwf	?___lmul+3
 10811  0ADA  082A               	movf	___lmul@product+2,w
 10812  0ADB  00A2               	movwf	?___lmul+2
 10813  0ADC  0829               	movf	___lmul@product+1,w
 10814  0ADD  00A1               	movwf	?___lmul+1
 10815  0ADE  0828               	movf	___lmul@product,w
 10816  0ADF  00A0               	movwf	?___lmul
 10817  0AE0  0008               	return
 10818  0AE1                     __end_of___lmul:	
 10819  0AE1                     __ptext47:	
 10820 ;; *************** function ___lldiv *****************
 10821 ;; Defined at:
 10822 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\lldiv.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  divisor         4   12[BANK0 ] unsigned long 
 10825 ;;  dividend        4   16[BANK0 ] unsigned long 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  quotient        4   20[BANK0 ] unsigned long 
 10828 ;;  counter         1   24[BANK0 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  4   12[BANK0 ] unsigned long 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0
 10833 ;; Tracked objects:
 10834 ;;		On entry : 1F/0
 10835 ;;		On exit  : 1F/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;Total ram usage:       13 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:   10
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_LED_AutoRun
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           
 10853                           ;psect for function ___lldiv
 10854  0AE1                     ___lldiv:	
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10858  0AE1  01B4               	clrf	___lldiv@quotient
 10859  0AE2  01B5               	clrf	___lldiv@quotient+1
 10860  0AE3  01B6               	clrf	___lldiv@quotient+2
 10861  0AE4  01B7               	clrf	___lldiv@quotient+3
 10862  0AE5  082F               	movf	___lldiv@divisor+3,w
 10863  0AE6  042E               	iorwf	___lldiv@divisor+2,w
 10864  0AE7  042D               	iorwf	___lldiv@divisor+1,w
 10865  0AE8  042C               	iorwf	___lldiv@divisor,w
 10866  0AE9  1903               	skipnz
 10867  0AEA  2B17               	goto	l4213
 10868  0AEB  01B8               	clrf	___lldiv@counter
 10869  0AEC                     L8:	
 10870  0AEC  0AB8               	incf	___lldiv@counter,f
 10871  0AED  1BAF               	btfsc	___lldiv@divisor+3,7
 10872  0AEE  2AF4               	goto	l4201
 10873  0AEF  35AC               	lslf	___lldiv@divisor,f
 10874  0AF0  0DAD               	rlf	___lldiv@divisor+1,f
 10875  0AF1  0DAE               	rlf	___lldiv@divisor+2,f
 10876  0AF2  0DAF               	rlf	___lldiv@divisor+3,f
 10877  0AF3  2AEC               	goto	L8
 10878  0AF4                     l4201:	
 10879  0AF4  35B4               	lslf	___lldiv@quotient,f
 10880  0AF5  0DB5               	rlf	___lldiv@quotient+1,f
 10881  0AF6  0DB6               	rlf	___lldiv@quotient+2,f
 10882  0AF7  0DB7               	rlf	___lldiv@quotient+3,f
 10883  0AF8  082F               	movf	___lldiv@divisor+3,w
 10884  0AF9  0233               	subwf	___lldiv@dividend+3,w
 10885  0AFA  1D03               	skipz
 10886  0AFB  2B06               	goto	u3445
 10887  0AFC  082E               	movf	___lldiv@divisor+2,w
 10888  0AFD  0232               	subwf	___lldiv@dividend+2,w
 10889  0AFE  1D03               	skipz
 10890  0AFF  2B06               	goto	u3445
 10891  0B00  082D               	movf	___lldiv@divisor+1,w
 10892  0B01  0231               	subwf	___lldiv@dividend+1,w
 10893  0B02  1D03               	skipz
 10894  0B03  2B06               	goto	u3445
 10895  0B04  082C               	movf	___lldiv@divisor,w
 10896  0B05  0230               	subwf	___lldiv@dividend,w
 10897  0B06                     u3445:	
 10898  0B06  1C03               	skipc
 10899  0B07  2B11               	goto	l4209
 10900  0B08  082C               	movf	___lldiv@divisor,w
 10901  0B09  02B0               	subwf	___lldiv@dividend,f
 10902  0B0A  082D               	movf	___lldiv@divisor+1,w
 10903  0B0B  3BB1               	subwfb	___lldiv@dividend+1,f
 10904  0B0C  082E               	movf	___lldiv@divisor+2,w
 10905  0B0D  3BB2               	subwfb	___lldiv@dividend+2,f
 10906  0B0E  082F               	movf	___lldiv@divisor+3,w
 10907  0B0F  3BB3               	subwfb	___lldiv@dividend+3,f
 10908  0B10  1434               	bsf	___lldiv@quotient,0
 10909  0B11                     l4209:	
 10910  0B11  36AF               	lsrf	___lldiv@divisor+3,f
 10911  0B12  0CAE               	rrf	___lldiv@divisor+2,f
 10912  0B13  0CAD               	rrf	___lldiv@divisor+1,f
 10913  0B14  0CAC               	rrf	___lldiv@divisor,f
 10914  0B15  0BB8               	decfsz	___lldiv@counter,f
 10915  0B16  2AF4               	goto	l4201
 10916  0B17                     l4213:	
 10917  0B17  0837               	movf	___lldiv@quotient+3,w
 10918  0B18  00AF               	movwf	?___lldiv+3
 10919  0B19  0836               	movf	___lldiv@quotient+2,w
 10920  0B1A  00AE               	movwf	?___lldiv+2
 10921  0B1B  0835               	movf	___lldiv@quotient+1,w
 10922  0B1C  00AD               	movwf	?___lldiv+1
 10923  0B1D  0834               	movf	___lldiv@quotient,w
 10924  0B1E  00AC               	movwf	?___lldiv
 10925  0B1F  0008               	return
 10926  0B20                     __end_of___lldiv:	
 10927  0B20                     __ptext50:	
 10928 ;; *************** function _RTC_GetHour *****************
 10929 ;; Defined at:
 10930 ;;		line 200 in file "src/rtc.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;		None
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1    wreg      unsigned char 
 10937 ;; Registers used:
 10938 ;;		wreg
 10939 ;; Tracked objects:
 10940 ;;		On entry : 1F/1
 10941 ;;		On exit  : 1F/1
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:   10
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_LED_AutoRun
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _RTC_GetHour
 10960  0B20                     _RTC_GetHour:	
 10961                           
 10962                           ;rtc.c: 201: return gCurrentTime.datetime.hour;
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in _RTC_GetHour: [wreg]
 10966  0B20  0824               	movf	(_gCurrentTime^(0+128)+4),w	;volatile
 10967  0B21  0008               	return
 10968  0B22                     __end_of_RTC_GetHour:	
 10969  0B22                     __ptext49:	
 10970 ;; *************** function _RTC_GetMinute *****************
 10971 ;; Defined at:
 10972 ;;		line 213 in file "src/rtc.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      unsigned char 
 10979 ;; Registers used:
 10980 ;;		wreg
 10981 ;; Tracked objects:
 10982 ;;		On entry : 1F/0
 10983 ;;		On exit  : 1F/1
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        0 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:   10
 10993 ;; This function calls:
 10994 ;;		Nothing
 10995 ;; This function is called by:
 10996 ;;		_LED_AutoRun
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           
 11001                           ;psect for function _RTC_GetMinute
 11002  0B22                     _RTC_GetMinute:	
 11003                           
 11004                           ;rtc.c: 214: return gCurrentTime.datetime.minute;
 11005                           
 11006                           ;incstack = 0
 11007                           ; Regs used in _RTC_GetMinute: [wreg]
 11008  0B22  0021               	movlb	1	; select bank1
 11009  0B23  0825               	movf	(_gCurrentTime^(0+128)+5),w	;volatile
 11010  0B24  0008               	return
 11011  0B25                     __end_of_RTC_GetMinute:	
 11012  0B25                     __ptext48:	
 11013 ;; *************** function _RTC_GetSecond *****************
 11014 ;; Defined at:
 11015 ;;		line 226 in file "src/rtc.c"
 11016 ;; Parameters:    Size  Location     Type
 11017 ;;		None
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;		None
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      unsigned char 
 11022 ;; Registers used:
 11023 ;;		wreg
 11024 ;; Tracked objects:
 11025 ;;		On entry : 1F/0
 11026 ;;		On exit  : 1F/1
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;Total ram usage:        0 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:   10
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_LED_AutoRun
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           
 11044                           ;psect for function _RTC_GetSecond
 11045  0B25                     _RTC_GetSecond:	
 11046                           
 11047                           ;rtc.c: 227: return gCurrentTime.datetime.second;
 11048                           
 11049                           ;incstack = 0
 11050                           ; Regs used in _RTC_GetSecond: [wreg]
 11051  0B25  0021               	movlb	1	; select bank1
 11052  0B26  0826               	movf	(_gCurrentTime^(0+128)+6),w	;volatile
 11053  0B27  0008               	return
 11054  0B28                     __end_of_RTC_GetSecond:	
 11055  0B28                     __ptext25:	
 11056 ;; *************** function _LED_ReadPara *****************
 11057 ;; Defined at:
 11058 ;;		line 100 in file "src/led.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 1F/1
 11069 ;;		On exit  : 1F/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:   13
 11079 ;; This function calls:
 11080 ;;		_EEPROM_ReadBuffer
 11081 ;; This function is called by:
 11082 ;;		_LED_InitPara
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           
 11087                           ;psect for function _LED_ReadPara
 11088  0B28                     _LED_ReadPara:	
 11089                           
 11090                           ;led.c: 101: EEPROM_ReadBuffer( 0x10, ( uint8_t * const ) &gLedPara, sizeof ( gLedPara )
      +                           );
 11091                           
 11092                           ;incstack = 0
 11093                           ; Regs used in _LED_ReadPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11094  0B28  3020               	movlw	(low (_gLedPara| (0+256)))& (0+255)
 11095  0B29  0020               	movlb	0	; select bank0
 11096  0B2A  00A3               	movwf	EEPROM_ReadBuffer@pbuf
 11097  0B2B  3037               	movlw	55
 11098  0B2C  00A4               	movwf	EEPROM_ReadBuffer@len
 11099  0B2D  3010               	movlw	16
 11100  0B2E  3195  2D36         	ljmp	_EEPROM_ReadBuffer
 11101  0B30                     __end_of_LED_ReadPara:	
 11102  0B30                     __ptext24:	
 11103 ;; *************** function _LED_UpdateDayRiseStatus *****************
 11104 ;; Defined at:
 11105 ;;		line 296 in file "src/led.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg
 11114 ;; Tracked objects:
 11115 ;;		On entry : 1F/2
 11116 ;;		On exit  : 1C/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;Total ram usage:        0 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:   10
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_LED_InitPara
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           
 11134                           ;psect for function _LED_UpdateDayRiseStatus
 11135  0B30                     _LED_UpdateDayRiseStatus:	
 11136                           
 11137                           ;led.c: 297: if ( gLedPara.tPara.nDayBrt > 1000 - 200 ) {
 11138                           
 11139                           ;incstack = 0
 11140                           ; Regs used in _LED_UpdateDayRiseStatus: [wreg]
 11141  0B30  3003               	movlw	3
 11142  0B31  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 11143  0B32  3021               	movlw	33
 11144  0B33  1903               	skipnz
 11145  0B34  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 11146  0B35  1C03               	skipc
 11147  0B36  2B3A               	goto	l4107
 11148                           
 11149                           ;led.c: 298: gLedRunPara.fDr = 0;
 11150  0B37  0021               	movlb	1	; select bank1
 11151  0B38  11B8               	bcf	_gLedRunPara^(0+128),3	;volatile
 11152                           
 11153                           ;led.c: 299: } else if ( gLedPara.tPara.nDayBrt < 200 ) {
 11154  0B39  0008               	return
 11155  0B3A                     l4107:	
 11156  0B3A  3000               	movlw	0
 11157  0B3B  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 11158  0B3C  30C8               	movlw	200
 11159  0B3D  1903               	skipnz
 11160  0B3E  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 11161  0B3F  1803               	skipnc
 11162  0B40  0008               	return
 11163                           
 11164                           ;led.c: 300: gLedRunPara.fDr = 1;
 11165  0B41  0021               	movlb	1	; select bank1
 11166  0B42  15B8               	bsf	_gLedRunPara^(0+128),3	;volatile
 11167  0B43  0008               	return
 11168  0B44                     __end_of_LED_UpdateDayRiseStatus:	
 11169  0B44                     __ptext34:	
 11170 ;; *************** function _LED_Preview *****************
 11171 ;; Defined at:
 11172 ;;		line 242 in file "src/led.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0
 11181 ;; Tracked objects:
 11182 ;;		On entry : 1F/1
 11183 ;;		On exit  : 1F/1
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:   10
 11193 ;; This function calls:
 11194 ;;		Nothing
 11195 ;; This function is called by:
 11196 ;;		_LED_ActionOnSecond
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _LED_Preview
 11202  0B44                     _LED_Preview:	
 11203                           
 11204                           ;led.c: 243: if ( gLedRunPara.nPrevCount > 0 ) {
 11205                           
 11206                           ;incstack = 0
 11207                           ; Regs used in _LED_Preview: [wreg+status,2+status,0]
 11208  0B44  083A               	movf	(_gLedRunPara^(0+128)+2),w	;volatile
 11209  0B45  1D03               	btfss	3,2
 11210                           
 11211                           ;led.c: 244: gLedRunPara.nPrevCount--;
 11212  0B46  03BA               	decf	(_gLedRunPara^(0+128)+2),f	;volatile
 11213                           
 11214                           ;led.c: 245: }
 11215                           ;led.c: 246: if ( gLedRunPara.nPrevCount == 0 ) {
 11216  0B47  083A               	movf	(_gLedRunPara^(0+128)+2),w	;volatile
 11217  0B48  1903               	btfsc	3,2
 11218                           
 11219                           ;led.c: 247: gLedRunPara.fPrev = 0;
 11220  0B49  1138               	bcf	_gLedRunPara^(0+128),2	;volatile
 11221  0B4A  0008               	return
 11222  0B4B                     __end_of_LED_Preview:	
 11223  0B4B                     PL2:	
 11224  0B4B  0823               	movf	?___wmul,w
 11225  0B4C  00BC               	movwf	??_LED_AutoRun+3
 11226  0B4D  0824               	movf	?___wmul+1,w
 11227  0B4E  00BD               	movwf	??_LED_AutoRun+4
 11228  0B4F  01BE               	clrf	??_LED_AutoRun+5
 11229  0B50  01BF               	clrf	??_LED_AutoRun+6
 11230  0B51  083F               	movf	??_LED_AutoRun+6,w
 11231  0B52  00AF               	movwf	___lldiv@divisor+3
 11232  0B53  083E               	movf	??_LED_AutoRun+5,w
 11233  0B54  00AE               	movwf	___lldiv@divisor+2
 11234  0B55  083D               	movf	??_LED_AutoRun+4,w
 11235  0B56  00AD               	movwf	___lldiv@divisor+1
 11236  0B57  083C               	movf	??_LED_AutoRun+3,w
 11237  0B58  00AC               	movwf	___lldiv@divisor
 11238  0B59  085E               	movf	LED_AutoRun@dbrt,w
 11239  0B5A  00A0               	movwf	___lmul@multiplier
 11240  0B5B  01A1               	clrf	___lmul@multiplier+1
 11241  0B5C  01A2               	clrf	___lmul@multiplier+2
 11242  0B5D  01A3               	clrf	___lmul@multiplier+3
 11243  0B5E  0864               	movf	LED_AutoRun@dt+3,w
 11244  0B5F  00A7               	movwf	___lmul@multiplicand+3
 11245  0B60  0863               	movf	LED_AutoRun@dt+2,w
 11246  0B61  00A6               	movwf	___lmul@multiplicand+2
 11247  0B62  0862               	movf	LED_AutoRun@dt+1,w
 11248  0B63  00A5               	movwf	___lmul@multiplicand+1
 11249  0B64  0861               	movf	LED_AutoRun@dt,w
 11250  0B65  00A4               	movwf	___lmul@multiplicand
 11251  0B66  0008               	return
 11252  0B67                     __end_ofPL2:	
 11253  0B67                     PL6:	
 11254  0B67  0020               	movlb	0	; select bank0
 11255  0B68  00A3               	movwf	___wmul@multiplier
 11256  0B69  303C               	movlw	60
 11257  0B6A  01A4               	clrf	___wmul@multiplier+1
 11258  0B6B  00A5               	movwf	___wmul@multiplicand
 11259  0B6C  01A6               	clrf	___wmul@multiplicand+1
 11260  0B6D  0008               	return
 11261  0B6E                     __end_ofPL6:	
 11262  0B6E                     PL8:	
 11263  0B6E  0823               	movf	?___wmul,w
 11264  0B6F  00BA               	movwf	??_LED_AutoRun+1
 11265  0B70  0824               	movf	?___wmul+1,w
 11266  0B71  00BB               	movwf	??_LED_AutoRun+2
 11267  0B72  3006               	movlw	6
 11268  0B73  00A5               	movwf	___wmul@multiplicand
 11269  0B74  01A6               	clrf	___wmul@multiplicand+1
 11270  0B75  0860               	movf	LED_AutoRun@duration+1,w
 11271  0B76  00A4               	movwf	___wmul@multiplier+1
 11272  0B77  085F               	movf	LED_AutoRun@duration,w
 11273  0B78  00A3               	movwf	___wmul@multiplier
 11274  0B79  0008               	return
 11275  0B7A                     __end_ofPL8:	
 11276  0B7A                     PL10:	
 11277  0B7A  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 11278  0B7B  076D               	addwf	LED_AutoRun@k,w
 11279  0B7C  00B9               	movwf	??_LED_AutoRun
 11280  0B7D  0086               	movwf	6
 11281  0B7E  0187               	clrf	7
 11282  0B7F  0801               	movf	1,w
 11283  0B80  00A3               	movwf	___wmul@multiplier
 11284  0B81  300A               	movlw	10
 11285  0B82  01A4               	clrf	___wmul@multiplier+1
 11286  0B83  00A5               	movwf	___wmul@multiplicand
 11287  0B84  01A6               	clrf	___wmul@multiplicand+1
 11288  0B85  0008               	return
 11289  0B86                     __end_ofPL10:	
 11290  0B86                     PL12:	
 11291  0B86  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 11292  0B87  076D               	addwf	LED_AutoRun@k,w
 11293  0B88  00B9               	movwf	??_LED_AutoRun
 11294  0B89  0086               	movwf	6
 11295  0B8A  3005               	movlw	5
 11296  0B8B  0187               	clrf	7
 11297  0B8C  00A0               	movwf	___bmul@multiplicand
 11298  0B8D  0008               	return
 11299  0B8E                     __end_ofPL12:	
 11300  0B8E                     PL14:	
 11301  0B8E  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 11302  0B8F  076D               	addwf	LED_AutoRun@k,w
 11303  0B90  00BA               	movwf	??_LED_AutoRun+1
 11304  0B91  0084               	movwf	4
 11305  0B92  0185               	clrf	5
 11306  0B93  0800               	movf	0,w
 11307  0B94  0201               	subwf	1,w
 11308  0B95  0008               	return
 11309  0B96                     __end_ofPL14:	
 11310  0B96                     PL16:	
 11311  0B96  0839               	movf	??_LED_AutoRun,w
 11312  0B97  0723               	addwf	?___wmul,w
 11313  0B98  00BB               	movwf	??_LED_AutoRun+2
 11314  0B99  083A               	movf	??_LED_AutoRun+1,w
 11315  0B9A  3D24               	addwfc	?___wmul+1,w
 11316  0B9B  00BC               	movwf	??_LED_AutoRun+3
 11317  0B9C  083B               	movf	??_LED_AutoRun+2,w
 11318  0B9D  0008               	return
 11319  0B9E                     __end_ofPL16:	
 11320  0B9E                     PL20:	
 11321  0B9E  00C1               	movwf	??_LED_AutoRun+8
 11322  0B9F  356D               	lslf	LED_AutoRun@k,w
 11323  0BA0  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 11324  0BA1  0086               	movwf	6
 11325  0BA2  0187               	clrf	7
 11326  0BA3  0840               	movf	??_LED_AutoRun+7,w
 11327  0BA4  3FC0               	movwi [0]fsr1
 11328  0BA5  0841               	movf	??_LED_AutoRun+8,w
 11329  0BA6  3FC1               	movwi [1]fsr1
 11330  0BA7  0008               	return
 11331  0BA8                     __end_ofPL20:	
 11332  0BA8                     PL30:	
 11333  0BA8  0823               	movf	?___lmul+3,w
 11334  0BA9  00B3               	movwf	___lldiv@dividend+3
 11335  0BAA  0822               	movf	?___lmul+2,w
 11336  0BAB  00B2               	movwf	___lldiv@dividend+2
 11337  0BAC  0821               	movf	?___lmul+1,w
 11338  0BAD  00B1               	movwf	___lldiv@dividend+1
 11339  0BAE  0820               	movf	?___lmul,w
 11340  0BAF  00B0               	movwf	___lldiv@dividend
 11341  0BB0  0008               	return
 11342  0BB1                     __end_ofPL30:	
 11343  0BB1                     PL34:	
 11344  0BB1  3E42               	addlw	(low (LED_AutoRun@val| 0))& (0+255)
 11345  0BB2  0086               	movwf	6
 11346  0BB3  086E               	movf	LED_AutoRun@i,w
 11347  0BB4  3E45               	addlw	(low ((_gLedPara| (0+256)+37)))& (0+255)
 11348  0BB5  0084               	movwf	4
 11349  0BB6  0800               	movf	0,w
 11350  0BB7  0081               	movwf	1
 11351  0BB8  086E               	movf	LED_AutoRun@i,w
 11352  0BB9  0008               	return
 11353  0BBA                     __end_ofPL34:	
 11354  0BBA                     PL46:	
 11355  0BBA  00E0               	movwf	LED_AutoRun@duration+1
 11356  0BBB  0867               	movf	LED_AutoRun@et,w
 11357  0BBC  00DF               	movwf	LED_AutoRun@duration
 11358  0BBD  086B               	movf	LED_AutoRun@st,w
 11359  0BBE  02DF               	subwf	LED_AutoRun@duration,f
 11360  0BBF  086C               	movf	LED_AutoRun@st+1,w
 11361  0BC0  3BE0               	subwfb	LED_AutoRun@duration+1,f
 11362  0BC1  0008               	return
 11363  0BC2                     __end_ofPL46:	
 11364  0BC2                     PL76:	
 11365  0BC2  00DE               	movwf	LED_AutoRun@dbrt
 11366  0BC3  3005               	movlw	5
 11367  0BC4  00A0               	movwf	___bmul@multiplicand
 11368  0BC5  086E               	movf	LED_AutoRun@i,w
 11369  0BC6  0008               	return
 11370  0BC7                     __end_ofPL76:	
 11371  0BC7                     __ptext30:	
 11372 ;; *************** function _LED_SavePara *****************
 11373 ;; Defined at:
 11374 ;;		line 81 in file "src/led.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;		None
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 1F/1
 11385 ;;		On exit  : 1F/1
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;Total ram usage:        0 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:   13
 11395 ;; This function calls:
 11396 ;;		_EEPROM_WriteBuffer
 11397 ;; This function is called by:
 11398 ;;		_LED_ActionOnSecond
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           
 11403                           ;psect for function _LED_SavePara
 11404  0BC7                     _LED_SavePara:	
 11405  0BC7                     l4707:	
 11406                           ;incstack = 0
 11407                           ; Regs used in _LED_SavePara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11408                           
 11409                           
 11410                           ;led.c: 82: if ( gLedRunPara.nSaveDelayCount > 0 ) {
 11411  0BC7  083B               	movf	(_gLedRunPara^(0+128)+3),w	;volatile
 11412  0BC8  1D03               	btfss	3,2
 11413                           
 11414                           ;led.c: 83: gLedRunPara.nSaveDelayCount--;
 11415  0BC9  03BB               	decf	(_gLedRunPara^(0+128)+3),f	;volatile
 11416                           
 11417                           ;led.c: 84: }
 11418                           ;led.c: 85: if ( gLedRunPara.nSaveDelayCount == 0 ) {
 11419  0BCA  083B               	movf	(_gLedRunPara^(0+128)+3),w	;volatile
 11420  0BCB  1D03               	btfss	3,2
 11421  0BCC  0008               	return
 11422                           
 11423                           ;led.c: 86: EEPROM_WriteBuffer( 0x10, ( const uint8_t * const ) &gLedPara, sizeof ( gLed
      +                          Para ) );
 11424  0BCD  3020               	movlw	(low (_gLedPara| (0+256)))& (0+255)
 11425  0BCE  0020               	movlb	0	; select bank0
 11426  0BCF  00A6               	movwf	EEPROM_WriteBuffer@pbuf
 11427  0BD0  3037               	movlw	55
 11428  0BD1  00A7               	movwf	EEPROM_WriteBuffer@len
 11429  0BD2  3010               	movlw	16
 11430  0BD3  23D7               	fcall	_EEPROM_WriteBuffer
 11431                           
 11432                           ;led.c: 87: gLedRunPara.fSave = 0;
 11433  0BD4  0021               	movlb	1	; select bank1
 11434  0BD5  10B8               	bcf	_gLedRunPara^(0+128),1	;volatile
 11435  0BD6  0008               	return
 11436  0BD7                     __end_of_LED_SavePara:	
 11437  0BD7                     __ptext31:	
 11438 ;; *************** function _EEPROM_WriteBuffer *****************
 11439 ;; Defined at:
 11440 ;;		line 70 in file "src/eeprom.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  addr            1    wreg     unsigned char 
 11443 ;;  pbuf            1    6[BANK0 ] const PTR const unsigned
 11444 ;;		 -> gLedPara(55), 
 11445 ;;  len             1    7[BANK0 ] unsigned char 
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  addr            1    9[BANK0 ] unsigned char 
 11448 ;;  i               1   10[BANK0 ] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 1F/0
 11455 ;;		On exit  : 1F/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:        5 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:   12
 11465 ;; This function calls:
 11466 ;;		_EEPROM_Write
 11467 ;; This function is called by:
 11468 ;;		_LED_SavePara
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           
 11473                           ;psect for function _EEPROM_WriteBuffer
 11474  0BD7                     _EEPROM_WriteBuffer:	
 11475                           
 11476                           ;incstack = 0
 11477                           ; Regs used in _EEPROM_WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11478                           ;EEPROM_WriteBuffer@addr stored from wreg
 11479  0BD7  00A9               	movwf	EEPROM_WriteBuffer@addr
 11480                           
 11481                           ;eeprom.c: 71: for ( uint8_t i = 0; i < len; i++ ) {
 11482  0BD8  01AA               	clrf	EEPROM_WriteBuffer@i
 11483  0BD9                     l4051:	
 11484  0BD9  0827               	movf	EEPROM_WriteBuffer@len,w
 11485  0BDA  022A               	subwf	EEPROM_WriteBuffer@i,w
 11486  0BDB  1803               	btfsc	3,0
 11487  0BDC  0008               	return
 11488                           
 11489                           ;eeprom.c: 72: EEPROM_Write( addr + i, *( pbuf + i ) );
 11490  0BDD  082A               	movf	EEPROM_WriteBuffer@i,w
 11491  0BDE  0726               	addwf	EEPROM_WriteBuffer@pbuf,w
 11492  0BDF  00A8               	movwf	??_EEPROM_WriteBuffer
 11493  0BE0  0086               	movwf	6
 11494  0BE1  3001               	movlw	1	; select bank2/3
 11495  0BE2  0087               	movwf	7
 11496  0BE3  0801               	movf	1,w
 11497  0BE4  00A4               	movwf	EEPROM_Write@byte
 11498  0BE5  0829               	movf	EEPROM_WriteBuffer@addr,w
 11499  0BE6  072A               	addwf	EEPROM_WriteBuffer@i,w
 11500  0BE7  23EB  3188         	fcall	_EEPROM_Write
 11501  0BE9  0AAA               	incf	EEPROM_WriteBuffer@i,f
 11502  0BEA  2BD9               	goto	l4051
 11503  0BEB                     __end_of_EEPROM_WriteBuffer:	
 11504  0BEB                     __ptext32:	
 11505 ;; *************** function _EEPROM_Write *****************
 11506 ;; Defined at:
 11507 ;;		line 44 in file "src/eeprom.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  addr            1    wreg     unsigned char 
 11510 ;;  byte            1    4[BANK0 ] unsigned char 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  addr            1    5[BANK0 ] unsigned char 
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  1    wreg      void 
 11515 ;; Registers used:
 11516 ;;		wreg, status,2, status,0, pclath, cstack
 11517 ;; Tracked objects:
 11518 ;;		On entry : 1F/0
 11519 ;;		On exit  : 1F/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11522 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;Total ram usage:        2 bytes
 11527 ;; Hardware stack levels used:    1
 11528 ;; Hardware stack levels required when called:   11
 11529 ;; This function calls:
 11530 ;;		_EEPROM_WriteByte
 11531 ;; This function is called by:
 11532 ;;		_EEPROM_WriteBuffer
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           
 11537                           ;psect for function _EEPROM_Write
 11538  0BEB                     _EEPROM_Write:	
 11539                           
 11540                           ;incstack = 0
 11541                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
 11542                           ;EEPROM_Write@addr stored from wreg
 11543  0BEB  00A5               	movwf	EEPROM_Write@addr
 11544                           
 11545                           ;eeprom.c: 45: EEPROM_WriteByte( 0x7000 + addr, byte );
 11546  0BEC  00A0               	movwf	EEPROM_WriteByte@addr
 11547  0BED  3070               	movlw	112
 11548  0BEE  01A1               	clrf	EEPROM_WriteByte@addr+1
 11549  0BEF  07A1               	addwf	EEPROM_WriteByte@addr+1,f
 11550  0BF0  0824               	movf	EEPROM_Write@byte,w
 11551  0BF1  00A2               	movwf	EEPROM_WriteByte@byte
 11552  0BF2  2BF3               	ljmp	l3683
 11553  0BF3                     __end_of_EEPROM_Write:	
 11554  0BF3                     __ptext33:	
 11555 ;; *************** function _EEPROM_WriteByte *****************
 11556 ;; Defined at:
 11557 ;;		line 5 in file "src/eeprom.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  addr            2    0[BANK0 ] unsigned int 
 11560 ;;  byte            1    2[BANK0 ] unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 1F/0
 11569 ;;		On exit  : 1F/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        4 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:   10
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_EEPROM_Write
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _EEPROM_WriteByte
 11588  0BF3                     _EEPROM_WriteByte:	
 11589  0BF3                     l3683:	
 11590                           ;incstack = 0
 11591                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0]
 11592                           
 11593                           
 11594                           ;eeprom.c: 6: uint8_t GIEBitValue = INTCONbits.GIE;
 11595  0BF3  3000               	movlw	0
 11596  0BF4  1B8B               	btfsc	11,7	;volatile
 11597  0BF5  3001               	movlw	1
 11598  0BF6  00A3               	movwf	EEPROM_WriteByte@GIEBitValue
 11599                           
 11600                           ;eeprom.c: 8: NVMADRH = ( ( addr >> 8 ) & 0xFF );
 11601  0BF7  0821               	movf	EEPROM_WriteByte@addr+1,w
 11602  0BF8  0031               	movlb	17	; select bank17
 11603  0BF9  0092               	movwf	18	;volatile
 11604                           
 11605                           ;eeprom.c: 9: NVMADRL = ( addr & 0xFF );
 11606  0BFA  0020               	movlb	0	; select bank0
 11607  0BFB  0820               	movf	EEPROM_WriteByte@addr,w
 11608  0BFC  0031               	movlb	17	; select bank17
 11609  0BFD  0091               	movwf	17	;volatile
 11610                           
 11611                           ;eeprom.c: 10: NVMDATL = byte;
 11612  0BFE  0020               	movlb	0	; select bank0
 11613  0BFF  0822               	movf	EEPROM_WriteByte@byte,w
 11614  0C00  0031               	movlb	17	; select bank17
 11615  0C01  0093               	movwf	19	;volatile
 11616                           
 11617                           ;eeprom.c: 11: NVMCON1bits.NVMREGS = 1;
 11618  0C02  1715               	bsf	21,6	;volsfr
 11619                           
 11620                           ;eeprom.c: 12: NVMCON1bits.WREN = 1;
 11621  0C03  1515               	bsf	21,2	;volsfr
 11622                           
 11623                           ;eeprom.c: 13: INTCONbits.GIE = 0;
 11624  0C04  138B               	bcf	11,7	;volatile
 11625                           
 11626                           ;eeprom.c: 14: NVMCON2 = 0x55;
 11627  0C05  3055               	movlw	85
 11628  0C06  0096               	movwf	22	;volsfr
 11629                           
 11630                           ;eeprom.c: 15: NVMCON2 = 0xAA;
 11631  0C07  30AA               	movlw	170
 11632  0C08  0096               	movwf	22	;volsfr
 11633                           
 11634                           ;eeprom.c: 16: NVMCON1bits.WR = 1;
 11635  0C09  1495               	bsf	21,1	;volsfr
 11636  0C0A                     l293:	
 11637                           ;eeprom.c: 18: while ( NVMCON1bits.WR );
 11638                           
 11639  0C0A  1895               	btfsc	21,1	;volsfr
 11640  0C0B  2C0A               	goto	l293
 11641                           
 11642                           ;eeprom.c: 20: NVMCON1bits.WREN = 0;
 11643  0C0C  1115               	bcf	21,2	;volsfr
 11644                           
 11645                           ;eeprom.c: 21: INTCONbits.GIE = GIEBitValue;
 11646  0C0D  0020               	movlb	0	; select bank0
 11647  0C0E  0C23               	rrf	EEPROM_WriteByte@GIEBitValue,w
 11648  0C0F  1C03               	skipc
 11649  0C10  138B               	bcf	11,7	;volatile
 11650  0C11  1803               	skipnc
 11651  0C12  178B               	bsf	11,7	;volatile
 11652  0C13  0008               	return
 11653  0C14                     __end_of_EEPROM_WriteByte:	
 11654                           
 11655                           	psect	text35
 11656  061F                     __ptext35:	
 11657 ;; *************** function _LED_FindDeviceFlash *****************
 11658 ;; Defined at:
 11659 ;;		line 223 in file "src/led.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11668 ;; Tracked objects:
 11669 ;;		On entry : 1F/1
 11670 ;;		On exit  : 10/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:   14
 11680 ;; This function calls:
 11681 ;;		_LED_InitStatus
 11682 ;;		_LED_TurnMax
 11683 ;;		_LED_TurnOff
 11684 ;; This function is called by:
 11685 ;;		_LED_ActionOnSecond
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           
 11690                           ;psect for function _LED_FindDeviceFlash
 11691  061F                     _LED_FindDeviceFlash:	
 11692                           
 11693                           ;led.c: 224: static uint8_t tog = 0;
 11694                           ;led.c: 225: if ( tog ) {
 11695                           
 11696                           ;incstack = 0
 11697                           ; Regs used in _LED_FindDeviceFlash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11698  061F  0832               	movf	LED_FindDeviceFlash@tog^(0+128),w
 11699  0620  1903               	btfsc	3,2
 11700  0621  2E2F               	goto	l471
 11701                           
 11702                           ;led.c: 226: tog = 0;
 11703  0622  01B2               	clrf	LED_FindDeviceFlash@tog^(0+128)
 11704                           
 11705                           ;led.c: 227: LED_TurnOff( );
 11706  0623  2632  3186         	fcall	_LED_TurnOff
 11707                           
 11708                           ;led.c: 228: if ( gLedRunPara.nFlashCount > 0 ) {
 11709  0625  0021               	movlb	1	; select bank1
 11710  0626  0839               	movf	(_gLedRunPara^(0+128)+1),w	;volatile
 11711  0627  1D03               	btfss	3,2
 11712                           
 11713                           ;led.c: 229: gLedRunPara.nFlashCount--;
 11714  0628  03B9               	decf	(_gLedRunPara^(0+128)+1),f	;volatile
 11715                           
 11716                           ;led.c: 230: }
 11717                           ;led.c: 231: if ( gLedRunPara.nFlashCount == 0 ) {
 11718  0629  0839               	movf	(_gLedRunPara^(0+128)+1),w	;volatile
 11719  062A  1D03               	btfss	3,2
 11720  062B  0008               	return
 11721                           
 11722                           ;led.c: 232: gLedRunPara.find = 0;
 11723  062C  1038               	bcf	_gLedRunPara^(0+128),0	;volatile
 11724                           
 11725                           ;led.c: 234: LED_InitStatus( );
 11726  062D  318E  2E23         	ljmp	l4071
 11727  062F                     l471:	
 11728                           
 11729                           ;led.c: 237: tog = 1;
 11730  062F  01B2               	clrf	LED_FindDeviceFlash@tog^(0+128)
 11731  0630  0AB2               	incf	LED_FindDeviceFlash@tog^(0+128),f
 11732                           
 11733                           ;led.c: 238: LED_TurnMax( );
 11734  0631  2E4A               	ljmp	l4067
 11735  0632                     __end_of_LED_FindDeviceFlash:	
 11736  0632                     __ptext36:	
 11737 ;; *************** function _LED_TurnOff *****************
 11738 ;; Defined at:
 11739 ;;		line 212 in file "src/led.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;		None
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;		None
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  1    wreg      void 
 11746 ;; Registers used:
 11747 ;;		wreg, status,2, status,0, pclath, cstack
 11748 ;; Tracked objects:
 11749 ;;		On entry : 1F/1
 11750 ;;		On exit  : 1F/C
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;Total ram usage:        0 bytes
 11758 ;; Hardware stack levels used:    1
 11759 ;; Hardware stack levels required when called:   11
 11760 ;; This function calls:
 11761 ;;		_PWM1_LoadDutyValue
 11762 ;;		_PWM2_LoadDutyValue
 11763 ;;		_PWM3_LoadDutyValue
 11764 ;;		_PWM4_LoadDutyValue
 11765 ;;		_PWM5_LoadDutyValue
 11766 ;; This function is called by:
 11767 ;;		_LED_FindDeviceFlash
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           
 11772                           ;psect for function _LED_TurnOff
 11773  0632                     _LED_TurnOff:	
 11774                           
 11775                           ;led.c: 213: PWM1_LoadDutyValue( 0 );
 11776                           
 11777                           ;incstack = 0
 11778                           ; Regs used in _LED_TurnOff: [wreg+status,2+status,0+pclath+cstack]
 11779  0632  0020               	movlb	0	; select bank0
 11780  0633  01A0               	clrf	PWM1_LoadDutyValue@dutyValue
 11781  0634  01A1               	clrf	PWM1_LoadDutyValue@dutyValue+1
 11782  0635  2694  3186         	fcall	_PWM1_LoadDutyValue
 11783                           
 11784                           ;led.c: 214: PWM2_LoadDutyValue( 0 );
 11785  0637  0020               	movlb	0	; select bank0
 11786  0638  01A0               	clrf	PWM2_LoadDutyValue@dutyValue
 11787  0639  01A1               	clrf	PWM2_LoadDutyValue@dutyValue+1
 11788  063A  266C  3186         	fcall	_PWM2_LoadDutyValue
 11789                           
 11790                           ;led.c: 215: PWM3_LoadDutyValue( 0 );
 11791  063C  0020               	movlb	0	; select bank0
 11792  063D  01A0               	clrf	PWM3_LoadDutyValue@dutyValue
 11793  063E  01A1               	clrf	PWM3_LoadDutyValue@dutyValue+1
 11794  063F  2680  3186         	fcall	_PWM3_LoadDutyValue
 11795                           
 11796                           ;led.c: 216: PWM4_LoadDutyValue( 0 );
 11797  0641  0020               	movlb	0	; select bank0
 11798  0642  01A0               	clrf	PWM4_LoadDutyValue@dutyValue
 11799  0643  01A1               	clrf	PWM4_LoadDutyValue@dutyValue+1
 11800  0644  26A8  3186         	fcall	_PWM4_LoadDutyValue
 11801                           
 11802                           ;led.c: 217: PWM5_LoadDutyValue( 0 );
 11803  0646  0020               	movlb	0	; select bank0
 11804  0647  01A0               	clrf	PWM5_LoadDutyValue@dutyValue
 11805  0648  01A1               	clrf	PWM5_LoadDutyValue@dutyValue+1
 11806  0649  2EBC               	ljmp	_PWM5_LoadDutyValue
 11807  064A                     __end_of_LED_TurnOff:	
 11808  064A                     __ptext37:	
 11809 ;; *************** function _LED_TurnMax *****************
 11810 ;; Defined at:
 11811 ;;		line 201 in file "src/led.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, status,2, status,0, pclath, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 1F/1
 11822 ;;		On exit  : 1F/C
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:   11
 11832 ;; This function calls:
 11833 ;;		_PWM1_LoadDutyValue
 11834 ;;		_PWM2_LoadDutyValue
 11835 ;;		_PWM3_LoadDutyValue
 11836 ;;		_PWM4_LoadDutyValue
 11837 ;;		_PWM5_LoadDutyValue
 11838 ;; This function is called by:
 11839 ;;		_LED_FindDeviceFlash
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           
 11844                           ;psect for function _LED_TurnMax
 11845  064A                     _LED_TurnMax:	
 11846  064A                     l4067:	
 11847                           ;incstack = 0
 11848                           ; Regs used in _LED_TurnMax: [wreg+status,2+status,0+pclath+cstack]
 11849                           
 11850                           
 11851                           ;led.c: 202: PWM1_LoadDutyValue( 1000 );
 11852  064A  30E8               	movlw	232
 11853  064B  0020               	movlb	0	; select bank0
 11854  064C  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 11855  064D  3003               	movlw	3
 11856  064E  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 11857  064F  2694  3186         	fcall	_PWM1_LoadDutyValue
 11858                           
 11859                           ;led.c: 203: PWM2_LoadDutyValue( 1000 );
 11860  0651  30E8               	movlw	232
 11861  0652  0020               	movlb	0	; select bank0
 11862  0653  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 11863  0654  3003               	movlw	3
 11864  0655  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 11865  0656  266C  3186         	fcall	_PWM2_LoadDutyValue
 11866                           
 11867                           ;led.c: 204: PWM3_LoadDutyValue( 1000 );
 11868  0658  30E8               	movlw	232
 11869  0659  0020               	movlb	0	; select bank0
 11870  065A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 11871  065B  3003               	movlw	3
 11872  065C  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 11873  065D  2680  3186         	fcall	_PWM3_LoadDutyValue
 11874                           
 11875                           ;led.c: 205: PWM4_LoadDutyValue( 1000 );
 11876  065F  30E8               	movlw	232
 11877  0660  0020               	movlb	0	; select bank0
 11878  0661  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 11879  0662  3003               	movlw	3
 11880  0663  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 11881  0664  26A8  3186         	fcall	_PWM4_LoadDutyValue
 11882                           
 11883                           ;led.c: 206: PWM5_LoadDutyValue( 1000 );
 11884  0666  30E8               	movlw	232
 11885  0667  0020               	movlb	0	; select bank0
 11886  0668  00A0               	movwf	PWM5_LoadDutyValue@dutyValue
 11887  0669  3003               	movlw	3
 11888  066A  00A1               	movwf	PWM5_LoadDutyValue@dutyValue+1
 11889  066B  2EBC               	ljmp	_PWM5_LoadDutyValue
 11890  066C                     __end_of_LED_TurnMax:	
 11891  066C                     __ptext68:	
 11892 ;; *************** function _PWM2_LoadDutyValue *****************
 11893 ;; Defined at:
 11894 ;;		line 50 in file "src/pwm.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg
 11903 ;; Tracked objects:
 11904 ;;		On entry : 10/0
 11905 ;;		On exit  : 1F/5
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;Total ram usage:        2 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:   10
 11915 ;; This function calls:
 11916 ;;		Nothing
 11917 ;; This function is called by:
 11918 ;;		_LED_TurnMax
 11919 ;;		_LED_TurnOff
 11920 ;;		i1_LED_UpdatePWM
 11921 ;;		_LED_UpdatePWM
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           
 11926                           ;psect for function _PWM2_LoadDutyValue
 11927  066C                     _PWM2_LoadDutyValue:	
 11928                           
 11929                           ;Skip over the trampoline to the duplicate function for level 1
 11930  066C  1C7E               	btfss	126,0
 11931  066D  2E6F               	goto	l3581
 11932  066E  2EFD               	ljmp	i1l3439
 11933  066F                     _PWM2_LoadDutyValue$intlevel0:	
 11934  066F                     l3581:	
 11935                           ;incstack = 0
 11936                           ; Regs used in _PWM2_LoadDutyValue: [wreg]
 11937                           
 11938                           
 11939                           ;pwm.c: 51: dutyValue &= 0x03FF;
 11940  066F  30FF               	movlw	255
 11941  0670  0020               	movlb	0	; select bank0
 11942  0671  05A0               	andwf	PWM2_LoadDutyValue@dutyValue,f
 11943  0672  3003               	movlw	3
 11944  0673  05A1               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 11945                           
 11946                           ;pwm.c: 54: if ( CCP2CONbits.CCP2FMT ) {
 11947  0674  0025               	movlb	5	; select bank5
 11948  0675  1E17               	btfss	23,4	;volatile
 11949  0676  2E7E               	goto	l3587
 11950                           
 11951                           ;pwm.c: 55: dutyValue <<= 6;
 11952  0677  3006               	movlw	6
 11953  0678  0020               	movlb	0	; select bank0
 11954  0679                     u2675:	
 11955  0679  35A0               	lslf	PWM2_LoadDutyValue@dutyValue,f
 11956  067A  0DA1               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 11957  067B  0B89               	decfsz	9,f
 11958  067C  2E79               	goto	u2675
 11959                           
 11960                           ;pwm.c: 56: CCPR2H = dutyValue >> 8;
 11961                           
 11962                           ;pwm.c: 57: CCPR2L = dutyValue;
 11963                           
 11964                           ;pwm.c: 58: } else {
 11965  067D  2F3C               	ljmp	PL38	;call to abstracted procedure
 11966  067E                     l3587:	
 11967                           
 11968                           ;pwm.c: 59: CCPR2H = dutyValue >> 8;
 11969  067E  0020               	movlb	0	; select bank0
 11970                           
 11971                           ;pwm.c: 60: CCPR2L = dutyValue;
 11972  067F  2F3C               	ljmp	PL38	;call to abstracted procedure
 11973  0680                     __end_of_PWM2_LoadDutyValue:	
 11974  0680                     __ptext67:	
 11975 ;; *************** function _PWM3_LoadDutyValue *****************
 11976 ;; Defined at:
 11977 ;;		line 80 in file "src/pwm.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;		None
 11982 ;; Return value:  Size  Location     Type
 11983 ;;                  1    wreg      void 
 11984 ;; Registers used:
 11985 ;;		wreg
 11986 ;; Tracked objects:
 11987 ;;		On entry : 10/0
 11988 ;;		On exit  : 1F/6
 11989 ;;		Unchanged: 0/0
 11990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;Total ram usage:        2 bytes
 11996 ;; Hardware stack levels used:    1
 11997 ;; Hardware stack levels required when called:   10
 11998 ;; This function calls:
 11999 ;;		Nothing
 12000 ;; This function is called by:
 12001 ;;		_LED_TurnMax
 12002 ;;		_LED_TurnOff
 12003 ;;		i1_LED_UpdatePWM
 12004 ;;		_LED_UpdatePWM
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           
 12009                           ;psect for function _PWM3_LoadDutyValue
 12010  0680                     _PWM3_LoadDutyValue:	
 12011                           
 12012                           ;Skip over the trampoline to the duplicate function for level 1
 12013  0680  1C7E               	btfss	126,0
 12014  0681  2E83               	goto	l3589
 12015  0682  2F0A               	ljmp	i1l3447
 12016  0683                     _PWM3_LoadDutyValue$intlevel0:	
 12017  0683                     l3589:	
 12018                           ;incstack = 0
 12019                           ; Regs used in _PWM3_LoadDutyValue: [wreg]
 12020                           
 12021                           
 12022                           ;pwm.c: 81: dutyValue &= 0x03FF;
 12023  0683  30FF               	movlw	255
 12024  0684  0020               	movlb	0	; select bank0
 12025  0685  05A0               	andwf	PWM3_LoadDutyValue@dutyValue,f
 12026  0686  3003               	movlw	3
 12027  0687  05A1               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 12028                           
 12029                           ;pwm.c: 84: if ( CCP3CONbits.CCP3FMT ) {
 12030  0688  0026               	movlb	6	; select bank6
 12031  0689  1E13               	btfss	19,4	;volatile
 12032  068A  2E92               	goto	l3595
 12033                           
 12034                           ;pwm.c: 85: dutyValue <<= 6;
 12035  068B  3006               	movlw	6
 12036  068C  0020               	movlb	0	; select bank0
 12037  068D                     u2695:	
 12038  068D  35A0               	lslf	PWM3_LoadDutyValue@dutyValue,f
 12039  068E  0DA1               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 12040  068F  0B89               	decfsz	9,f
 12041  0690  2E8D               	goto	u2695
 12042                           
 12043                           ;pwm.c: 86: CCPR3H = dutyValue >> 8;
 12044                           
 12045                           ;pwm.c: 87: CCPR3L = dutyValue;
 12046                           
 12047                           ;pwm.c: 88: } else {
 12048  0691  2F24               	ljmp	PL28	;call to abstracted procedure
 12049  0692                     l3595:	
 12050                           
 12051                           ;pwm.c: 89: CCPR3H = dutyValue >> 8;
 12052  0692  0020               	movlb	0	; select bank0
 12053                           
 12054                           ;pwm.c: 90: CCPR3L = dutyValue;
 12055  0693  2F24               	ljmp	PL28	;call to abstracted procedure
 12056  0694                     __end_of_PWM3_LoadDutyValue:	
 12057  0694                     __ptext66:	
 12058 ;; *************** function _PWM1_LoadDutyValue *****************
 12059 ;; Defined at:
 12060 ;;		line 20 in file "src/pwm.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;		None
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg
 12069 ;; Tracked objects:
 12070 ;;		On entry : 10/0
 12071 ;;		On exit  : 1F/5
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;Total ram usage:        2 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:   10
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		_LED_TurnMax
 12085 ;;		_LED_TurnOff
 12086 ;;		i1_LED_UpdatePWM
 12087 ;;		_LED_UpdatePWM
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           
 12092                           ;psect for function _PWM1_LoadDutyValue
 12093  0694                     _PWM1_LoadDutyValue:	
 12094                           
 12095                           ;Skip over the trampoline to the duplicate function for level 1
 12096  0694  1C7E               	btfss	126,0
 12097  0695  2E97               	goto	l3573
 12098  0696  2EF0               	ljmp	i1l3431
 12099  0697                     _PWM1_LoadDutyValue$intlevel0:	
 12100  0697                     l3573:	
 12101                           ;incstack = 0
 12102                           ; Regs used in _PWM1_LoadDutyValue: [wreg]
 12103                           
 12104                           
 12105                           ;pwm.c: 21: dutyValue &= 0x03FF;
 12106  0697  30FF               	movlw	255
 12107  0698  0020               	movlb	0	; select bank0
 12108  0699  05A0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 12109  069A  3003               	movlw	3
 12110  069B  05A1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 12111                           
 12112                           ;pwm.c: 24: if ( CCP1CONbits.CCP1FMT ) {
 12113  069C  0025               	movlb	5	; select bank5
 12114  069D  1E13               	btfss	19,4	;volatile
 12115  069E  2EA6               	goto	l3579
 12116                           
 12117                           ;pwm.c: 25: dutyValue <<= 6;
 12118  069F  3006               	movlw	6
 12119  06A0  0020               	movlb	0	; select bank0
 12120  06A1                     u2655:	
 12121  06A1  35A0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 12122  06A2  0DA1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 12123  06A3  0B89               	decfsz	9,f
 12124  06A4  2EA1               	goto	u2655
 12125                           
 12126                           ;pwm.c: 26: CCPR1H = dutyValue >> 8;
 12127                           
 12128                           ;pwm.c: 27: CCPR1L = dutyValue;
 12129                           
 12130                           ;pwm.c: 28: } else {
 12131  06A5  2F34               	ljmp	PL36	;call to abstracted procedure
 12132  06A6                     l3579:	
 12133                           
 12134                           ;pwm.c: 29: CCPR1H = dutyValue >> 8;
 12135  06A6  0020               	movlb	0	; select bank0
 12136                           
 12137                           ;pwm.c: 30: CCPR1L = dutyValue;
 12138  06A7  2F34               	ljmp	PL36	;call to abstracted procedure
 12139  06A8                     __end_of_PWM1_LoadDutyValue:	
 12140  06A8                     __ptext65:	
 12141 ;; *************** function _PWM4_LoadDutyValue *****************
 12142 ;; Defined at:
 12143 ;;		line 110 in file "src/pwm.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg
 12152 ;; Tracked objects:
 12153 ;;		On entry : 10/0
 12154 ;;		On exit  : 1F/6
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;Total ram usage:        2 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:   10
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		_LED_TurnMax
 12168 ;;		_LED_TurnOff
 12169 ;;		i1_LED_UpdatePWM
 12170 ;;		_LED_UpdatePWM
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function _PWM4_LoadDutyValue
 12176  06A8                     _PWM4_LoadDutyValue:	
 12177                           
 12178                           ;Skip over the trampoline to the duplicate function for level 1
 12179  06A8  1C7E               	btfss	126,0
 12180  06A9  2EAB               	goto	l3597
 12181  06AA  2F17               	ljmp	i1l3455
 12182  06AB                     _PWM4_LoadDutyValue$intlevel0:	
 12183  06AB                     l3597:	
 12184                           ;incstack = 0
 12185                           ; Regs used in _PWM4_LoadDutyValue: [wreg]
 12186                           
 12187                           
 12188                           ;pwm.c: 111: dutyValue &= 0x03FF;
 12189  06AB  30FF               	movlw	255
 12190  06AC  0020               	movlb	0	; select bank0
 12191  06AD  05A0               	andwf	PWM4_LoadDutyValue@dutyValue,f
 12192  06AE  3003               	movlw	3
 12193  06AF  05A1               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 12194                           
 12195                           ;pwm.c: 114: if ( CCP4CONbits.CCP4FMT ) {
 12196  06B0  0026               	movlb	6	; select bank6
 12197  06B1  1E17               	btfss	23,4	;volatile
 12198  06B2  2EBA               	goto	l3603
 12199                           
 12200                           ;pwm.c: 115: dutyValue <<= 6;
 12201  06B3  3006               	movlw	6
 12202  06B4  0020               	movlb	0	; select bank0
 12203  06B5                     u2715:	
 12204  06B5  35A0               	lslf	PWM4_LoadDutyValue@dutyValue,f
 12205  06B6  0DA1               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 12206  06B7  0B89               	decfsz	9,f
 12207  06B8  2EB5               	goto	u2715
 12208                           
 12209                           ;pwm.c: 116: CCPR4H = dutyValue >> 8;
 12210                           
 12211                           ;pwm.c: 117: CCPR4L = dutyValue;
 12212                           
 12213                           ;pwm.c: 118: } else {
 12214  06B9  2F2C               	ljmp	PL32	;call to abstracted procedure
 12215  06BA                     l3603:	
 12216                           
 12217                           ;pwm.c: 119: CCPR4H = dutyValue >> 8;
 12218  06BA  0020               	movlb	0	; select bank0
 12219                           
 12220                           ;pwm.c: 120: CCPR4L = dutyValue;
 12221  06BB  2F2C               	ljmp	PL32	;call to abstracted procedure
 12222  06BC                     __end_of_PWM4_LoadDutyValue:	
 12223  06BC                     __ptext69:	
 12224 ;; *************** function _PWM5_LoadDutyValue *****************
 12225 ;; Defined at:
 12226 ;;		line 131 in file "src/pwm.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		wreg, status,2, status,0
 12235 ;; Tracked objects:
 12236 ;;		On entry : 10/0
 12237 ;;		On exit  : 1F/C
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;Total ram usage:        4 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; Hardware stack levels required when called:   10
 12247 ;; This function calls:
 12248 ;;		Nothing
 12249 ;; This function is called by:
 12250 ;;		_LED_TurnMax
 12251 ;;		_LED_TurnOff
 12252 ;;		i1_LED_UpdatePWM
 12253 ;;		_LED_UpdatePWM
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           
 12258                           ;psect for function _PWM5_LoadDutyValue
 12259  06BC                     _PWM5_LoadDutyValue:	
 12260                           
 12261                           ;Skip over the trampoline to the duplicate function for level 1
 12262  06BC  1C7E               	btfss	126,0
 12263  06BD  2EBF               	goto	l3605
 12264  06BE  2ED9               	ljmp	i1l3463
 12265  06BF                     _PWM5_LoadDutyValue$intlevel0:	
 12266  06BF                     l3605:	
 12267                           ;incstack = 0
 12268                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 12269                           
 12270                           
 12271                           ;pwm.c: 132: dutyValue &= 0x03FF;
 12272  06BF  30FF               	movlw	255
 12273  06C0  0020               	movlb	0	; select bank0
 12274  06C1  05A0               	andwf	PWM5_LoadDutyValue@dutyValue,f
 12275  06C2  3003               	movlw	3
 12276  06C3  05A1               	andwf	PWM5_LoadDutyValue@dutyValue+1,f
 12277                           
 12278                           ;pwm.c: 133: PWM5DCH = dutyValue >> 2;
 12279  06C4  0821               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 12280  06C5  00A3               	movwf	??_PWM5_LoadDutyValue+1
 12281  06C6  0820               	movf	PWM5_LoadDutyValue@dutyValue,w
 12282  06C7  00A2               	movwf	??_PWM5_LoadDutyValue
 12283  06C8  36A3               	lsrf	??_PWM5_LoadDutyValue+1,f
 12284  06C9  0CA2               	rrf	??_PWM5_LoadDutyValue,f
 12285  06CA  36A3               	lsrf	??_PWM5_LoadDutyValue+1,f
 12286  06CB  0CA2               	rrf	??_PWM5_LoadDutyValue,f
 12287  06CC  0822               	movf	??_PWM5_LoadDutyValue,w
 12288  06CD  002C               	movlb	12	; select bank12
 12289  06CE  0098               	movwf	24	;volatile
 12290                           
 12291                           ;pwm.c: 134: PWM5DCL = dutyValue << 6;
 12292  06CF  0020               	movlb	0	; select bank0
 12293  06D0  0820               	movf	PWM5_LoadDutyValue@dutyValue,w
 12294  06D1  00A2               	movwf	??_PWM5_LoadDutyValue
 12295  06D2  0CA2               	rrf	??_PWM5_LoadDutyValue,f
 12296  06D3  0CA2               	rrf	??_PWM5_LoadDutyValue,f
 12297  06D4  0C22               	rrf	??_PWM5_LoadDutyValue,w
 12298  06D5  39C0               	andlw	192
 12299  06D6  002C               	movlb	12	; select bank12
 12300  06D7  0097               	movwf	23	;volatile
 12301  06D8  0008               	return
 12302  06D9                     __end_of_PWM5_LoadDutyValue:	
 12303  06D9                     __ptext121:	
 12304 ;; *************** function i1_PWM5_LoadDutyValue *****************
 12305 ;; Defined at:
 12306 ;;		line 131 in file "src/pwm.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;  dutyValue       2    0[COMMON] unsigned int 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, status,2, status,0
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 1F/C
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;Total ram usage:        4 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;; This function uses a non-reentrant model
 12330 ;;
 12331                           
 12332                           
 12333                           ;psect for function i1_PWM5_LoadDutyValue
 12334  06D9                     i1_PWM5_LoadDutyValue:	
 12335  06D9                     i1l3463:	
 12336                           ;incstack = 0
 12337                           ; Regs used in i1_PWM5_LoadDutyValue: [wreg+status,2+status,0]
 12338                           
 12339                           
 12340                           ;pwm.c: 132: dutyValue &= 0x03FF;
 12341  06D9  30FF               	movlw	255
 12342  06DA  05F0               	andwf	i1PWM5_LoadDutyValue@dutyValue,f
 12343  06DB  3003               	movlw	3
 12344  06DC  05F1               	andwf	i1PWM5_LoadDutyValue@dutyValue+1,f
 12345                           
 12346                           ;pwm.c: 133: PWM5DCH = dutyValue >> 2;
 12347  06DD  0871               	movf	i1PWM5_LoadDutyValue@dutyValue+1,w
 12348  06DE  00F3               	movwf	??i1_PWM5_LoadDutyValue+1
 12349  06DF  0870               	movf	i1PWM5_LoadDutyValue@dutyValue,w
 12350  06E0  00F2               	movwf	??i1_PWM5_LoadDutyValue
 12351  06E1  36F3               	lsrf	??i1_PWM5_LoadDutyValue+1,f
 12352  06E2  0CF2               	rrf	??i1_PWM5_LoadDutyValue,f
 12353  06E3  36F3               	lsrf	??i1_PWM5_LoadDutyValue+1,f
 12354  06E4  0CF2               	rrf	??i1_PWM5_LoadDutyValue,f
 12355  06E5  0872               	movf	??i1_PWM5_LoadDutyValue,w
 12356  06E6  002C               	movlb	12	; select bank12
 12357  06E7  0098               	movwf	24	;volatile
 12358                           
 12359                           ;pwm.c: 134: PWM5DCL = dutyValue << 6;
 12360  06E8  0870               	movf	i1PWM5_LoadDutyValue@dutyValue,w
 12361  06E9  00F2               	movwf	??i1_PWM5_LoadDutyValue
 12362  06EA  0CF2               	rrf	??i1_PWM5_LoadDutyValue,f
 12363  06EB  0CF2               	rrf	??i1_PWM5_LoadDutyValue,f
 12364  06EC  0C72               	rrf	??i1_PWM5_LoadDutyValue,w
 12365  06ED  39C0               	andlw	192
 12366  06EE  0097               	movwf	23	;volatile
 12367  06EF  0008               	return
 12368  06F0                     __end_ofi1_PWM5_LoadDutyValue:	
 12369  06F0                     __ptext120:	
 12370 ;; *************** function i1_PWM1_LoadDutyValue *****************
 12371 ;; Defined at:
 12372 ;;		line 20 in file "src/pwm.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  dutyValue       2    0[COMMON] unsigned int 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 1F/5
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;Total ram usage:        2 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; This function calls:
 12393 ;;		Nothing
 12394 ;; This function is called by:
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           
 12399                           ;psect for function i1_PWM1_LoadDutyValue
 12400  06F0                     i1_PWM1_LoadDutyValue:	
 12401  06F0                     i1l3431:	
 12402                           ;incstack = 0
 12403                           ; Regs used in i1_PWM1_LoadDutyValue: [wreg]
 12404                           
 12405                           
 12406                           ;pwm.c: 21: dutyValue &= 0x03FF;
 12407  06F0  30FF               	movlw	255
 12408  06F1  05F0               	andwf	i1PWM1_LoadDutyValue@dutyValue,f
 12409  06F2  3003               	movlw	3
 12410  06F3  05F1               	andwf	i1PWM1_LoadDutyValue@dutyValue+1,f
 12411                           
 12412                           ;pwm.c: 24: if ( CCP1CONbits.CCP1FMT ) {
 12413  06F4  0025               	movlb	5	; select bank5
 12414  06F5  1E13               	btfss	19,4	;volatile
 12415  06F6  2EFC               	goto	i1l3437
 12416                           
 12417                           ;pwm.c: 25: dutyValue <<= 6;
 12418  06F7  3006               	movlw	6
 12419  06F8                     u249_25:	
 12420  06F8  35F0               	lslf	i1PWM1_LoadDutyValue@dutyValue,f
 12421  06F9  0DF1               	rlf	i1PWM1_LoadDutyValue@dutyValue+1,f
 12422  06FA  0B89               	decfsz	9,f
 12423  06FB  2EF8               	goto	u249_25
 12424  06FC                     i1l3437:	
 12425                           ;pwm.c: 26: CCPR1H = dutyValue >> 8;
 12426                           
 12427                           ;pwm.c: 27: CCPR1L = dutyValue;
 12428                           
 12429                           ;pwm.c: 28: } else {
 12430                           
 12431                           
 12432                           ;pwm.c: 29: CCPR1H = dutyValue >> 8;
 12433                           
 12434                           ;pwm.c: 30: CCPR1L = dutyValue;
 12435  06FC  2F53               	ljmp	PL74	;call to abstracted procedure
 12436  06FD                     __end_ofi1_PWM1_LoadDutyValue:	
 12437  06FD                     __ptext119:	
 12438 ;; *************** function i1_PWM2_LoadDutyValue *****************
 12439 ;; Defined at:
 12440 ;;		line 50 in file "src/pwm.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  dutyValue       2    0[COMMON] unsigned int 
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;		None
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  1    wreg      void 
 12447 ;; Registers used:
 12448 ;;		wreg
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 1F/5
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;Total ram usage:        2 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; This function calls:
 12461 ;;		Nothing
 12462 ;; This function is called by:
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           
 12467                           ;psect for function i1_PWM2_LoadDutyValue
 12468  06FD                     i1_PWM2_LoadDutyValue:	
 12469  06FD                     i1l3439:	
 12470                           ;incstack = 0
 12471                           ; Regs used in i1_PWM2_LoadDutyValue: [wreg]
 12472                           
 12473                           
 12474                           ;pwm.c: 51: dutyValue &= 0x03FF;
 12475  06FD  30FF               	movlw	255
 12476  06FE  05F0               	andwf	i1PWM2_LoadDutyValue@dutyValue,f
 12477  06FF  3003               	movlw	3
 12478  0700  05F1               	andwf	i1PWM2_LoadDutyValue@dutyValue+1,f
 12479                           
 12480                           ;pwm.c: 54: if ( CCP2CONbits.CCP2FMT ) {
 12481  0701  0025               	movlb	5	; select bank5
 12482  0702  1E17               	btfss	23,4	;volatile
 12483  0703  2F09               	goto	i1l3445
 12484                           
 12485                           ;pwm.c: 55: dutyValue <<= 6;
 12486  0704  3006               	movlw	6
 12487  0705                     u251_25:	
 12488  0705  35F0               	lslf	i1PWM2_LoadDutyValue@dutyValue,f
 12489  0706  0DF1               	rlf	i1PWM2_LoadDutyValue@dutyValue+1,f
 12490  0707  0B89               	decfsz	9,f
 12491  0708  2F05               	goto	u251_25
 12492  0709                     i1l3445:	
 12493                           ;pwm.c: 56: CCPR2H = dutyValue >> 8;
 12494                           
 12495                           ;pwm.c: 57: CCPR2L = dutyValue;
 12496                           
 12497                           ;pwm.c: 58: } else {
 12498                           
 12499                           
 12500                           ;pwm.c: 59: CCPR2H = dutyValue >> 8;
 12501                           
 12502                           ;pwm.c: 60: CCPR2L = dutyValue;
 12503  0709  2F49               	ljmp	PL60	;call to abstracted procedure
 12504  070A                     __end_ofi1_PWM2_LoadDutyValue:	
 12505  070A                     __ptext118:	
 12506 ;; *************** function i1_PWM3_LoadDutyValue *****************
 12507 ;; Defined at:
 12508 ;;		line 80 in file "src/pwm.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;  dutyValue       2    0[COMMON] unsigned int 
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;		None
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      void 
 12515 ;; Registers used:
 12516 ;;		wreg
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 1F/6
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12526 ;;Total ram usage:        2 bytes
 12527 ;; Hardware stack levels used:    1
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           
 12535                           ;psect for function i1_PWM3_LoadDutyValue
 12536  070A                     i1_PWM3_LoadDutyValue:	
 12537  070A                     i1l3447:	
 12538                           ;incstack = 0
 12539                           ; Regs used in i1_PWM3_LoadDutyValue: [wreg]
 12540                           
 12541                           
 12542                           ;pwm.c: 81: dutyValue &= 0x03FF;
 12543  070A  30FF               	movlw	255
 12544  070B  05F0               	andwf	i1PWM3_LoadDutyValue@dutyValue,f
 12545  070C  3003               	movlw	3
 12546  070D  05F1               	andwf	i1PWM3_LoadDutyValue@dutyValue+1,f
 12547                           
 12548                           ;pwm.c: 84: if ( CCP3CONbits.CCP3FMT ) {
 12549  070E  0026               	movlb	6	; select bank6
 12550  070F  1E13               	btfss	19,4	;volatile
 12551  0710  2F16               	goto	i1l3453
 12552                           
 12553                           ;pwm.c: 85: dutyValue <<= 6;
 12554  0711  3006               	movlw	6
 12555  0712                     u253_25:	
 12556  0712  35F0               	lslf	i1PWM3_LoadDutyValue@dutyValue,f
 12557  0713  0DF1               	rlf	i1PWM3_LoadDutyValue@dutyValue+1,f
 12558  0714  0B89               	decfsz	9,f
 12559  0715  2F12               	goto	u253_25
 12560  0716                     i1l3453:	
 12561                           ;pwm.c: 86: CCPR3H = dutyValue >> 8;
 12562                           
 12563                           ;pwm.c: 87: CCPR3L = dutyValue;
 12564                           
 12565                           ;pwm.c: 88: } else {
 12566                           
 12567                           
 12568                           ;pwm.c: 89: CCPR3H = dutyValue >> 8;
 12569                           
 12570                           ;pwm.c: 90: CCPR3L = dutyValue;
 12571  0716  2F44               	ljmp	PL54	;call to abstracted procedure
 12572  0717                     __end_ofi1_PWM3_LoadDutyValue:	
 12573  0717                     __ptext117:	
 12574 ;; *************** function i1_PWM4_LoadDutyValue *****************
 12575 ;; Defined at:
 12576 ;;		line 110 in file "src/pwm.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  dutyValue       2    0[COMMON] unsigned int 
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		wreg
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 1F/6
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;Total ram usage:        2 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;; This function uses a non-reentrant model
 12600 ;;
 12601                           
 12602                           
 12603                           ;psect for function i1_PWM4_LoadDutyValue
 12604  0717                     i1_PWM4_LoadDutyValue:	
 12605  0717                     i1l3455:	
 12606                           ;incstack = 0
 12607                           ; Regs used in i1_PWM4_LoadDutyValue: [wreg]
 12608                           
 12609                           
 12610                           ;pwm.c: 111: dutyValue &= 0x03FF;
 12611  0717  30FF               	movlw	255
 12612  0718  05F0               	andwf	i1PWM4_LoadDutyValue@dutyValue,f
 12613  0719  3003               	movlw	3
 12614  071A  05F1               	andwf	i1PWM4_LoadDutyValue@dutyValue+1,f
 12615                           
 12616                           ;pwm.c: 114: if ( CCP4CONbits.CCP4FMT ) {
 12617  071B  0026               	movlb	6	; select bank6
 12618  071C  1E17               	btfss	23,4	;volatile
 12619  071D  2F23               	goto	i1l3461
 12620                           
 12621                           ;pwm.c: 115: dutyValue <<= 6;
 12622  071E  3006               	movlw	6
 12623  071F                     u255_25:	
 12624  071F  35F0               	lslf	i1PWM4_LoadDutyValue@dutyValue,f
 12625  0720  0DF1               	rlf	i1PWM4_LoadDutyValue@dutyValue+1,f
 12626  0721  0B89               	decfsz	9,f
 12627  0722  2F1F               	goto	u255_25
 12628  0723                     i1l3461:	
 12629                           ;pwm.c: 116: CCPR4H = dutyValue >> 8;
 12630                           
 12631                           ;pwm.c: 117: CCPR4L = dutyValue;
 12632                           
 12633                           ;pwm.c: 118: } else {
 12634                           
 12635                           
 12636                           ;pwm.c: 119: CCPR4H = dutyValue >> 8;
 12637                           
 12638                           ;pwm.c: 120: CCPR4L = dutyValue;
 12639  0723  2F4E               	ljmp	PL70	;call to abstracted procedure
 12640  0724                     __end_ofi1_PWM4_LoadDutyValue:	
 12641  0724                     PL28:	
 12642  0724  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 12643  0725  0026               	movlb	6	; select bank6
 12644  0726  0092               	movwf	18	;volatile
 12645  0727  0020               	movlb	0	; select bank0
 12646  0728  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 12647  0729  0026               	movlb	6	; select bank6
 12648  072A  0091               	movwf	17	;volatile
 12649  072B  0008               	return
 12650  072C                     __end_ofPL28:	
 12651  072C                     PL32:	
 12652  072C  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 12653  072D  0026               	movlb	6	; select bank6
 12654  072E  0096               	movwf	22	;volatile
 12655  072F  0020               	movlb	0	; select bank0
 12656  0730  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 12657  0731  0026               	movlb	6	; select bank6
 12658  0732  0095               	movwf	21	;volatile
 12659  0733  0008               	return
 12660  0734                     __end_ofPL32:	
 12661  0734                     PL36:	
 12662  0734  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 12663  0735  0025               	movlb	5	; select bank5
 12664  0736  0092               	movwf	18	;volatile
 12665  0737  0020               	movlb	0	; select bank0
 12666  0738  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
 12667  0739  0025               	movlb	5	; select bank5
 12668  073A  0091               	movwf	17	;volatile
 12669  073B  0008               	return
 12670  073C                     __end_ofPL36:	
 12671  073C                     PL38:	
 12672  073C  0821               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 12673  073D  0025               	movlb	5	; select bank5
 12674  073E  0096               	movwf	22	;volatile
 12675  073F  0020               	movlb	0	; select bank0
 12676  0740  0820               	movf	PWM2_LoadDutyValue@dutyValue,w
 12677  0741  0025               	movlb	5	; select bank5
 12678  0742  0095               	movwf	21	;volatile
 12679  0743  0008               	return
 12680  0744                     __end_ofPL38:	
 12681  0744                     PL54:	
 12682  0744  0871               	movf	i1PWM3_LoadDutyValue@dutyValue+1,w
 12683  0745  0092               	movwf	18	;volatile
 12684  0746  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 12685  0747  0091               	movwf	17	;volatile
 12686  0748  0008               	return
 12687  0749                     __end_ofPL54:	
 12688  0749                     PL60:	
 12689  0749  0871               	movf	i1PWM2_LoadDutyValue@dutyValue+1,w
 12690  074A  0096               	movwf	22	;volatile
 12691  074B  0870               	movf	i1PWM2_LoadDutyValue@dutyValue,w
 12692  074C  0095               	movwf	21	;volatile
 12693  074D  0008               	return
 12694  074E                     __end_ofPL60:	
 12695  074E                     PL70:	
 12696  074E  0871               	movf	i1PWM4_LoadDutyValue@dutyValue+1,w
 12697  074F  0096               	movwf	22	;volatile
 12698  0750  0870               	movf	i1PWM4_LoadDutyValue@dutyValue,w
 12699  0751  0095               	movwf	21	;volatile
 12700  0752  0008               	return
 12701  0753                     __end_ofPL70:	
 12702  0753                     PL74:	
 12703  0753  0871               	movf	i1PWM1_LoadDutyValue@dutyValue+1,w
 12704  0754  0092               	movwf	18	;volatile
 12705  0755  0870               	movf	i1PWM1_LoadDutyValue@dutyValue,w
 12706  0756  0091               	movwf	17	;volatile
 12707  0757  0008               	return
 12708  0758                     __end_ofPL74:	
 12709                           
 12710                           	psect	text55
 12711  1712                     __ptext55:	
 12712 ;; *************** function _BLE_Initialize *****************
 12713 ;; Defined at:
 12714 ;;		line 306 in file "src/ble.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;		None
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      void 
 12721 ;; Registers used:
 12722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 1F/1
 12725 ;;		On exit  : 1F/2
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;Total ram usage:        2 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:   13
 12735 ;; This function calls:
 12736 ;;		_BLE_CheckDevID
 12737 ;;		_BLE_SendCMD
 12738 ;; This function is called by:
 12739 ;;		_main
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           
 12744                           ;psect for function _BLE_Initialize
 12745  1712                     _BLE_Initialize:	
 12746                           
 12747                           ;ble.c: 307: LATC1 = 0;
 12748                           
 12749                           ;incstack = 0
 12750                           ; Regs used in _BLE_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12751  1712  0022               	movlb	2	; select bank2
 12752  1713  108E               	bcf	14,1	;volatile
 12753                           
 12754                           ;ble.c: 308: LATB5 = 0;
 12755  1714  128D               	bcf	13,5	;volatile
 12756                           
 12757                           ;ble.c: 309: _delay((unsigned long)((40)*(16000000/4000.0)));
 12758  1715  30D0               	movlw	208
 12759  1716  0020               	movlb	0	; select bank0
 12760  1717  00C5               	movwf	??_BLE_Initialize
 12761  1718  30C9               	movlw	201
 12762  1719                     u4977:	
 12763  1719  0B89               	decfsz	9,f
 12764  171A  2F19               	goto	u4977
 12765  171B  0BC5               	decfsz	??_BLE_Initialize,f
 12766  171C  2F19               	goto	u4977
 12767  171D  3200               	nop2
 12768                           
 12769                           ;ble.c: 310: LATB5 = 1;
 12770  171E  0022               	movlb	2	; select bank2
 12771  171F  168D               	bsf	13,5	;volatile
 12772                           
 12773                           ;ble.c: 311: _delay((unsigned long)((240)*(16000000/4000.0)));
 12774  1720  3005               	movlw	5
 12775  1721  0020               	movlb	0	; select bank0
 12776  1722  00C6               	movwf	??_BLE_Initialize+1
 12777  1723  30DF               	movlw	223
 12778  1724  00C5               	movwf	??_BLE_Initialize
 12779  1725  30BB               	movlw	187
 12780  1726                     u4987:	
 12781  1726  0B89               	decfsz	9,f
 12782  1727  2F26               	goto	u4987
 12783  1728  0BC5               	decfsz	??_BLE_Initialize,f
 12784  1729  2F26               	goto	u4987
 12785  172A  0BC6               	decfsz	??_BLE_Initialize+1,f
 12786  172B  2F26               	goto	u4987
 12787  172C  3200               	nop2
 12788                           
 12789                           ;ble.c: 314: if ( BLE_CheckDevID( ) == 0 ) {
 12790  172D  27BE  3197         	fcall	_BLE_CheckDevID
 12791  172F  3A00               	xorlw	0
 12792  1730  1D03               	skipz
 12793  1731  2F42               	goto	l5091
 12794                           
 12795                           ;ble.c: 315: _delay((unsigned long)((40)*(16000000/4000.0)));
 12796  1732  30D0               	movlw	208
 12797  1733  0020               	movlb	0	; select bank0
 12798  1734  00C5               	movwf	??_BLE_Initialize
 12799  1735  30C9               	movlw	201
 12800  1736                     u4997:	
 12801  1736  0B89               	decfsz	9,f
 12802  1737  2F36               	goto	u4997
 12803  1738  0BC5               	decfsz	??_BLE_Initialize,f
 12804  1739  2F36               	goto	u4997
 12805  173A  3200               	nop2
 12806                           
 12807                           ;ble.c: 316: BLE_SendCMD( "AT+ADV_MFR_SPC=" "30313333" "30313032" "\r\n" );
 12808  173B  3000               	movlw	low (STR_2| (0+32768))
 12809  173C  0020               	movlb	0	; select bank0
 12810  173D  00A1               	movwf	BLE_SendCMD@pBuf
 12811  173E  3098               	movlw	high (STR_2| (0+32768))
 12812  173F  00A2               	movwf	BLE_SendCMD@pBuf+1
 12813  1740  276E  3197         	fcall	_BLE_SendCMD
 12814  1742                     l5091:	
 12815                           
 12816                           ;ble.c: 317: }
 12817                           ;ble.c: 318: _delay((unsigned long)((40)*(16000000/4000.0)));
 12818  1742  30D0               	movlw	208
 12819  1743  0020               	movlb	0	; select bank0
 12820  1744  00C5               	movwf	??_BLE_Initialize
 12821  1745  30C9               	movlw	201
 12822  1746                     u5007:	
 12823  1746  0B89               	decfsz	9,f
 12824  1747  2F46               	goto	u5007
 12825  1748  0BC5               	decfsz	??_BLE_Initialize,f
 12826  1749  2F46               	goto	u5007
 12827  174A  3200               	nop2
 12828                           
 12829                           ;ble.c: 320: BLE_SendCMD( "AT+SET=1\r\n" );
 12830  174B  3044               	movlw	low (STR_3| (0+32768))
 12831  174C  0020               	movlb	0	; select bank0
 12832  174D  00A1               	movwf	BLE_SendCMD@pBuf
 12833  174E  3098               	movlw	high (STR_3| (0+32768))
 12834  174F  00A2               	movwf	BLE_SendCMD@pBuf+1
 12835  1750  276E  3197         	fcall	_BLE_SendCMD
 12836                           
 12837                           ;ble.c: 321: _delay((unsigned long)((40)*(16000000/4000.0)));
 12838  1752  30D0               	movlw	208
 12839  1753  0020               	movlb	0	; select bank0
 12840  1754  00C5               	movwf	??_BLE_Initialize
 12841  1755  30C9               	movlw	201
 12842  1756                     u5017:	
 12843  1756  0B89               	decfsz	9,f
 12844  1757  2F56               	goto	u5017
 12845  1758  0BC5               	decfsz	??_BLE_Initialize,f
 12846  1759  2F56               	goto	u5017
 12847  175A  3200               	nop2
 12848                           
 12849                           ;ble.c: 323: BLE_SendCMD( "AT+MODE=DATA\r\n" );
 12850  175B  3035               	movlw	low (STR_4| (0+32768))
 12851  175C  0020               	movlb	0	; select bank0
 12852  175D  00A1               	movwf	BLE_SendCMD@pBuf
 12853  175E  3098               	movlw	high (STR_4| (0+32768))
 12854  175F  00A2               	movwf	BLE_SendCMD@pBuf+1
 12855  1760  276E  3197         	fcall	_BLE_SendCMD
 12856                           
 12857                           ;ble.c: 324: _delay((unsigned long)((20)*(16000000/4000.0)));
 12858  1762  3068               	movlw	104
 12859  1763  0020               	movlb	0	; select bank0
 12860  1764  00C5               	movwf	??_BLE_Initialize
 12861  1765  30E4               	movlw	228
 12862  1766                     u5027:	
 12863  1766  0B89               	decfsz	9,f
 12864  1767  2F66               	goto	u5027
 12865  1768  0BC5               	decfsz	??_BLE_Initialize,f
 12866  1769  2F66               	goto	u5027
 12867  176A  0000               	nop
 12868                           
 12869                           ;ble.c: 325: LATC1 = 1;
 12870  176B  0022               	movlb	2	; select bank2
 12871  176C  148E               	bsf	14,1	;volatile
 12872  176D  0008               	return
 12873  176E                     __end_of_BLE_Initialize:	
 12874  176E                     __ptext57:	
 12875 ;; *************** function _BLE_SendCMD *****************
 12876 ;; Defined at:
 12877 ;;		line 49 in file "src/ble.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  pBuf            2    1[BANK0 ] PTR const unsigned char 
 12880 ;;		 -> STR_4(15), STR_3(11), STR_2(34), STR_1(19), 
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  ack             7    4[BANK0 ] unsigned char [7]
 12883 ;;  cnt             2   11[BANK0 ] unsigned int 
 12884 ;;  index           1   14[BANK0 ] unsigned char 
 12885 ;;  rev             1   13[BANK0 ] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12890 ;; Tracked objects:
 12891 ;;		On entry : 1F/0
 12892 ;;		On exit  : 1F/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;Total ram usage:       14 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:   11
 12902 ;; This function calls:
 12903 ;;		_EUSART_Write
 12904 ;; This function is called by:
 12905 ;;		_BLE_CheckDevID
 12906 ;;		_BLE_Initialize
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           
 12911                           ;psect for function _BLE_SendCMD
 12912  176E                     _BLE_SendCMD:	
 12913                           
 12914                           ;ble.c: 50: uint8_t ack[] = { 'A', 'T', '+', 'O', 'K', '\r', '\n' };
 12915                           
 12916                           ;incstack = 0
 12917                           ; Regs used in _BLE_SendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12918  176E  30E3               	movlw	low BLE_SendCMD@F8112
 12919  176F  0086               	movwf	6
 12920  1770  3000               	movlw	high BLE_SendCMD@F8112
 12921  1771  0087               	movwf	7
 12922  1772  3024               	movlw	low BLE_SendCMD@ack
 12923  1773  0084               	movwf	4
 12924  1774  3000               	movlw	high BLE_SendCMD@ack
 12925  1775  0085               	movwf	5
 12926  1776  3007               	movlw	7
 12927  1777  00A3               	movwf	??_BLE_SendCMD
 12928  1778                     u2980:	
 12929  1778  0016               	moviw fsr1++
 12930  1779  001A               	movwi fsr0++
 12931  177A  0BA3               	decfsz	??_BLE_SendCMD,f
 12932  177B  2F78               	goto	u2980
 12933                           
 12934                           ;ble.c: 51: uint8_t index = 0;
 12935  177C  01AE               	clrf	BLE_SendCMD@index
 12936                           
 12937                           ;ble.c: 52: uint16_t cnt = 0;
 12938  177D  01AB               	clrf	BLE_SendCMD@cnt
 12939  177E  01AC               	clrf	BLE_SendCMD@cnt+1
 12940  177F  0023               	movlb	3	; select bank3
 12941  1780  0819               	movf	25,w	;volatile
 12942  1781                     l3939:	
 12943                           ;ble.c: 54: while ( *pBuf != '\0' ) {
 12944                           
 12945  1781  0020               	movlb	0	; select bank0
 12946  1782  0821               	movf	BLE_SendCMD@pBuf,w
 12947  1783  0084               	movwf	4
 12948  1784  0822               	movf	BLE_SendCMD@pBuf+1,w
 12949  1785  0085               	movwf	5
 12950  1786  0012               	moviw fsr0++
 12951  1787  1903               	btfsc	3,2
 12952  1788  2FB9               	goto	l3961
 12953                           
 12954                           ;ble.c: 56: EUSART_Write( *pBuf++ );
 12955  1789  0821               	movf	BLE_SendCMD@pBuf,w
 12956  178A  0084               	movwf	4
 12957  178B  0822               	movf	BLE_SendCMD@pBuf+1,w
 12958  178C  0085               	movwf	5
 12959  178D  0800               	movf	0,w	;code access
 12960  178E  318D  2582  3197   	fcall	_EUSART_Write
 12961  1791  0AA1               	incf	BLE_SendCMD@pBuf,f
 12962  1792  1903               	skipnz
 12963  1793  0AA2               	incf	BLE_SendCMD@pBuf+1,f
 12964  1794  2F81               	goto	l3939
 12965  1795                     l77:	
 12966                           
 12967                           ;ble.c: 62: if ( PIR1bits.RCIF ) {
 12968  1795  1E91               	btfss	17,5	;volatile
 12969  1796  2FAA               	goto	l3953
 12970                           
 12971                           ;ble.c: 63: if ( RC1STAbits.OERR ) {
 12972  1797  0023               	movlb	3	; select bank3
 12973  1798  1C9D               	btfss	29,1	;volatile
 12974  1799  2F9C               	goto	l3945
 12975                           
 12976                           ;ble.c: 64: RC1STAbits.CREN = 0;
 12977  179A  121D               	bcf	29,4	;volatile
 12978                           
 12979                           ;ble.c: 65: RC1STAbits.CREN = 1;
 12980  179B  161D               	bsf	29,4	;volatile
 12981  179C                     l3945:	
 12982                           
 12983                           ;ble.c: 66: }
 12984                           ;ble.c: 67: rev = RCREG;
 12985  179C  0819               	movf	25,w	;volatile
 12986  179D  0020               	movlb	0	; select bank0
 12987  179E  00AD               	movwf	BLE_SendCMD@rev
 12988                           
 12989                           ;ble.c: 68: if ( rev == ack[index] ) {
 12990  179F  082E               	movf	BLE_SendCMD@index,w
 12991  17A0  3E24               	addlw	(low (BLE_SendCMD@ack| 0))& (0+255)
 12992  17A1  0086               	movwf	6
 12993  17A2  0187               	clrf	7
 12994  17A3  0801               	movf	1,w
 12995  17A4  062D               	xorwf	BLE_SendCMD@rev,w
 12996  17A5  1D03               	skipz
 12997  17A6  2FA9               	goto	l3951
 12998                           
 12999                           ;ble.c: 69: index++;
 13000  17A7  0AAE               	incf	BLE_SendCMD@index,f
 13001                           
 13002                           ;ble.c: 70: } else {
 13003  17A8  2FAA               	goto	l3953
 13004  17A9                     l3951:	
 13005                           
 13006                           ;ble.c: 71: index = 0;
 13007  17A9  01AE               	clrf	BLE_SendCMD@index
 13008  17AA                     l3953:	
 13009                           
 13010                           ;ble.c: 72: }
 13011                           ;ble.c: 73: }
 13012                           ;ble.c: 74: _delay((unsigned long)((100)*(16000000/4000000.0)));
 13013  17AA  3085               	movlw	133
 13014  17AB                     u5047:	
 13015  17AB  0B89               	decfsz	9,f
 13016  17AC  2FAB               	goto	u5047
 13017  17AD  0000               	nop
 13018                           
 13019                           ;ble.c: 75: cnt++;
 13020  17AE  0020               	movlb	0	; select bank0
 13021  17AF  0AAB               	incf	BLE_SendCMD@cnt,f
 13022  17B0  1903               	skipnz
 13023  17B1  0AAC               	incf	BLE_SendCMD@cnt+1,f
 13024                           
 13025                           ;ble.c: 76: if ( cnt > 1000 ) {
 13026  17B2  3003               	movlw	3
 13027  17B3  022C               	subwf	BLE_SendCMD@cnt+1,w
 13028  17B4  30E9               	movlw	233
 13029  17B5  1903               	skipnz
 13030  17B6  022B               	subwf	BLE_SendCMD@cnt,w
 13031  17B7  1803               	btfsc	3,0
 13032  17B8  0008               	return
 13033  17B9                     l3961:	
 13034  17B9  3007               	movlw	7
 13035  17BA  022E               	subwf	BLE_SendCMD@index,w
 13036  17BB  1803               	btfsc	3,0
 13037  17BC  0008               	return
 13038  17BD  2F95               	goto	l77
 13039  17BE                     __end_of_BLE_SendCMD:	
 13040  17BE                     __ptext56:	
 13041 ;; *************** function _BLE_CheckDevID *****************
 13042 ;; Defined at:
 13043 ;;		line 82 in file "src/ble.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;		None
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  dev            17   16[BANK0 ] unsigned char [17]
 13048 ;;  cnt             2   33[BANK0 ] unsigned int 
 13049 ;;  index           1   36[BANK0 ] unsigned char 
 13050 ;;  rev             1   35[BANK0 ] unsigned char 
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      unsigned char 
 13053 ;; Registers used:
 13054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/2
 13057 ;;		On exit  : 1F/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;Total ram usage:       22 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:   12
 13067 ;; This function calls:
 13068 ;;		_BLE_SendCMD
 13069 ;; This function is called by:
 13070 ;;		_BLE_Initialize
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           
 13075                           ;psect for function _BLE_CheckDevID
 13076  17BE                     _BLE_CheckDevID:	
 13077                           
 13078                           ;ble.c: 83: uint8_t dev[] = "30313333" "30313032";
 13079                           
 13080                           ;incstack = 0
 13081                           ; Regs used in _BLE_CheckDevID: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13082  17BE  30A0               	movlw	low BLE_CheckDevID@F8119
 13083  17BF  0086               	movwf	6
 13084  17C0  3001               	movlw	high BLE_CheckDevID@F8119
 13085  17C1  0087               	movwf	7
 13086  17C2  3030               	movlw	low BLE_CheckDevID@dev
 13087  17C3  0084               	movwf	4
 13088  17C4  3000               	movlw	high BLE_CheckDevID@dev
 13089  17C5  0085               	movwf	5
 13090  17C6  3011               	movlw	17
 13091  17C7  0020               	movlb	0	; select bank0
 13092  17C8  00AF               	movwf	??_BLE_CheckDevID
 13093  17C9                     u3510:	
 13094  17C9  0016               	moviw fsr1++
 13095  17CA  001A               	movwi fsr0++
 13096  17CB  0BAF               	decfsz	??_BLE_CheckDevID,f
 13097  17CC  2FC9               	goto	u3510
 13098  17CD  3022               	movlw	low (STR_1| (0+32768))
 13099                           
 13100                           ;ble.c: 84: uint8_t index = 0;
 13101  17CE  01C4               	clrf	BLE_CheckDevID@index
 13102                           
 13103                           ;ble.c: 85: uint16_t cnt = 0;
 13104  17CF  01C1               	clrf	BLE_CheckDevID@cnt
 13105  17D0  01C2               	clrf	BLE_CheckDevID@cnt+1
 13106                           
 13107                           ;ble.c: 86: uint8_t rev;
 13108                           ;ble.c: 87: BLE_SendCMD( "AT+ADV_MFR_SPC=?\r\n" );
 13109  17D1  00A1               	movwf	BLE_SendCMD@pBuf
 13110  17D2  3098               	movlw	high (STR_1| (0+32768))
 13111  17D3  00A2               	movwf	BLE_SendCMD@pBuf+1
 13112  17D4  276E  3197         	fcall	_BLE_SendCMD
 13113  17D6                     l4285:	
 13114                           ;ble.c: 88: while ( *( dev + index ) != '\0' ) {
 13115                           
 13116  17D6  27FA  3197         	fcall	PL58	;call to abstracted procedure
 13117  17D8  1903               	btfsc	3,2
 13118  17D9  3401               	retlw	1
 13119                           
 13120                           ;ble.c: 90: if ( PIR1bits.RCIF ) {
 13121  17DA  1E91               	btfss	17,5	;volatile
 13122  17DB  2FEA               	goto	l4275
 13123                           
 13124                           ;ble.c: 91: if ( RC1STAbits.OERR ) {
 13125  17DC  0023               	movlb	3	; select bank3
 13126  17DD  1C9D               	btfss	29,1	;volatile
 13127  17DE  2FE1               	goto	l4265
 13128                           
 13129                           ;ble.c: 92: RC1STAbits.CREN = 0;
 13130  17DF  121D               	bcf	29,4	;volatile
 13131                           
 13132                           ;ble.c: 93: RC1STAbits.CREN = 1;
 13133  17E0  161D               	bsf	29,4	;volatile
 13134  17E1                     l4265:	
 13135                           
 13136                           ;ble.c: 94: }
 13137                           ;ble.c: 95: rev = RCREG;
 13138  17E1  0819               	movf	25,w	;volatile
 13139  17E2  0020               	movlb	0	; select bank0
 13140  17E3  00C3               	movwf	BLE_CheckDevID@rev
 13141                           
 13142                           ;ble.c: 96: if ( rev == *( dev + index ) ) {
 13143  17E4  27FA  3197         	fcall	PL58	;call to abstracted procedure
 13144  17E6  0643               	xorwf	BLE_CheckDevID@rev,w
 13145  17E7  1D03               	skipz
 13146  17E8  3400               	retlw	0
 13147                           
 13148                           ;ble.c: 97: index++;
 13149  17E9  0AC4               	incf	BLE_CheckDevID@index,f
 13150  17EA                     l4275:	
 13151                           ;ble.c: 99: return 0;
 13152                           
 13153                           ;ble.c: 98: } else {
 13154                           
 13155                           
 13156                           ;ble.c: 100: }
 13157                           ;ble.c: 101: }
 13158                           ;ble.c: 102: _delay((unsigned long)((100)*(16000000/4000000.0)));
 13159  17EA  3085               	movlw	133
 13160  17EB                     u5037:	
 13161  17EB  0B89               	decfsz	9,f
 13162  17EC  2FEB               	goto	u5037
 13163  17ED  0000               	nop
 13164                           
 13165                           ;ble.c: 103: cnt++;
 13166  17EE  0020               	movlb	0	; select bank0
 13167  17EF  0AC1               	incf	BLE_CheckDevID@cnt,f
 13168  17F0  1903               	skipnz
 13169  17F1  0AC2               	incf	BLE_CheckDevID@cnt+1,f
 13170                           
 13171                           ;ble.c: 104: if ( cnt > 1000 ) {
 13172  17F2  3003               	movlw	3
 13173  17F3  0242               	subwf	BLE_CheckDevID@cnt+1,w
 13174  17F4  30E9               	movlw	233
 13175  17F5  1903               	skipnz
 13176  17F6  0241               	subwf	BLE_CheckDevID@cnt,w
 13177  17F7  1803               	btfsc	3,0
 13178  17F8  3400               	retlw	0
 13179  17F9  2FD6               	goto	l4285
 13180  17FA                     __end_of_BLE_CheckDevID:	
 13181                           ;ble.c: 106: }
 13182                           ;ble.c: 107: }
 13183                           ;ble.c: 108: return 1;
 13184                           
 13185  17FA                     PL58:	
 13186  17FA  0844               	movf	BLE_CheckDevID@index,w
 13187  17FB  3E30               	addlw	(low (BLE_CheckDevID@dev| 0))& (0+255)
 13188  17FC  0086               	movwf	6
 13189  17FD  0187               	clrf	7
 13190  17FE  0801               	movf	1,w
 13191  17FF  0008               	return
 13192  1800                     __end_ofPL58:	
 13193                           
 13194                           	psect	swtext1
 13195  07DF                     __pswtext1:	
 13196  07DF                     S5297:	
 13197  07DF  318D  2D02         	ljmp	l5053
 13198  07E1  318D  2D34         	ljmp	l126
 13199  07E3  318C  2C94         	ljmp	l4977
 13200  07E5  318C  2CA1         	ljmp	l4985
 13201  07E7  318C  2CA9         	ljmp	l4993
 13202  07E9  318C  2CB4         	ljmp	l4999
 13203  07EB  318C  2CB9         	ljmp	l5003
 13204  07ED  318C  2CC2         	ljmp	l5011
 13205  07EF  318C  2CCA         	ljmp	l5019
 13206  07F1  318C  2CD6         	ljmp	l5025
 13207  07F3  318D  2D34         	ljmp	l126
 13208  07F5  318C  2CE2         	ljmp	l5031
 13209  07F7  318C  2CEE         	ljmp	l5037
 13210  07F9  318D  2D34         	ljmp	l126
 13211  07FB  318C  2CF3         	ljmp	l5041
 13212  07FD  318C  2CFD         	ljmp	l5049
 13213                           
 13214                           	psect	text63
 13215  155E                     __ptext63:	
 13216 ;; *************** function _LED_SetPreviewBrights *****************
 13217 ;; Defined at:
 13218 ;;		line 784 in file "src/led.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  pbuf            1    wreg     const PTR const unsigned
 13221 ;;		 -> rxBuf(64), 
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;  pbuf            1    9[BANK0 ] const PTR const unsigned
 13224 ;;		 -> rxBuf(64), 
 13225 ;;  val             2    7[BANK0 ] unsigned int 
 13226 ;;  i               1   10[BANK0 ] unsigned char 
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      unsigned char 
 13229 ;; Registers used:
 13230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 19/4
 13233 ;;		On exit  : 1C/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;Total ram usage:        6 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:   12
 13243 ;; This function calls:
 13244 ;;		_LED_UpdatePWM
 13245 ;; This function is called by:
 13246 ;;		_BLE_DecodeData
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           
 13251                           ;psect for function _LED_SetPreviewBrights
 13252  155E                     _LED_SetPreviewBrights:	
 13253                           
 13254                           ;incstack = 0
 13255                           ; Regs used in _LED_SetPreviewBrights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13256                           ;LED_SetPreviewBrights@pbuf stored from wreg
 13257  155E  0020               	movlb	0	; select bank0
 13258  155F  00A9               	movwf	LED_SetPreviewBrights@pbuf
 13259                           
 13260                           ;led.c: 785: if ( !gLedRunPara.find && gLedPara.fAuto ) {
 13261  1560  0021               	movlb	1	; select bank1
 13262  1561  1838               	btfsc	_gLedRunPara^(0+128),0	;volatile
 13263  1562  3400               	retlw	0
 13264  1563  0022               	movlb	2	; select bank2
 13265  1564  1C20               	btfss	_gLedPara^(0+256),0	;volatile
 13266  1565  3400               	retlw	0
 13267                           
 13268                           ;led.c: 786: for ( uint8_t i = 0; i < 5; i++ ) {
 13269  1566  0020               	movlb	0	; select bank0
 13270  1567  01AA               	clrf	LED_SetPreviewBrights@i
 13271  1568                     l4513:	
 13272                           
 13273                           ;led.c: 787: uint16_t val = ( *( pbuf + 2 * i ) ) << 8 | ( *( pbuf + 2 * i + 1 ) );
 13274  1568  352A               	lslf	LED_SetPreviewBrights@i,w
 13275  1569  0729               	addwf	LED_SetPreviewBrights@pbuf,w
 13276  156A  00A5               	movwf	??_LED_SetPreviewBrights
 13277  156B  0A25               	incf	??_LED_SetPreviewBrights,w
 13278  156C  0086               	movwf	6
 13279  156D  3002               	movlw	2	; select bank4/5
 13280  156E  0087               	movwf	7
 13281  156F  352A               	lslf	LED_SetPreviewBrights@i,w
 13282  1570  0729               	addwf	LED_SetPreviewBrights@pbuf,w
 13283  1571  00A6               	movwf	??_LED_SetPreviewBrights+1
 13284  1572  0084               	movwf	4
 13285  1573  3002               	movlw	2	; select bank4/5
 13286  1574  0085               	movwf	5
 13287  1575  0800               	movf	0,w
 13288  1576  00A8               	movwf	LED_SetPreviewBrights@val+1
 13289  1577  0801               	movf	1,w
 13290  1578  00A7               	movwf	LED_SetPreviewBrights@val
 13291                           
 13292                           ;led.c: 788: if ( val <= 1000 ) {
 13293  1579  3003               	movlw	3
 13294  157A  0228               	subwf	LED_SetPreviewBrights@val+1,w
 13295  157B  30E9               	movlw	233
 13296  157C  1903               	skipnz
 13297  157D  0227               	subwf	LED_SetPreviewBrights@val,w
 13298  157E  1803               	skipnc
 13299  157F  2D88               	goto	l4519
 13300                           
 13301                           ;led.c: 789: gLedRunPara.nCurrentBrt[i] = val;
 13302  1580  352A               	lslf	LED_SetPreviewBrights@i,w
 13303  1581  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 13304  1582  0086               	movwf	6
 13305  1583  0187               	clrf	7
 13306  1584  0827               	movf	LED_SetPreviewBrights@val,w
 13307  1585  3FC0               	movwi [0]fsr1
 13308  1586  0828               	movf	LED_SetPreviewBrights@val+1,w
 13309  1587  3FC1               	movwi [1]fsr1
 13310  1588                     l4519:	
 13311  1588  3005               	movlw	5
 13312  1589  0AAA               	incf	LED_SetPreviewBrights@i,f
 13313  158A  022A               	subwf	LED_SetPreviewBrights@i,w
 13314  158B  1C03               	skipc
 13315  158C  2D68               	goto	l4513
 13316                           
 13317                           ;led.c: 790: }
 13318                           ;led.c: 791: }
 13319                           ;led.c: 792: LED_UpdatePWM( );
 13320  158D  318E  2698         	fcall	_LED_UpdatePWM
 13321                           
 13322                           ;led.c: 793: return 1;
 13323  158F  3401               	retlw	1
 13324  1590                     __end_of_LED_SetPreviewBrights:	
 13325                           ;led.c: 794: }
 13326                           ;led.c: 795: return 0;
 13327                           
 13328                           
 13329                           	psect	intentry
 13330  0404                     __pintentry:	
 13331 ;; *************** function _INTERRUPT_InterruptManager *****************
 13332 ;; Defined at:
 13333 ;;		line 89 in file "src/comman.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;		None
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      void 
 13340 ;; Registers used:
 13341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;Total ram usage:        0 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    9
 13354 ;; This function calls:
 13355 ;;		_EUSART_RCV_ISR
 13356 ;;		_EUSART_Transmit_ISR
 13357 ;;		_TMR0_ISR
 13358 ;;		_TMR2_ISR
 13359 ;; This function is called by:
 13360 ;;		Interrupt level 1
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364  0404                     _INTERRUPT_InterruptManager:	
 13365                           
 13366                           ;incstack = 0
 13367  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13368                           
 13369                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13370  0405  3184               	pagesel	$
 13371                           
 13372                           ;comman.c: 90: if ( PIE1bits.RCIE && PIR1bits.RCIF ) {
 13373  0406  0021               	movlb	1	; select bank1
 13374  0407  1E91               	btfss	17,5	;volatile
 13375  0408  2C10               	goto	i1l269
 13376  0409  0020               	movlb	0	; select bank0
 13377  040A  1E91               	btfss	17,5	;volatile
 13378  040B  2C10               	goto	i1l269
 13379                           
 13380                           ;comman.c: 91: EUSART_RCV_ISR( );
 13381  040C  3195  2509  3184   	fcall	_EUSART_RCV_ISR
 13382                           
 13383                           ;comman.c: 92: } else if ( PIE0bits.TMR0IE && PIR0bits.TMR0IF ) {
 13384  040F  2C2C               	goto	i1l276
 13385  0410                     i1l269:	
 13386  0410  0021               	movlb	1	; select bank1
 13387  0411  1E90               	btfss	16,5	;volatile
 13388  0412  2C1A               	goto	i1l271
 13389  0413  0020               	movlb	0	; select bank0
 13390  0414  1E90               	btfss	16,5	;volatile
 13391  0415  2C1A               	goto	i1l271
 13392                           
 13393                           ;comman.c: 93: TMR0_ISR( );
 13394  0416  3194  248B  3184   	fcall	_TMR0_ISR
 13395                           
 13396                           ;comman.c: 94: } else if ( PIE1bits.TMR2IE && PIR1bits.TMR2IF ) {
 13397  0419  2C2C               	goto	i1l276
 13398  041A                     i1l271:	
 13399  041A  0021               	movlb	1	; select bank1
 13400  041B  1C91               	btfss	17,1	;volatile
 13401  041C  2C24               	goto	i1l273
 13402  041D  0020               	movlb	0	; select bank0
 13403  041E  1C91               	btfss	17,1	;volatile
 13404  041F  2C24               	goto	i1l273
 13405                           
 13406                           ;comman.c: 95: TMR2_ISR( );
 13407  0420  3194  2497  3184   	fcall	_TMR2_ISR
 13408                           
 13409                           ;comman.c: 96: } else if ( PIE1bits.TXIE && PIR1bits.TXIF ) {
 13410  0423  2C2C               	goto	i1l276
 13411  0424                     i1l273:	
 13412  0424  0021               	movlb	1	; select bank1
 13413  0425  1E11               	btfss	17,4	;volatile
 13414  0426  2C2C               	goto	i1l276
 13415  0427  0020               	movlb	0	; select bank0
 13416  0428  1E11               	btfss	17,4	;volatile
 13417  0429  2C2C               	goto	i1l276
 13418                           
 13419                           ;comman.c: 97: EUSART_Transmit_ISR( );
 13420  042A  3195  251F         	fcall	_EUSART_Transmit_ISR
 13421  042C                     i1l276:	
 13422  042C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13423  042D  0009               	retfie
 13424  042E                     __end_of_INTERRUPT_InterruptManager:	
 13425                           
 13426                           	psect	text91
 13427  1497                     __ptext91:	
 13428 ;; *************** function _TMR2_ISR *****************
 13429 ;; Defined at:
 13430 ;;		line 89 in file "src/tmr.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13439 ;; Tracked objects:
 13440 ;;		On entry : 1F/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:    8
 13451 ;; This function calls:
 13452 ;;		Absolute function
 13453 ;;		_TMR2_InterruptCallback
 13454 ;; This function is called by:
 13455 ;;		_INTERRUPT_InterruptManager
 13456 ;; This function uses a non-reentrant model
 13457 ;;
 13458                           
 13459                           
 13460                           ;psect for function _TMR2_ISR
 13461  1497                     _TMR2_ISR:	
 13462                           
 13463                           ;tmr.c: 90: PIR1bits.TMR2IF = 0;
 13464                           
 13465                           ;incstack = 0
 13466                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13467  1497  1091               	bcf	17,1	;volatile
 13468                           
 13469                           ;tmr.c: 91: if ( fnTmr2Callback != (0) ) {
 13470  1498  0021               	movlb	1	; select bank1
 13471  1499  0827               	movf	_fnTmr2Callback^(0+128),w
 13472  149A  0428               	iorwf	(_fnTmr2Callback+1)^(0+128),w
 13473  149B  1903               	btfsc	3,2
 13474  149C  0008               	return
 13475                           
 13476                           ;tmr.c: 92: fnTmr2Callback( );
 13477  149D  0828               	movf	(_fnTmr2Callback+1)^(0+128),w
 13478  149E  008A               	movwf	10
 13479  149F  0827               	movf	_fnTmr2Callback^(0+128),w
 13480  14A0  000A               	callw
 13481  14A1  3194               	pagesel	$
 13482  14A2  0008               	return
 13483  14A3                     __end_of_TMR2_ISR:	
 13484                           
 13485                           	psect	text92
 13486  15CB                     __ptext92:	
 13487 ;; *************** function _TMR2_InterruptCallback *****************
 13488 ;; Defined at:
 13489 ;;		line 70 in file "src/comman.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;		None
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;		None
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 1F/1
 13500 ;;		On exit  : 10/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;Total ram usage:        0 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    7
 13510 ;; This function calls:
 13511 ;;		_KEY_Scan
 13512 ;;		_LED_UpdateBrightRamp
 13513 ;; This function is called by:
 13514 ;;		_registerCallback
 13515 ;;		_TMR2_ISR
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           
 13519                           
 13520                           ;psect for function _TMR2_InterruptCallback
 13521  15CB                     _TMR2_InterruptCallback:	
 13522                           
 13523                           ;comman.c: 71: static uint8_t cnt = 0;
 13524                           ;comman.c: 73: cnt++;
 13525                           
 13526                           ;incstack = 0
 13527                           ; Regs used in _TMR2_InterruptCallback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13528  15CB  0AB6               	incf	TMR2_InterruptCallback@cnt^(0+128),f
 13529                           
 13530                           ;comman.c: 74: if ( ( cnt & 0x03 ) == 0x00 ) {
 13531  15CC  0836               	movf	TMR2_InterruptCallback@cnt^(0+128),w
 13532  15CD  3903               	andlw	3
 13533  15CE  1D03               	btfss	3,2
 13534  15CF  0008               	return
 13535                           
 13536                           ;comman.c: 75: if ( ( cnt & 0x0F ) == 0x00 ) {
 13537  15D0  0836               	movf	TMR2_InterruptCallback@cnt^(0+128),w
 13538  15D1  390F               	andlw	15
 13539  15D2  1D03               	btfss	3,2
 13540  15D3  2DD5               	goto	i1l262
 13541                           
 13542                           ;comman.c: 76: KEY_Scan( );
 13543  15D4  25D7               	fcall	_KEY_Scan
 13544  15D5                     i1l262:	
 13545                           
 13546                           ;comman.c: 77: }
 13547                           ;comman.c: 78: LED_UpdateBrightRamp( );
 13548  15D5  3185  2D5B         	ljmp	i1l4015
 13549  15D7                     __end_of_TMR2_InterruptCallback:	
 13550  15D7                     __ptext94:	
 13551 ;; *************** function _KEY_Scan *****************
 13552 ;; Defined at:
 13553 ;;		line 21 in file "src/key.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;		None
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  keyNum          1   12[COMMON] unsigned char 
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  1    wreg      void 
 13560 ;; Registers used:
 13561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13562 ;; Tracked objects:
 13563 ;;		On entry : 1F/1
 13564 ;;		On exit  : 1F/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;Total ram usage:        1 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:    6
 13574 ;; This function calls:
 13575 ;;		Absolute function
 13576 ;;		_KEY_Read
 13577 ;;		_LED_Action_OnKeyStateChanged
 13578 ;; This function is called by:
 13579 ;;		_TMR2_InterruptCallback
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           
 13584                           ;psect for function _KEY_Scan
 13585  15D7                     _KEY_Scan:	
 13586                           
 13587                           ;key.c: 22: static uint8_t lastKey = 0x00;
 13588                           ;key.c: 23: static uint8_t rptCount = 0;
 13589                           ;key.c: 25: uint8_t keyNum = KEY_Read( );
 13590                           
 13591                           ;incstack = 0
 13592                           ; Regs used in _KEY_Scan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13593  15D7  263B  3195         	fcall	_KEY_Read
 13594  15D9  00FC               	movwf	KEY_Scan@keyNum
 13595                           
 13596                           ;key.c: 26: if ( keyNum != 0x00 ) {
 13597  15DA  087C               	movf	KEY_Scan@keyNum,w
 13598  15DB  1903               	btfsc	3,2
 13599  15DC  2E0A               	goto	i1l3997
 13600                           
 13601                           ;key.c: 27: if ( keyNum == lastKey ) {
 13602  15DD  087C               	movf	KEY_Scan@keyNum,w
 13603  15DE  0020               	movlb	0	; select bank0
 13604  15DF  066F               	xorwf	KEY_Scan@lastKey,w
 13605  15E0  1D03               	skipz
 13606  15E1  2E35               	goto	i1l3995
 13607                           
 13608                           ;key.c: 28: rptCount++;
 13609  15E2  0021               	movlb	1	; select bank1
 13610  15E3  3020               	movlw	32
 13611  15E4  0AB3               	incf	KEY_Scan@rptCount^(0+128),f
 13612                           
 13613                           ;key.c: 29: if ( rptCount == 32 ) {
 13614  15E5  0633               	xorwf	KEY_Scan@rptCount^(0+128),w
 13615  15E6  1D03               	btfss	3,2
 13616  15E7  2DF6               	goto	i1l3987
 13617                           
 13618                           ;key.c: 31: if ( fnKeyAction != (0) ) {
 13619  15E8  082D               	movf	_fnKeyAction^(0+128),w
 13620  15E9  042E               	iorwf	(_fnKeyAction+1)^(0+128),w
 13621  15EA  1903               	btfsc	3,2
 13622  15EB  2E37               	goto	i1l4013
 13623                           
 13624                           ;key.c: 32: fnKeyAction( keyNum, KEY_PRESS_LONG );
 13625  15EC  087C               	movf	KEY_Scan@keyNum,w
 13626  15ED  00FA               	movwf	LED_Action_OnKeyStateChanged@key
 13627  15EE  01FB               	clrf	LED_Action_OnKeyStateChanged@state
 13628  15EF  0AFB               	incf	LED_Action_OnKeyStateChanged@state,f
 13629  15F0  082E               	movf	(_fnKeyAction+1)^(0+128),w
 13630  15F1  008A               	movwf	10
 13631  15F2  082D               	movf	_fnKeyAction^(0+128),w
 13632  15F3  000A               	callw
 13633  15F4  3195               	pagesel	$
 13634  15F5  2E37               	goto	i1l4013
 13635  15F6                     i1l3987:	
 13636  15F6  3021               	movlw	33
 13637  15F7  0233               	subwf	KEY_Scan@rptCount^(0+128),w
 13638  15F8  1C03               	skipc
 13639  15F9  2E37               	goto	i1l4013
 13640                           
 13641                           ;key.c: 35: rptCount = 32;
 13642  15FA  3020               	movlw	32
 13643  15FB  00B3               	movwf	KEY_Scan@rptCount^(0+128)
 13644                           
 13645                           ;key.c: 38: if ( fnKeyAction != (0) ) {
 13646  15FC  082D               	movf	_fnKeyAction^(0+128),w
 13647  15FD  042E               	iorwf	(_fnKeyAction+1)^(0+128),w
 13648  15FE  1903               	btfsc	3,2
 13649  15FF  2E37               	goto	i1l4013
 13650                           
 13651                           ;key.c: 39: fnKeyAction( keyNum, KEY_PRESS_CONT );
 13652  1600  087C               	movf	KEY_Scan@keyNum,w
 13653  1601  00FA               	movwf	LED_Action_OnKeyStateChanged@key
 13654  1602  3002               	movlw	2
 13655  1603  00FB               	movwf	LED_Action_OnKeyStateChanged@state
 13656  1604  082E               	movf	(_fnKeyAction+1)^(0+128),w
 13657  1605  008A               	movwf	10
 13658  1606  082D               	movf	_fnKeyAction^(0+128),w
 13659  1607  000A               	callw
 13660  1608  3195               	pagesel	$
 13661  1609  2E37               	goto	i1l4013
 13662  160A                     i1l3997:	
 13663                           ;key.c: 44: }
 13664                           ;key.c: 45: } else {
 13665                           
 13666                           
 13667                           ;key.c: 46: if ( lastKey != 0x00 ) {
 13668  160A  0020               	movlb	0	; select bank0
 13669  160B  086F               	movf	KEY_Scan@lastKey,w
 13670  160C  1903               	btfsc	3,2
 13671  160D  2E35               	goto	i1l3995
 13672                           
 13673                           ;key.c: 47: if ( rptCount >= 32 ) {
 13674  160E  3020               	movlw	32
 13675  160F  0021               	movlb	1	; select bank1
 13676  1610  0233               	subwf	KEY_Scan@rptCount^(0+128),w
 13677  1611  1C03               	skipc
 13678  1612  2E23               	goto	i1l4005
 13679                           
 13680                           ;key.c: 50: if ( fnKeyAction != (0) ) {
 13681  1613  082D               	movf	_fnKeyAction^(0+128),w
 13682  1614  042E               	iorwf	(_fnKeyAction+1)^(0+128),w
 13683  1615  1903               	btfsc	3,2
 13684  1616  2E35               	goto	i1l3995
 13685                           
 13686                           ;key.c: 51: fnKeyAction( lastKey, KEY_RELEASE_1 );
 13687  1617  0020               	movlb	0	; select bank0
 13688  1618  086F               	movf	KEY_Scan@lastKey,w
 13689  1619  00FA               	movwf	LED_Action_OnKeyStateChanged@key
 13690  161A  3003               	movlw	3
 13691  161B  00FB               	movwf	LED_Action_OnKeyStateChanged@state
 13692  161C  0021               	movlb	1	; select bank1
 13693  161D  082E               	movf	(_fnKeyAction+1)^(0+128),w
 13694  161E  008A               	movwf	10
 13695  161F  082D               	movf	_fnKeyAction^(0+128),w
 13696  1620  000A               	callw
 13697  1621  3195               	pagesel	$
 13698  1622  2E35               	goto	i1l3995
 13699  1623                     i1l4005:	
 13700  1623  3003               	movlw	3
 13701  1624  0233               	subwf	KEY_Scan@rptCount^(0+128),w
 13702  1625  1C03               	skipc
 13703  1626  2E35               	goto	i1l3995
 13704                           
 13705                           ;key.c: 56: if ( fnKeyAction != (0) ) {
 13706  1627  082D               	movf	_fnKeyAction^(0+128),w
 13707  1628  042E               	iorwf	(_fnKeyAction+1)^(0+128),w
 13708  1629  1903               	btfsc	3,2
 13709  162A  2E35               	goto	i1l3995
 13710                           
 13711                           ;key.c: 57: fnKeyAction( lastKey, KEY_PRESS_SHORT );
 13712  162B  0020               	movlb	0	; select bank0
 13713  162C  086F               	movf	KEY_Scan@lastKey,w
 13714  162D  00FA               	movwf	LED_Action_OnKeyStateChanged@key
 13715  162E  01FB               	clrf	LED_Action_OnKeyStateChanged@state
 13716  162F  0021               	movlb	1	; select bank1
 13717  1630  082E               	movf	(_fnKeyAction+1)^(0+128),w
 13718  1631  008A               	movwf	10
 13719  1632  082D               	movf	_fnKeyAction^(0+128),w
 13720  1633  000A               	callw
 13721  1634  3195               	pagesel	$
 13722  1635                     i1l3995:	
 13723                           
 13724                           ;key.c: 43: rptCount = 0;
 13725  1635  0021               	movlb	1	; select bank1
 13726  1636  01B3               	clrf	KEY_Scan@rptCount^(0+128)
 13727  1637                     i1l4013:	
 13728                           
 13729                           ;key.c: 62: }
 13730                           ;key.c: 63: lastKey = keyNum;
 13731  1637  087C               	movf	KEY_Scan@keyNum,w
 13732  1638  0020               	movlb	0	; select bank0
 13733  1639  00EF               	movwf	KEY_Scan@lastKey
 13734  163A  0008               	return
 13735  163B                     __end_of_KEY_Scan:	
 13736  163B                     __ptext123:	
 13737 ;; *************** function _KEY_Read *****************
 13738 ;; Defined at:
 13739 ;;		line 12 in file "src/key.c"
 13740 ;; Parameters:    Size  Location     Type
 13741 ;;		None
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;  ReadData        1    0[COMMON] unsigned char 
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  1    wreg      unsigned char 
 13746 ;; Registers used:
 13747 ;;		wreg, status,2, status,0
 13748 ;; Tracked objects:
 13749 ;;		On entry : 1F/1
 13750 ;;		On exit  : 1F/1
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13757 ;;Total ram usage:        1 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; This function calls:
 13760 ;;		Nothing
 13761 ;; This function is called by:
 13762 ;;		_KEY_Scan
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           
 13767                           ;psect for function _KEY_Read
 13768  163B                     _KEY_Read:	
 13769                           
 13770                           ;key.c: 13: static uint8_t Trg;
 13771                           ;key.c: 14: static uint8_t Cont;
 13772                           ;key.c: 15: uint8_t ReadData = ( PORTC ^ 0xFF ) & 0x01;
 13773                           
 13774                           ;incstack = 0
 13775                           ; Regs used in _KEY_Read: [wreg+status,2+status,0]
 13776  163B  0020               	movlb	0	; select bank0
 13777  163C  090E               	comf	14,w	;volatile
 13778  163D  00F0               	movwf	KEY_Read@ReadData
 13779  163E  3001               	movlw	1
 13780  163F  05F0               	andwf	KEY_Read@ReadData,f
 13781                           
 13782                           ;key.c: 16: Trg = ReadData & ( ReadData ^ Cont );
 13783  1640  0870               	movf	KEY_Read@ReadData,w
 13784  1641  0021               	movlb	1	; select bank1
 13785  1642  0634               	xorwf	KEY_Read@Cont^(0+128),w
 13786  1643  00B5               	movwf	KEY_Read@Trg^(0+128)
 13787  1644  0870               	movf	KEY_Read@ReadData,w
 13788  1645  05B5               	andwf	KEY_Read@Trg^(0+128),f
 13789                           
 13790                           ;key.c: 17: Cont = ReadData;
 13791  1646  00B4               	movwf	KEY_Read@Cont^(0+128)
 13792                           
 13793                           ;key.c: 18: return ( Trg ^ Cont );
 13794  1647  0635               	xorwf	KEY_Read@Trg^(0+128),w
 13795  1648  0008               	return
 13796  1649                     __end_of_KEY_Read:	
 13797                           
 13798                           	psect	text95
 13799  14BE                     __ptext95:	
 13800 ;; *************** function _LED_Action_OnKeyStateChanged *****************
 13801 ;; Defined at:
 13802 ;;		line 617 in file "src/led.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  key             1   10[COMMON] unsigned char 
 13805 ;;  state           1   11[COMMON] enum E8014
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;		None
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  1    wreg      void 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13812 ;; Tracked objects:
 13813 ;;		On entry : 1F/1
 13814 ;;		On exit  : 10/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;Total ram usage:        2 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:    5
 13824 ;; This function calls:
 13825 ;;		_LED_StateBleAction_OnKeyStateChanged
 13826 ;;		_LED_StateDayAction_OnKeyStateChanged
 13827 ;;		_LED_StateNightAction_OnKeyStateChanged
 13828 ;;		_LED_StateOffAction_OnKeyStateChanged
 13829 ;; This function is called by:
 13830 ;;		_registerCallback
 13831 ;;		_KEY_Scan
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           
 13836                           ;psect for function _LED_Action_OnKeyStateChanged
 13837  14BE                     _LED_Action_OnKeyStateChanged:	
 13838                           
 13839                           ;led.c: 618: led_state_actions[gLedPara.fSta]( key, state );
 13840                           
 13841                           ;incstack = 0
 13842                           ; Regs used in _LED_Action_OnKeyStateChanged: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13843  14BE  087A               	movf	LED_Action_OnKeyStateChanged@key,w
 13844  14BF  00F8               	movwf	LED_StateBleAction_OnKeyStateChanged@key
 13845  14C0  087B               	movf	LED_Action_OnKeyStateChanged@state,w
 13846  14C1  00F9               	movwf	LED_StateBleAction_OnKeyStateChanged@state
 13847  14C2  0022               	movlb	2	; select bank2
 13848  14C3  0C20               	rrf	_gLedPara^(0+256),w	;volatile
 13849  14C4  3903               	andlw	3
 13850  14C5  0709               	addwf	9,w
 13851  14C6  3EDB               	addlw	(low (_led_state_actions| 0))& (0+255)
 13852  14C7  0086               	movwf	6
 13853  14C8  0187               	clrf	7
 13854  14C9  3F41               	moviw [1]fsr1
 13855  14CA  008A               	movwf	10
 13856  14CB  3F40               	moviw [0]fsr1
 13857  14CC  000A               	callw
 13858  14CD  3194               	pagesel	$
 13859  14CE  0008               	return
 13860  14CF                     __end_of_LED_Action_OnKeyStateChanged:	
 13861                           
 13862                           	psect	text96
 13863  14F4                     __ptext96:	
 13864 ;; *************** function _LED_StateBleAction_OnKeyStateChanged *****************
 13865 ;; Defined at:
 13866 ;;		line 592 in file "src/led.c"
 13867 ;; Parameters:    Size  Location     Type
 13868 ;;  key             1    8[COMMON] unsigned char 
 13869 ;;  state           1    9[COMMON] enum E8014
 13870 ;; Auto vars:     Size  Location     Type
 13871 ;;		None
 13872 ;; Return value:  Size  Location     Type
 13873 ;;                  1    wreg      void 
 13874 ;; Registers used:
 13875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13876 ;; Tracked objects:
 13877 ;;		On entry : 1F/2
 13878 ;;		On exit  : 1F/2
 13879 ;;		Unchanged: 0/0
 13880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13885 ;;Total ram usage:        2 bytes
 13886 ;; Hardware stack levels used:    1
 13887 ;; Hardware stack levels required when called:    3
 13888 ;; This function calls:
 13889 ;;		_LED_StateBle_OnKeyPressShort
 13890 ;; This function is called by:
 13891 ;;		_LED_Action_OnKeyStateChanged
 13892 ;; This function uses a non-reentrant model
 13893 ;;
 13894                           
 13895                           
 13896                           ;psect for function _LED_StateBleAction_OnKeyStateChanged
 13897  14F4                     _LED_StateBleAction_OnKeyStateChanged:	
 13898                           
 13899                           ;led.c: 593: if ( key == 0x01 ) {
 13900                           
 13901                           ;incstack = 0
 13902                           ; Regs used in _LED_StateBleAction_OnKeyStateChanged: [wreg-fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 13903  14F4  0B78               	decfsz	LED_StateBleAction_OnKeyStateChanged@key,w
 13904  14F5  0008               	return
 13905  14F6  2CFA               	goto	i1l3769
 13906  14F7                     i1l3765:	
 13907                           
 13908                           ;led.c: 596: LED_StateBle_OnKeyPressShort( );
 13909  14F7  3185  2598         	fcall	_LED_StateBle_OnKeyPressShort
 13910  14F9                     i1l624:	
 13911                           ;led.c: 600: case KEY_RELEASE_1:
 13912                           ;led.c: 601: case KEY_PRESS_LONG:
 13913                           ;led.c: 602: default:
 13914                           
 13915                           ;led.c: 597: break;
 13916                           
 13917                           
 13918                           ;led.c: 603: break;
 13919  14F9  0008               	return
 13920  14FA                     i1l3769:	
 13921  14FA  0879               	movf	LED_StateBleAction_OnKeyStateChanged@state,w
 13922                           
 13923                           ; Switch size 1, requested type "space"
 13924                           ; Number of cases is 4, Range of values is 0 to 3
 13925                           ; switch strategies available:
 13926                           ; Name         Instructions Cycles
 13927                           ; simple_byte           13     7 (average)
 13928                           ; direct_byte           14     6 (fixed)
 13929                           ; jumptable            260     6 (fixed)
 13930                           ;	Chosen strategy is simple_byte
 13931  14FB  3A00               	xorlw	0	; case 0
 13932  14FC  1903               	skipnz
 13933  14FD  2CF7               	goto	i1l3765
 13934  14FE  3A01               	xorlw	1	; case 1
 13935  14FF  1903               	skipnz
 13936  1500  2D08               	goto	i1l625
 13937  1501  3A03               	xorlw	3	; case 2
 13938  1502  1903               	skipnz
 13939  1503  2CF9               	goto	i1l624
 13940  1504  3A01               	xorlw	1	; case 3
 13941  1505  1903               	skipnz
 13942  1506  2D08               	goto	i1l625
 13943  1507  2D08               	goto	i1l625
 13944  1508                     i1l625:	
 13945  1508  0008               	return
 13946  1509                     __end_of_LED_StateBleAction_OnKeyStateChanged:	
 13947                           
 13948                           	psect	text97
 13949  0430                     __ptext97:	
 13950 ;; *************** function _LED_StateNightAction_OnKeyStateChanged *****************
 13951 ;; Defined at:
 13952 ;;		line 541 in file "src/led.c"
 13953 ;; Parameters:    Size  Location     Type
 13954 ;;  key             1    8[COMMON] unsigned char 
 13955 ;;  state           1    9[COMMON] enum E8014
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  1    wreg      void 
 13960 ;; Registers used:
 13961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13962 ;; Tracked objects:
 13963 ;;		On entry : 1F/2
 13964 ;;		On exit  : 10/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;Total ram usage:        2 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    4
 13974 ;; This function calls:
 13975 ;;		_LED_StateNight_OnKeyPressCont
 13976 ;;		_LED_StateNight_OnKeyPressShort
 13977 ;;		_LED_StateNight_OnKeyRelease
 13978 ;; This function is called by:
 13979 ;;		_LED_Action_OnKeyStateChanged
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           
 13984                           ;psect for function _LED_StateNightAction_OnKeyStateChanged
 13985  0430                     _LED_StateNightAction_OnKeyStateChanged:	
 13986                           
 13987                           ;led.c: 542: if ( key == 0x01 ) {
 13988                           
 13989                           ;incstack = 0
 13990                           ; Regs used in _LED_StateNightAction_OnKeyStateChanged: [wreg-fsr1h+status,2+status,0+pc
      +                          lath+cstack]
 13991  0430  0B78               	decfsz	LED_StateNightAction_OnKeyStateChanged@key,w
 13992  0431  0008               	return
 13993                           
 13994                           ;led.c: 554: break;
 13995  0432  0879               	movf	LED_StateNightAction_OnKeyStateChanged@state,w
 13996                           
 13997                           ; Switch size 1, requested type "space"
 13998                           ; Number of cases is 4, Range of values is 0 to 3
 13999                           ; switch strategies available:
 14000                           ; Name         Instructions Cycles
 14001                           ; simple_byte           13     7 (average)
 14002                           ; direct_byte           14     6 (fixed)
 14003                           ; jumptable            260     6 (fixed)
 14004                           ;	Chosen strategy is simple_byte
 14005  0433  3A00               	xorlw	0	; case 0
 14006  0434  1903               	skipnz
 14007  0435  2C40               	goto	i1l3751
 14008  0436  3A01               	xorlw	1	; case 1
 14009  0437  1903               	skipnz
 14010  0438  2C43               	goto	i1l604
 14011  0439  3A03               	xorlw	3	; case 2
 14012  043A  1903               	skipnz
 14013  043B  2C41               	goto	i1l3753
 14014  043C  3A01               	xorlw	1	; case 3
 14015  043D  1903               	skipnz
 14016  043E  2C42               	goto	i1l3755
 14017  043F  2C43               	goto	i1l609
 14018  0440                     i1l3751:	
 14019                           
 14020                           ;led.c: 545: LED_StateNight_OnKeyPressShort( );
 14021  0440  2DC5               	ljmp	i1l3647
 14022  0441                     i1l3753:	
 14023                           ;led.c: 546: break;
 14024                           
 14025                           
 14026                           ;led.c: 549: LED_StateNight_OnKeyPressCont( );
 14027  0441  2C44               	ljmp	i1l3651
 14028  0442                     i1l3755:	
 14029                           ;led.c: 550: break;
 14030                           
 14031                           
 14032                           ;led.c: 553: LED_StateNight_OnKeyRelease( );
 14033  0442  2DCA               	ljmp	i1l3665
 14034  0443                     i1l604:	
 14035  0443                     i1l609:	
 14036  0443  0008               	return
 14037  0444                     __end_of_LED_StateNightAction_OnKeyStateChanged:	
 14038  0444                     __ptext106:	
 14039 ;; *************** function _LED_StateNight_OnKeyPressCont *****************
 14040 ;; Defined at:
 14041 ;;		line 502 in file "src/led.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;		None
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  1    wreg      void 
 14048 ;; Registers used:
 14049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14050 ;; Tracked objects:
 14051 ;;		On entry : 1F/2
 14052 ;;		On exit  : 14/4
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;Total ram usage:        2 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; Hardware stack levels required when called:    3
 14062 ;; This function calls:
 14063 ;;		i1_LED_UpdateNightBright
 14064 ;; This function is called by:
 14065 ;;		_LED_StateNightAction_OnKeyStateChanged
 14066 ;; This function uses a non-reentrant model
 14067 ;;
 14068                           
 14069                           
 14070                           ;psect for function _LED_StateNight_OnKeyPressCont
 14071  0444                     _LED_StateNight_OnKeyPressCont:	
 14072  0444                     i1l3651:	
 14073                           ;incstack = 0
 14074                           ; Regs used in _LED_StateNight_OnKeyPressCont: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 14075                           
 14076                           
 14077                           ;led.c: 503: if ( gLedRunPara.fNr ) {
 14078  0444  0021               	movlb	1	; select bank1
 14079  0445  1E38               	btfss	_gLedRunPara^(0+128),4	;volatile
 14080  0446  2C5F               	goto	i1l3657
 14081                           
 14082                           ;led.c: 504: if ( gLedPara.tPara.nNightBrt + 10 < 1000 ) {
 14083  0447  0022               	movlb	2	; select bank2
 14084  0448  0855               	movf	(_gLedPara^(0+256)+53),w	;volatile
 14085  0449  3E0A               	addlw	10
 14086  044A  00F6               	movwf	??_LED_StateNight_OnKeyPressCont
 14087  044B  3000               	movlw	0
 14088  044C  3D56               	addwfc	((_gLedPara+1)^(0+256)+53),w	;volatile
 14089  044D  00F7               	movwf	??_LED_StateNight_OnKeyPressCont+1
 14090  044E  3003               	movlw	3
 14091  044F  0277               	subwf	??_LED_StateNight_OnKeyPressCont+1,w
 14092  0450  30E8               	movlw	232
 14093  0451  1903               	skipnz
 14094  0452  0276               	subwf	??_LED_StateNight_OnKeyPressCont,w
 14095  0453  1803               	skipnc
 14096  0454  2C5A               	goto	i1l590
 14097                           
 14098                           ;led.c: 505: gLedPara.tPara.nNightBrt += 10;
 14099  0455  300A               	movlw	10
 14100  0456  07D5               	addwf	(_gLedPara^(0+256)+53),f	;volatile
 14101  0457  1803               	skipnc
 14102  0458  0AD6               	incf	((_gLedPara+1)^(0+256)+53),f	;volatile
 14103                           
 14104                           ;led.c: 506: } else {
 14105  0459  2C6E               	goto	i1l3663
 14106  045A                     i1l590:	
 14107                           
 14108                           ;led.c: 507: gLedPara.tPara.nNightBrt = 1000;
 14109  045A  3003               	movlw	3
 14110  045B  00D6               	movwf	((_gLedPara+1)^(0+256)+53)	;volatile
 14111  045C  30E8               	movlw	232
 14112  045D  00D5               	movwf	(_gLedPara^(0+256)+53)	;volatile
 14113  045E  2C6E               	goto	i1l3663
 14114  045F                     i1l3657:	
 14115                           
 14116                           ;led.c: 510: if ( gLedPara.tPara.nNightBrt > 10 + 10 ) {
 14117  045F  3000               	movlw	0
 14118  0460  0022               	movlb	2	; select bank2
 14119  0461  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14120  0462  3015               	movlw	21
 14121  0463  1903               	skipnz
 14122  0464  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
 14123                           
 14124                           ;led.c: 511: gLedPara.tPara.nNightBrt -= 10;
 14125  0465  300A               	movlw	10
 14126  0466  1C03               	skipc
 14127  0467  2C6C               	goto	L14
 14128  0468  02D5               	subwf	(_gLedPara^(0+256)+53),f	;volatile
 14129  0469  3000               	movlw	0
 14130  046A  3BD6               	subwfb	((_gLedPara+1)^(0+256)+53),f	;volatile
 14131                           
 14132                           ;led.c: 512: } else {
 14133  046B  2C6E               	goto	i1l3663
 14134  046C                     L14:	
 14135                           ;led.c: 513: gLedPara.tPara.nNightBrt = 10;
 14136                           
 14137  046C  00D5               	movwf	(_gLedPara^(0+256)+53)	;volatile
 14138  046D  01D6               	clrf	((_gLedPara+1)^(0+256)+53)	;volatile
 14139  046E                     i1l3663:	
 14140                           
 14141                           ;led.c: 514: }
 14142                           ;led.c: 515: }
 14143                           ;led.c: 516: LED_UpdateNightBright( );
 14144  046E  24B7               	fcall	i1_LED_UpdateNightBright
 14145  046F  0008               	return
 14146  0470                     __end_of_LED_StateNight_OnKeyPressCont:	
 14147  0470                     __ptext98:	
 14148 ;; *************** function _LED_StateDayAction_OnKeyStateChanged *****************
 14149 ;; Defined at:
 14150 ;;		line 456 in file "src/led.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;  key             1    8[COMMON] unsigned char 
 14153 ;;  state           1    9[COMMON] enum E8014
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;		None
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      void 
 14158 ;; Registers used:
 14159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14160 ;; Tracked objects:
 14161 ;;		On entry : 1F/2
 14162 ;;		On exit  : 10/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;Total ram usage:        2 bytes
 14170 ;; Hardware stack levels used:    1
 14171 ;; Hardware stack levels required when called:    4
 14172 ;; This function calls:
 14173 ;;		_LED_StateDay_OnKeyPressCont
 14174 ;;		_LED_StateDay_OnKeyPressShort
 14175 ;;		_LED_StateDay_OnKeyRelease
 14176 ;; This function is called by:
 14177 ;;		_LED_Action_OnKeyStateChanged
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           
 14182                           ;psect for function _LED_StateDayAction_OnKeyStateChanged
 14183  0470                     _LED_StateDayAction_OnKeyStateChanged:	
 14184                           
 14185                           ;led.c: 457: if ( key == 0x01 ) {
 14186                           
 14187                           ;incstack = 0
 14188                           ; Regs used in _LED_StateDayAction_OnKeyStateChanged: [wreg-fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14189  0470  0B78               	decfsz	LED_StateDayAction_OnKeyStateChanged@key,w
 14190  0471  0008               	return
 14191                           
 14192                           ;led.c: 469: break;
 14193  0472  0879               	movf	LED_StateDayAction_OnKeyStateChanged@state,w
 14194                           
 14195                           ; Switch size 1, requested type "space"
 14196                           ; Number of cases is 4, Range of values is 0 to 3
 14197                           ; switch strategies available:
 14198                           ; Name         Instructions Cycles
 14199                           ; simple_byte           13     7 (average)
 14200                           ; direct_byte           14     6 (fixed)
 14201                           ; jumptable            260     6 (fixed)
 14202                           ;	Chosen strategy is simple_byte
 14203  0473  3A00               	xorlw	0	; case 0
 14204  0474  1903               	skipnz
 14205  0475  2C80               	goto	i1l3737
 14206  0476  3A01               	xorlw	1	; case 1
 14207  0477  1903               	skipnz
 14208  0478  2C83               	goto	i1l578
 14209  0479  3A03               	xorlw	3	; case 2
 14210  047A  1903               	skipnz
 14211  047B  2C81               	goto	i1l3739
 14212  047C  3A01               	xorlw	1	; case 3
 14213  047D  1903               	skipnz
 14214  047E  2C82               	goto	i1l3741
 14215  047F  2C83               	goto	i1l583
 14216  0480                     i1l3737:	
 14217                           
 14218                           ;led.c: 460: LED_StateDay_OnKeyPressShort( );
 14219  0480  2CB0               	ljmp	i1l3625
 14220  0481                     i1l3739:	
 14221                           ;led.c: 461: break;
 14222                           
 14223                           
 14224                           ;led.c: 464: LED_StateDay_OnKeyPressCont( );
 14225  0481  2C84               	ljmp	i1l3631
 14226  0482                     i1l3741:	
 14227                           ;led.c: 465: break;
 14228                           
 14229                           
 14230                           ;led.c: 468: LED_StateDay_OnKeyRelease( );
 14231  0482  2DC3               	ljmp	i1l3645
 14232  0483                     i1l578:	
 14233  0483                     i1l583:	
 14234  0483  0008               	return
 14235  0484                     __end_of_LED_StateDayAction_OnKeyStateChanged:	
 14236  0484                     __ptext113:	
 14237 ;; *************** function _LED_StateDay_OnKeyPressCont *****************
 14238 ;; Defined at:
 14239 ;;		line 417 in file "src/led.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  1    wreg      void 
 14246 ;; Registers used:
 14247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14248 ;; Tracked objects:
 14249 ;;		On entry : 1F/2
 14250 ;;		On exit  : 14/4
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;Total ram usage:        2 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:    3
 14260 ;; This function calls:
 14261 ;;		i1_LED_UpdateDayBright
 14262 ;; This function is called by:
 14263 ;;		_LED_StateDayAction_OnKeyStateChanged
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           
 14268                           ;psect for function _LED_StateDay_OnKeyPressCont
 14269  0484                     _LED_StateDay_OnKeyPressCont:	
 14270  0484                     i1l3631:	
 14271                           ;incstack = 0
 14272                           ; Regs used in _LED_StateDay_OnKeyPressCont: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14273                           
 14274                           
 14275                           ;led.c: 418: if ( gLedRunPara.fDr ) {
 14276  0484  0021               	movlb	1	; select bank1
 14277  0485  1DB8               	btfss	_gLedRunPara^(0+128),3	;volatile
 14278  0486  2C9F               	goto	i1l3637
 14279                           
 14280                           ;led.c: 419: if ( gLedPara.tPara.nDayBrt + 10 < 1000 ) {
 14281  0487  0022               	movlb	2	; select bank2
 14282  0488  0853               	movf	(_gLedPara^(0+256)+51),w	;volatile
 14283  0489  3E0A               	addlw	10
 14284  048A  00F6               	movwf	??_LED_StateDay_OnKeyPressCont
 14285  048B  3000               	movlw	0
 14286  048C  3D54               	addwfc	((_gLedPara+1)^(0+256)+51),w	;volatile
 14287  048D  00F7               	movwf	??_LED_StateDay_OnKeyPressCont+1
 14288  048E  3003               	movlw	3
 14289  048F  0277               	subwf	??_LED_StateDay_OnKeyPressCont+1,w
 14290  0490  30E8               	movlw	232
 14291  0491  1903               	skipnz
 14292  0492  0276               	subwf	??_LED_StateDay_OnKeyPressCont,w
 14293  0493  1803               	skipnc
 14294  0494  2C9A               	goto	i1l564
 14295                           
 14296                           ;led.c: 420: gLedPara.tPara.nDayBrt += 10;
 14297  0495  300A               	movlw	10
 14298  0496  07D3               	addwf	(_gLedPara^(0+256)+51),f	;volatile
 14299  0497  1803               	skipnc
 14300  0498  0AD4               	incf	((_gLedPara+1)^(0+256)+51),f	;volatile
 14301                           
 14302                           ;led.c: 421: } else {
 14303  0499  2CAE               	goto	i1l3643
 14304  049A                     i1l564:	
 14305                           
 14306                           ;led.c: 422: gLedPara.tPara.nDayBrt = 1000;
 14307  049A  3003               	movlw	3
 14308  049B  00D4               	movwf	((_gLedPara+1)^(0+256)+51)	;volatile
 14309  049C  30E8               	movlw	232
 14310  049D  00D3               	movwf	(_gLedPara^(0+256)+51)	;volatile
 14311  049E  2CAE               	goto	i1l3643
 14312  049F                     i1l3637:	
 14313                           
 14314                           ;led.c: 425: if ( gLedPara.tPara.nDayBrt > 10 + 10 ) {
 14315  049F  3000               	movlw	0
 14316  04A0  0022               	movlb	2	; select bank2
 14317  04A1  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14318  04A2  3015               	movlw	21
 14319  04A3  1903               	skipnz
 14320  04A4  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 14321                           
 14322                           ;led.c: 426: gLedPara.tPara.nDayBrt -= 10;
 14323  04A5  300A               	movlw	10
 14324  04A6  1C03               	skipc
 14325  04A7  2CAC               	goto	L15
 14326  04A8  02D3               	subwf	(_gLedPara^(0+256)+51),f	;volatile
 14327  04A9  3000               	movlw	0
 14328  04AA  3BD4               	subwfb	((_gLedPara+1)^(0+256)+51),f	;volatile
 14329                           
 14330                           ;led.c: 427: } else {
 14331  04AB  2CAE               	goto	i1l3643
 14332  04AC                     L15:	
 14333                           ;led.c: 428: gLedPara.tPara.nDayBrt = 10;
 14334                           
 14335  04AC  00D3               	movwf	(_gLedPara^(0+256)+51)	;volatile
 14336  04AD  01D4               	clrf	((_gLedPara+1)^(0+256)+51)	;volatile
 14337  04AE                     i1l3643:	
 14338                           
 14339                           ;led.c: 429: }
 14340                           ;led.c: 430: }
 14341                           ;led.c: 431: LED_UpdateDayBright( );
 14342  04AE  2526               	fcall	i1_LED_UpdateDayBright
 14343  04AF  0008               	return
 14344  04B0                     __end_of_LED_StateDay_OnKeyPressCont:	
 14345  04B0                     __ptext109:	
 14346 ;; *************** function _LED_StateDay_OnKeyPressShort *****************
 14347 ;; Defined at:
 14348 ;;		line 401 in file "src/led.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 1F/2
 14359 ;;		On exit  : 1C/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:        0 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    3
 14369 ;; This function calls:
 14370 ;;		i1_LED_IndicateNight
 14371 ;;		i1_LED_UpdateNightBright
 14372 ;;		i1_LED_UpdateNightRiseStatus
 14373 ;; This function is called by:
 14374 ;;		_LED_StateDayAction_OnKeyStateChanged
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           
 14379                           ;psect for function _LED_StateDay_OnKeyPressShort
 14380  04B0                     _LED_StateDay_OnKeyPressShort:	
 14381  04B0                     i1l3625:	
 14382                           ;incstack = 0
 14383                           ; Regs used in _LED_StateDay_OnKeyPressShort: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 14384                           
 14385                           
 14386                           ;led.c: 403: LED_UpdateNightBright( );
 14387  04B0  24B7  3184         	fcall	i1_LED_UpdateNightBright
 14388                           
 14389                           ;led.c: 404: LED_IndicateNight( );
 14390  04B2  24B6  3184         	fcall	i1_LED_IndicateNight
 14391                           
 14392                           ;led.c: 405: LED_UpdateNightRiseStatus( );
 14393  04B4  24EF               	fcall	i1_LED_UpdateNightRiseStatus
 14394  04B5  0008               	return
 14395  04B6                     __end_of_LED_StateDay_OnKeyPressShort:	
 14396  04B6                     __ptext112:	
 14397 ;; *************** function i1_LED_IndicateNight *****************
 14398 ;; Defined at:
 14399 ;;		line 271 in file "src/led.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;		None
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      void 
 14406 ;; Registers used:
 14407 ;;		wreg, status,2, status,0
 14408 ;; Tracked objects:
 14409 ;;		On entry : 14/6
 14410 ;;		On exit  : 1F/2
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; This function calls:
 14420 ;;		Nothing
 14421 ;; This function is called by:
 14422 ;;		_LED_StateDay_OnKeyPressShort
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           
 14426                           
 14427                           ;psect for function i1_LED_IndicateNight
 14428  04B6                     i1_LED_IndicateNight:	
 14429                           
 14430                           ;led.c: 272: gLedPara.fSta = 2;
 14431                           
 14432                           ;incstack = 0
 14433                           ; Regs used in i1_LED_IndicateNight: [wreg+status,2+status,0]
 14434  04B6  2DE7               	ljmp	PL22	;call to abstracted procedure
 14435  04B7                     __end_ofi1_LED_IndicateNight:	
 14436  04B7                     __ptext111:	
 14437 ;; *************** function i1_LED_UpdateNightBright *****************
 14438 ;; Defined at:
 14439 ;;		line 304 in file "src/led.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;		None
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  LED_UpdateNi    1    5[COMMON] unsigned char 
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      void 
 14446 ;; Registers used:
 14447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14448 ;; Tracked objects:
 14449 ;;		On entry : 1F/2
 14450 ;;		On exit  : 14/4
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;Total ram usage:        1 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    2
 14460 ;; This function calls:
 14461 ;;		i1_LED_UpdatePWM
 14462 ;; This function is called by:
 14463 ;;		_LED_StateDay_OnKeyPressShort
 14464 ;;		_LED_StateNight_OnKeyPressCont
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           
 14469                           ;psect for function i1_LED_UpdateNightBright
 14470  04B7                     i1_LED_UpdateNightBright:	
 14471                           
 14472                           ;led.c: 305: for ( uint8_t i = 0; i < 5; i++ ) {
 14473                           
 14474                           ;incstack = 0
 14475                           ; Regs used in i1_LED_UpdateNightBright: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14476  04B7  01F5               	clrf	i1LED_UpdateNightBright@i
 14477  04B8                     i1l3541:	
 14478                           
 14479                           ;led.c: 306: if ( i == 1 ) {
 14480  04B8  0B75               	decfsz	i1LED_UpdateNightBright@i,w
 14481  04B9  2CD3               	goto	i1l3545
 14482                           
 14483                           ;led.c: 307: gLedPara.mPara.manualPara.nBrt[i] = gLedPara.tPara.nNightBrt;
 14484  04BA  3575               	lslf	i1LED_UpdateNightBright@i,w
 14485  04BB  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
 14486  04BC  0086               	movwf	6
 14487  04BD  3001               	movlw	1	; select bank2/3
 14488  04BE  0087               	movwf	7
 14489  04BF  0855               	movf	(_gLedPara^(0+256)+53),w	;volatile
 14490  04C0  3FC0               	movwi [0]fsr1
 14491  04C1  0856               	movf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14492  04C2  3FC1               	movwi [1]fsr1
 14493                           
 14494                           ;led.c: 308: gLedRunPara.nTargetBrt[i] = gLedPara.tPara.nNightBrt;
 14495  04C3  3575               	lslf	i1LED_UpdateNightBright@i,w
 14496  04C4  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 14497  04C5  0086               	movwf	6
 14498  04C6  0187               	clrf	7
 14499  04C7  0855               	movf	(_gLedPara^(0+256)+53),w	;volatile
 14500  04C8  3FC0               	movwi [0]fsr1
 14501  04C9  0856               	movf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14502  04CA  3FC1               	movwi [1]fsr1
 14503                           
 14504                           ;led.c: 309: gLedRunPara.nCurrentBrt[i] = gLedPara.tPara.nNightBrt;
 14505  04CB  3575               	lslf	i1LED_UpdateNightBright@i,w
 14506  04CC  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 14507  04CD  0086               	movwf	6
 14508  04CE  0855               	movf	(_gLedPara^(0+256)+53),w	;volatile
 14509  04CF  3FC0               	movwi [0]fsr1
 14510  04D0  0856               	movf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14511  04D1  3FC1               	movwi [1]fsr1
 14512                           
 14513                           ;led.c: 310: } else {
 14514  04D2  2CE8               	goto	i1l3547
 14515  04D3                     i1l3545:	
 14516                           
 14517                           ;led.c: 311: gLedPara.mPara.manualPara.nBrt[i] = 0;
 14518  04D3  3575               	lslf	i1LED_UpdateNightBright@i,w
 14519  04D4  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
 14520  04D5  0086               	movwf	6
 14521  04D6  3001               	movlw	1	; select bank2/3
 14522  04D7  0087               	movwf	7
 14523  04D8  3000               	movlw	0
 14524  04D9  3FC0               	movwi [0]fsr1
 14525  04DA  3FC1               	movwi [1]fsr1
 14526                           
 14527                           ;led.c: 312: gLedRunPara.nTargetBrt[i] = 0;
 14528  04DB  3575               	lslf	i1LED_UpdateNightBright@i,w
 14529  04DC  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 14530  04DD  0086               	movwf	6
 14531  04DE  3000               	movlw	0
 14532  04DF  0187               	clrf	7
 14533  04E0  3FC0               	movwi [0]fsr1
 14534  04E1  3FC1               	movwi [1]fsr1
 14535                           
 14536                           ;led.c: 313: gLedRunPara.nCurrentBrt[i] = 0;
 14537  04E2  3575               	lslf	i1LED_UpdateNightBright@i,w
 14538  04E3  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 14539  04E4  0086               	movwf	6
 14540  04E5  3000               	movlw	0
 14541  04E6  3FC0               	movwi [0]fsr1
 14542  04E7  3FC1               	movwi [1]fsr1
 14543  04E8                     i1l3547:	
 14544  04E8  3005               	movlw	5
 14545  04E9  0AF5               	incf	i1LED_UpdateNightBright@i,f
 14546  04EA  0275               	subwf	i1LED_UpdateNightBright@i,w
 14547  04EB  1C03               	skipc
 14548  04EC  2CB8               	goto	i1l3541
 14549                           
 14550                           ;led.c: 314: }
 14551                           ;led.c: 315: }
 14552                           ;led.c: 316: LED_UpdatePWM( );
 14553  04ED  25AB               	fcall	i1_LED_UpdatePWM
 14554  04EE  0008               	return
 14555  04EF                     __end_ofi1_LED_UpdateNightBright:	
 14556  04EF                     __ptext110:	
 14557 ;; *************** function i1_LED_UpdateNightRiseStatus *****************
 14558 ;; Defined at:
 14559 ;;		line 319 in file "src/led.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;		None
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;		None
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		wreg
 14568 ;; Tracked objects:
 14569 ;;		On entry : 1F/2
 14570 ;;		On exit  : 1C/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;Total ram usage:        0 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_LED_StateDay_OnKeyPressShort
 14583 ;;		_LED_StateNight_OnKeyRelease
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           
 14587                           
 14588                           ;psect for function i1_LED_UpdateNightRiseStatus
 14589  04EF                     i1_LED_UpdateNightRiseStatus:	
 14590                           
 14591                           ;led.c: 320: if ( gLedPara.tPara.nNightBrt > 1000 - 200 ) {
 14592                           
 14593                           ;incstack = 0
 14594                           ; Regs used in i1_LED_UpdateNightRiseStatus: [wreg]
 14595  04EF  3003               	movlw	3
 14596  04F0  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14597  04F1  3021               	movlw	33
 14598  04F2  1903               	skipnz
 14599  04F3  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
 14600  04F4  1C03               	skipc
 14601  04F5  2CF9               	goto	i1l3557
 14602                           
 14603                           ;led.c: 321: gLedRunPara.fNr = 0;
 14604  04F6  0021               	movlb	1	; select bank1
 14605  04F7  1238               	bcf	_gLedRunPara^(0+128),4	;volatile
 14606                           
 14607                           ;led.c: 322: } else if ( gLedPara.tPara.nNightBrt < 200 ) {
 14608  04F8  0008               	return
 14609  04F9                     i1l3557:	
 14610  04F9  3000               	movlw	0
 14611  04FA  0256               	subwf	((_gLedPara+1)^(0+256)+53),w	;volatile
 14612  04FB  30C8               	movlw	200
 14613  04FC  1903               	skipnz
 14614  04FD  0255               	subwf	(_gLedPara^(0+256)+53),w	;volatile
 14615  04FE  1803               	skipnc
 14616  04FF  0008               	return
 14617                           
 14618                           ;led.c: 323: gLedRunPara.fNr = 1;
 14619  0500  0021               	movlb	1	; select bank1
 14620  0501  1638               	bsf	_gLedRunPara^(0+128),4	;volatile
 14621  0502  0008               	return
 14622  0503                     __end_ofi1_LED_UpdateNightRiseStatus:	
 14623  0503                     __ptext99:	
 14624 ;; *************** function _LED_StateOffAction_OnKeyStateChanged *****************
 14625 ;; Defined at:
 14626 ;;		line 373 in file "src/led.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  key             1    8[COMMON] unsigned char 
 14629 ;;  state           1    9[COMMON] enum E8014
 14630 ;; Auto vars:     Size  Location     Type
 14631 ;;		None
 14632 ;; Return value:  Size  Location     Type
 14633 ;;                  1    wreg      void 
 14634 ;; Registers used:
 14635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14636 ;; Tracked objects:
 14637 ;;		On entry : 1F/2
 14638 ;;		On exit  : 1C/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;Total ram usage:        2 bytes
 14646 ;; Hardware stack levels used:    1
 14647 ;; Hardware stack levels required when called:    4
 14648 ;; This function calls:
 14649 ;;		_LED_StateOffAction_OnKeyPressCont
 14650 ;;		_LED_StateOffAction_OnKeyPressShort
 14651 ;; This function is called by:
 14652 ;;		_LED_Action_OnKeyStateChanged
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           
 14657                           ;psect for function _LED_StateOffAction_OnKeyStateChanged
 14658  0503                     _LED_StateOffAction_OnKeyStateChanged:	
 14659                           
 14660                           ;led.c: 374: if ( key == 0x01 ) {
 14661                           
 14662                           ;incstack = 0
 14663                           ; Regs used in _LED_StateOffAction_OnKeyStateChanged: [wreg-fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14664  0503  0B78               	decfsz	LED_StateOffAction_OnKeyStateChanged@key,w
 14665  0504  0008               	return
 14666                           
 14667                           ;led.c: 382: break;
 14668  0505  0879               	movf	LED_StateOffAction_OnKeyStateChanged@state,w
 14669                           
 14670                           ; Switch size 1, requested type "space"
 14671                           ; Number of cases is 4, Range of values is 0 to 3
 14672                           ; switch strategies available:
 14673                           ; Name         Instructions Cycles
 14674                           ; simple_byte           13     7 (average)
 14675                           ; direct_byte           14     6 (fixed)
 14676                           ; jumptable            260     6 (fixed)
 14677                           ;	Chosen strategy is simple_byte
 14678  0506  3A00               	xorlw	0	; case 0
 14679  0507  1903               	skipnz
 14680  0508  2D13               	goto	i1l3725
 14681  0509  3A01               	xorlw	1	; case 1
 14682  050A  1903               	skipnz
 14683  050B  2D15               	goto	i1l557
 14684  050C  3A03               	xorlw	3	; case 2
 14685  050D  1903               	skipnz
 14686  050E  2D14               	goto	i1l3727
 14687  050F  3A01               	xorlw	1	; case 3
 14688  0510  1903               	skipnz
 14689  0511  2D15               	goto	i1l552
 14690  0512  2D15               	goto	i1l557
 14691  0513                     i1l3725:	
 14692                           
 14693                           ;led.c: 377: LED_StateOffAction_OnKeyPressShort( );
 14694  0513  2D16               	ljmp	i1l3611
 14695  0514                     i1l3727:	
 14696                           ;led.c: 378: break;
 14697                           
 14698                           
 14699                           ;led.c: 381: LED_StateOffAction_OnKeyPressCont( );
 14700  0514  2D1D               	ljmp	i1l3617
 14701  0515                     i1l552:	
 14702  0515                     i1l557:	
 14703  0515  0008               	return
 14704  0516                     __end_of_LED_StateOffAction_OnKeyStateChanged:	
 14705  0516                     __ptext100:	
 14706 ;; *************** function _LED_StateOffAction_OnKeyPressShort *****************
 14707 ;; Defined at:
 14708 ;;		line 340 in file "src/led.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;		None
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;		None
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      void 
 14715 ;; Registers used:
 14716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 1F/2
 14719 ;;		On exit  : 1C/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;Total ram usage:        0 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:    3
 14729 ;; This function calls:
 14730 ;;		i1_LED_IndicateDay
 14731 ;;		i1_LED_UpdateDayBright
 14732 ;;		i1_LED_UpdateDayRiseStatus
 14733 ;; This function is called by:
 14734 ;;		_LED_StateOffAction_OnKeyStateChanged
 14735 ;; This function uses a non-reentrant model
 14736 ;;
 14737                           
 14738                           
 14739                           ;psect for function _LED_StateOffAction_OnKeyPressShort
 14740  0516                     _LED_StateOffAction_OnKeyPressShort:	
 14741  0516                     i1l3611:	
 14742                           ;incstack = 0
 14743                           ; Regs used in _LED_StateOffAction_OnKeyPressShort: [wreg+fsr1l+fsr1h+status,2+status,0+
      +                          pclath+cstack]
 14744                           
 14745                           
 14746                           ;led.c: 342: LED_UpdateDayBright( );
 14747  0516  2526  3184         	fcall	i1_LED_UpdateDayBright
 14748                           
 14749                           ;led.c: 343: LED_IndicateDay( );
 14750  0518  251C  3184         	fcall	i1_LED_IndicateDay
 14751                           
 14752                           ;led.c: 344: LED_UpdateDayRiseStatus( );
 14753  051A  2547               	fcall	i1_LED_UpdateDayRiseStatus
 14754  051B  0008               	return
 14755  051C                     __end_of_LED_StateOffAction_OnKeyPressShort:	
 14756  051C                     __ptext102:	
 14757 ;; *************** function i1_LED_IndicateDay *****************
 14758 ;; Defined at:
 14759 ;;		line 262 in file "src/led.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;		None
 14762 ;; Auto vars:     Size  Location     Type
 14763 ;;		None
 14764 ;; Return value:  Size  Location     Type
 14765 ;;                  1    wreg      void 
 14766 ;; Registers used:
 14767 ;;		wreg, status,2, status,0
 14768 ;; Tracked objects:
 14769 ;;		On entry : 14/6
 14770 ;;		On exit  : 1F/2
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14777 ;;Total ram usage:        0 bytes
 14778 ;; Hardware stack levels used:    1
 14779 ;; This function calls:
 14780 ;;		Nothing
 14781 ;; This function is called by:
 14782 ;;		_LED_StateOffAction_OnKeyPressShort
 14783 ;;		_LED_StateOffAction_OnKeyPressCont
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           
 14788                           ;psect for function i1_LED_IndicateDay
 14789  051C                     i1_LED_IndicateDay:	
 14790                           
 14791                           ;led.c: 263: gLedPara.fSta = 1;
 14792                           
 14793                           ;incstack = 0
 14794                           ; Regs used in i1_LED_IndicateDay: [wreg+status,2+status,0]
 14795  051C  2DDE               	ljmp	PL18	;call to abstracted procedure
 14796  051D                     __end_ofi1_LED_IndicateDay:	
 14797  051D                     __ptext101:	
 14798 ;; *************** function _LED_StateOffAction_OnKeyPressCont *****************
 14799 ;; Defined at:
 14800 ;;		line 356 in file "src/led.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;		None
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;		None
 14805 ;; Return value:  Size  Location     Type
 14806 ;;                  1    wreg      void 
 14807 ;; Registers used:
 14808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14809 ;; Tracked objects:
 14810 ;;		On entry : 1F/2
 14811 ;;		On exit  : 1F/2
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;Total ram usage:        0 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:    3
 14821 ;; This function calls:
 14822 ;;		i1_LED_IndicateDay
 14823 ;;		i1_LED_UpdateDayBright
 14824 ;; This function is called by:
 14825 ;;		_LED_StateOffAction_OnKeyStateChanged
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           
 14830                           ;psect for function _LED_StateOffAction_OnKeyPressCont
 14831  051D                     _LED_StateOffAction_OnKeyPressCont:	
 14832  051D                     i1l3617:	
 14833                           ;incstack = 0
 14834                           ; Regs used in _LED_StateOffAction_OnKeyPressCont: [wreg+fsr1l+fsr1h+status,2+status,0+p
      +                          clath+cstack]
 14835                           
 14836                           
 14837                           ;led.c: 357: gLedPara.tPara.nDayBrt = 10;
 14838  051D  300A               	movlw	10
 14839  051E  00D3               	movwf	(_gLedPara^(0+256)+51)	;volatile
 14840  051F  01D4               	clrf	((_gLedPara+1)^(0+256)+51)	;volatile
 14841                           
 14842                           ;led.c: 359: gLedRunPara.fDr = 1;
 14843  0520  0021               	movlb	1	; select bank1
 14844  0521  15B8               	bsf	_gLedRunPara^(0+128),3	;volatile
 14845                           
 14846                           ;led.c: 360: LED_UpdateDayBright( );
 14847  0522  2526  3184         	fcall	i1_LED_UpdateDayBright
 14848                           
 14849                           ;led.c: 361: LED_IndicateDay( );
 14850  0524  251C               	fcall	i1_LED_IndicateDay
 14851  0525  0008               	return
 14852  0526                     __end_of_LED_StateOffAction_OnKeyPressCont:	
 14853  0526                     __ptext114:	
 14854 ;; *************** function i1_LED_UpdateDayBright *****************
 14855 ;; Defined at:
 14856 ;;		line 287 in file "src/led.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;		None
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  LED_UpdateDa    1    5[COMMON] unsigned char 
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14865 ;; Tracked objects:
 14866 ;;		On entry : 1C/2
 14867 ;;		On exit  : 14/4
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;Total ram usage:        1 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    2
 14877 ;; This function calls:
 14878 ;;		i1_LED_UpdatePWM
 14879 ;; This function is called by:
 14880 ;;		_LED_StateOffAction_OnKeyPressShort
 14881 ;;		_LED_StateOffAction_OnKeyPressCont
 14882 ;;		_LED_StateDay_OnKeyPressCont
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           
 14887                           ;psect for function i1_LED_UpdateDayBright
 14888  0526                     i1_LED_UpdateDayBright:	
 14889                           
 14890                           ;led.c: 288: for ( uint8_t i = 0; i < 5; i++ ) {
 14891                           
 14892                           ;incstack = 0
 14893                           ; Regs used in i1_LED_UpdateDayBright: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14894  0526  01F5               	clrf	i1LED_UpdateDayBright@i
 14895  0527                     i1l3519:	
 14896                           
 14897                           ;led.c: 289: gLedPara.mPara.manualPara.nBrt[i] = gLedPara.tPara.nDayBrt;
 14898  0527  3575               	lslf	i1LED_UpdateDayBright@i,w
 14899  0528  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
 14900  0529  0086               	movwf	6
 14901  052A  3001               	movlw	1	; select bank2/3
 14902  052B  0087               	movwf	7
 14903  052C  0022               	movlb	2	; select bank2
 14904  052D  0853               	movf	(_gLedPara^(0+256)+51),w	;volatile
 14905  052E  3FC0               	movwi [0]fsr1
 14906  052F  0854               	movf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14907  0530  3FC1               	movwi [1]fsr1
 14908                           
 14909                           ;led.c: 290: gLedRunPara.nTargetBrt[i] = gLedPara.tPara.nDayBrt;
 14910  0531  3575               	lslf	i1LED_UpdateDayBright@i,w
 14911  0532  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 14912  0533  0086               	movwf	6
 14913  0534  0187               	clrf	7
 14914  0535  0853               	movf	(_gLedPara^(0+256)+51),w	;volatile
 14915  0536  3FC0               	movwi [0]fsr1
 14916  0537  0854               	movf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14917  0538  3FC1               	movwi [1]fsr1
 14918                           
 14919                           ;led.c: 291: gLedRunPara.nCurrentBrt[i] = gLedPara.tPara.nDayBrt;
 14920  0539  3575               	lslf	i1LED_UpdateDayBright@i,w
 14921  053A  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 14922  053B  0086               	movwf	6
 14923  053C  0853               	movf	(_gLedPara^(0+256)+51),w	;volatile
 14924  053D  3FC0               	movwi [0]fsr1
 14925  053E  0854               	movf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14926  053F  3FC1               	movwi [1]fsr1
 14927  0540  3005               	movlw	5
 14928  0541  0AF5               	incf	i1LED_UpdateDayBright@i,f
 14929  0542  0275               	subwf	i1LED_UpdateDayBright@i,w
 14930  0543  1C03               	skipc
 14931  0544  2D27               	goto	i1l3519
 14932                           
 14933                           ;led.c: 292: }
 14934                           ;led.c: 293: LED_UpdatePWM( );
 14935  0545  25AB               	fcall	i1_LED_UpdatePWM
 14936  0546  0008               	return
 14937  0547                     __end_ofi1_LED_UpdateDayBright:	
 14938  0547                     __ptext108:	
 14939 ;; *************** function i1_LED_UpdateDayRiseStatus *****************
 14940 ;; Defined at:
 14941 ;;		line 296 in file "src/led.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;		None
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  1    wreg      void 
 14948 ;; Registers used:
 14949 ;;		wreg
 14950 ;; Tracked objects:
 14951 ;;		On entry : 1F/2
 14952 ;;		On exit  : 1C/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14959 ;;Total ram usage:        0 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; This function calls:
 14962 ;;		Nothing
 14963 ;; This function is called by:
 14964 ;;		_LED_StateOffAction_OnKeyPressShort
 14965 ;;		_LED_StateDay_OnKeyRelease
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969                           
 14970                           ;psect for function i1_LED_UpdateDayRiseStatus
 14971  0547                     i1_LED_UpdateDayRiseStatus:	
 14972                           
 14973                           ;led.c: 297: if ( gLedPara.tPara.nDayBrt > 1000 - 200 ) {
 14974                           
 14975                           ;incstack = 0
 14976                           ; Regs used in i1_LED_UpdateDayRiseStatus: [wreg]
 14977  0547  3003               	movlw	3
 14978  0548  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14979  0549  3021               	movlw	33
 14980  054A  1903               	skipnz
 14981  054B  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 14982  054C  1C03               	skipc
 14983  054D  2D51               	goto	i1l3531
 14984                           
 14985                           ;led.c: 298: gLedRunPara.fDr = 0;
 14986  054E  0021               	movlb	1	; select bank1
 14987  054F  11B8               	bcf	_gLedRunPara^(0+128),3	;volatile
 14988                           
 14989                           ;led.c: 299: } else if ( gLedPara.tPara.nDayBrt < 200 ) {
 14990  0550  0008               	return
 14991  0551                     i1l3531:	
 14992  0551  3000               	movlw	0
 14993  0552  0254               	subwf	((_gLedPara+1)^(0+256)+51),w	;volatile
 14994  0553  30C8               	movlw	200
 14995  0554  1903               	skipnz
 14996  0555  0253               	subwf	(_gLedPara^(0+256)+51),w	;volatile
 14997  0556  1803               	skipnc
 14998  0557  0008               	return
 14999                           
 15000                           ;led.c: 300: gLedRunPara.fDr = 1;
 15001  0558  0021               	movlb	1	; select bank1
 15002  0559  15B8               	bsf	_gLedRunPara^(0+128),3	;volatile
 15003  055A  0008               	return
 15004  055B                     __end_ofi1_LED_UpdateDayRiseStatus:	
 15005  055B                     __ptext93:	
 15006 ;; *************** function _LED_UpdateBrightRamp *****************
 15007 ;; Defined at:
 15008 ;;		line 110 in file "src/led.c"
 15009 ;; Parameters:    Size  Location     Type
 15010 ;;		None
 15011 ;; Auto vars:     Size  Location     Type
 15012 ;;  i               1   11[COMMON] unsigned char 
 15013 ;; Return value:  Size  Location     Type
 15014 ;;                  1    wreg      void 
 15015 ;; Registers used:
 15016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15017 ;; Tracked objects:
 15018 ;;		On entry : 1E/1
 15019 ;;		On exit  : 10/0
 15020 ;;		Unchanged: 0/0
 15021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15026 ;;Total ram usage:        7 bytes
 15027 ;; Hardware stack levels used:    1
 15028 ;; Hardware stack levels required when called:    2
 15029 ;; This function calls:
 15030 ;;		i1_LED_UpdatePWM
 15031 ;; This function is called by:
 15032 ;;		_TMR2_InterruptCallback
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036                           
 15037                           ;psect for function _LED_UpdateBrightRamp
 15038  055B                     _LED_UpdateBrightRamp:	
 15039  055B                     i1l4015:	
 15040                           ;incstack = 0
 15041                           ; Regs used in _LED_UpdateBrightRamp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15042                           
 15043                           
 15044                           ;led.c: 111: if ( gLedRunPara.find || gLedRunPara.fPrev || gLedPara.fAuto ) {
 15045  055B  0021               	movlb	1	; select bank1
 15046  055C  1C38               	btfss	_gLedRunPara^(0+128),0	;volatile
 15047  055D  1938               	btfsc	_gLedRunPara^(0+128),2	;volatile
 15048  055E  0008               	return
 15049  055F  0022               	movlb	2	; select bank2
 15050  0560  1820               	btfsc	_gLedPara^(0+256),0	;volatile
 15051  0561  0008               	return
 15052                           
 15053                           ;led.c: 113: }
 15054                           ;led.c: 114: if ( gLedPara.fSta == 3 ) {
 15055  0562  0C20               	rrf	_gLedPara^(0+256),w	;volatile
 15056  0563  3903               	andlw	3
 15057  0564  3A03               	xorlw	3
 15058  0565  1D03               	skipz
 15059  0566  0008               	return
 15060                           
 15061                           ;led.c: 115: for ( uint8_t i = 0; i < 5; i++ ) {
 15062  0567  01FB               	clrf	LED_UpdateBrightRamp@i
 15063  0568                     i1l4029:	
 15064                           
 15065                           ;led.c: 116: if ( gLedRunPara.nCurrentBrt[i] + 4 < gLedRunPara.nTargetBrt[i] ) {
 15066  0568  357B               	lslf	LED_UpdateBrightRamp@i,w
 15067  0569  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 15068  056A  25F8  3184         	fcall	PL42	;call to abstracted procedure
 15069  056C  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15070  056D  25CC  3184         	fcall	PL4	;call to abstracted procedure
 15071  056F  1803               	skipnc
 15072  0570  2D78               	goto	i1l4033
 15073                           
 15074                           ;led.c: 117: gLedRunPara.nCurrentBrt[i] += 4;
 15075  0571  2619  3184         	fcall	PL66	;call to abstracted procedure
 15076  0573  0781               	addwf	1,f
 15077  0574  3141               	addfsr 1,1
 15078  0575  1803               	skipnc
 15079  0576  0A81               	incf	1,f
 15080                           
 15081                           ;led.c: 118: } else if ( gLedRunPara.nTargetBrt[i] + 4 < gLedRunPara.nCurrentBrt[i] ) {
 15082  0577  2D91               	goto	i1l4039
 15083  0578                     i1l4033:	
 15084  0578  357B               	lslf	LED_UpdateBrightRamp@i,w
 15085  0579  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15086  057A  25F8  3184         	fcall	PL42	;call to abstracted procedure
 15087  057C  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 15088  057D  25CC  3184         	fcall	PL4	;call to abstracted procedure
 15089  057F  1803               	skipnc
 15090  0580  2D89               	goto	i1l4037
 15091                           
 15092                           ;led.c: 119: gLedRunPara.nCurrentBrt[i] -= 4;
 15093  0581  2619  3184         	fcall	PL66	;call to abstracted procedure
 15094  0583  0281               	subwf	1,f
 15095  0584  3000               	movlw	0
 15096  0585  3141               	addfsr 1,1
 15097  0586  3B81               	subwfb	1,f
 15098  0587  317F               	addfsr 1,-1
 15099                           
 15100                           ;led.c: 120: } else {
 15101  0588  2D91               	goto	i1l4039
 15102  0589                     i1l4037:	
 15103                           
 15104                           ;led.c: 121: gLedRunPara.nCurrentBrt[i] = gLedRunPara.nTargetBrt[i];
 15105  0589  357B               	lslf	LED_UpdateBrightRamp@i,w
 15106  058A  3EBC               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
 15107  058B  0086               	movwf	6
 15108  058C  0187               	clrf	7
 15109  058D  357B               	lslf	LED_UpdateBrightRamp@i,w
 15110  058E  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15111  058F  2607  3184         	fcall	PL50	;call to abstracted procedure
 15112  0591                     i1l4039:	
 15113  0591  3005               	movlw	5
 15114  0592  0AFB               	incf	LED_UpdateBrightRamp@i,f
 15115  0593  027B               	subwf	LED_UpdateBrightRamp@i,w
 15116  0594  1C03               	skipc
 15117  0595  2D68               	goto	i1l4029
 15118                           
 15119                           ;led.c: 122: }
 15120                           ;led.c: 123: }
 15121                           ;led.c: 124: LED_UpdatePWM( );
 15122  0596  25AB               	fcall	i1_LED_UpdatePWM
 15123  0597  0008               	return
 15124  0598                     __end_of_LED_UpdateBrightRamp:	
 15125  0598                     __ptext115:	
 15126 ;; *************** function _LED_StateBle_OnKeyPressShort *****************
 15127 ;; Defined at:
 15128 ;;		line 572 in file "src/led.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;		None
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  i               1    5[COMMON] unsigned char 
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  1    wreg      void 
 15135 ;; Registers used:
 15136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15137 ;; Tracked objects:
 15138 ;;		On entry : 1F/2
 15139 ;;		On exit  : 1F/2
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;Total ram usage:        1 bytes
 15147 ;; Hardware stack levels used:    1
 15148 ;; Hardware stack levels required when called:    2
 15149 ;; This function calls:
 15150 ;;		i1_LED_IndicateOff
 15151 ;;		i1_LED_UpdatePWM
 15152 ;; This function is called by:
 15153 ;;		_LED_StateBleAction_OnKeyStateChanged
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           
 15158                           ;psect for function _LED_StateBle_OnKeyPressShort
 15159  0598                     _LED_StateBle_OnKeyPressShort:	
 15160                           
 15161                           ;led.c: 574: for ( uint8_t i = 0; i < 5; i++ ) {
 15162                           
 15163                           ;incstack = 0
 15164                           ; Regs used in _LED_StateBle_OnKeyPressShort: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15165  0598  01F5               	clrf	LED_StateBle_OnKeyPressShort@i
 15166  0599                     i1l3673:	
 15167                           
 15168                           ;led.c: 575: gLedPara.mPara.manualPara.nBrt[i] = 0;
 15169  0599  3575               	lslf	LED_StateBle_OnKeyPressShort@i,w
 15170  059A  25F0               	fcall	PL40	;call to abstracted procedure
 15171                           
 15172                           ;led.c: 576: gLedRunPara.nTargetBrt[i] = 0;
 15173  059B  3575               	lslf	LED_StateBle_OnKeyPressShort@i,w
 15174  059C  318F  27BF  3184   	fcall	PL26	;call to abstracted procedure
 15175                           
 15176                           ;led.c: 577: gLedRunPara.nCurrentBrt[i] = 0;
 15177  059F  3575               	lslf	LED_StateBle_OnKeyPressShort@i,w
 15178  05A0  260E  3184         	fcall	PL62	;call to abstracted procedure
 15179  05A2  3005               	movlw	5
 15180  05A3  0AF5               	incf	LED_StateBle_OnKeyPressShort@i,f
 15181  05A4  0275               	subwf	LED_StateBle_OnKeyPressShort@i,w
 15182  05A5  1C03               	skipc
 15183  05A6  2D99               	goto	i1l3673
 15184                           
 15185                           ;led.c: 578: }
 15186                           ;led.c: 579: LED_UpdatePWM( );
 15187  05A7  25AB  3184         	fcall	i1_LED_UpdatePWM
 15188                           
 15189                           ;led.c: 580: LED_IndicateOff( );
 15190  05A9  25C2               	fcall	i1_LED_IndicateOff
 15191  05AA  0008               	return
 15192  05AB                     __end_of_LED_StateBle_OnKeyPressShort:	
 15193  05AB                     __ptext116:	
 15194 ;; *************** function i1_LED_UpdatePWM *****************
 15195 ;; Defined at:
 15196 ;;		line 104 in file "src/led.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;		None
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;  LED_UpdatePW    1    4[COMMON] unsigned char 
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  1    wreg      void 
 15203 ;; Registers used:
 15204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15205 ;; Tracked objects:
 15206 ;;		On entry : 1C/2
 15207 ;;		On exit  : 14/4
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;Total ram usage:        1 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:    1
 15217 ;; This function calls:
 15218 ;;		i1_PWM1_LoadDutyValue
 15219 ;;		i1_PWM2_LoadDutyValue
 15220 ;;		i1_PWM3_LoadDutyValue
 15221 ;;		i1_PWM4_LoadDutyValue
 15222 ;;		i1_PWM5_LoadDutyValue
 15223 ;; This function is called by:
 15224 ;;		_LED_UpdateBrightRamp
 15225 ;;		_LED_StateBle_OnKeyPressShort
 15226 ;;		i1_LED_UpdateDayBright
 15227 ;;		i1_LED_UpdateNightBright
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           
 15232                           ;psect for function i1_LED_UpdatePWM
 15233  05AB                     i1_LED_UpdatePWM:	
 15234                           
 15235                           ;led.c: 105: for ( uint8_t i = 0; i < 5; i++ ) {
 15236                           
 15237                           ;incstack = 0
 15238                           ; Regs used in i1_LED_UpdatePWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15239  05AB  01F4               	clrf	i1LED_UpdatePWM@i
 15240  05AC                     i1l3475:	
 15241                           
 15242                           ;led.c: 106: PWM_LoadDutyValue[i]( gLedRunPara.nCurrentBrt[i] );
 15243  05AC  3574               	lslf	i1LED_UpdatePWM@i,w
 15244  05AD  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15245  05AE  0086               	movwf	6
 15246  05AF  0187               	clrf	7
 15247  05B0  3F40               	moviw [0]fsr1
 15248  05B1  00F0               	movwf	i1PWM4_LoadDutyValue@dutyValue
 15249  05B2  3F41               	moviw [1]fsr1
 15250  05B3  00F1               	movwf	i1PWM4_LoadDutyValue@dutyValue+1
 15251  05B4  3574               	lslf	i1LED_UpdatePWM@i,w
 15252  05B5  3ED1               	addlw	(low (_PWM_LoadDutyValue| 0))& (0+255)
 15253  05B6  0086               	movwf	6
 15254  05B7  3F41               	moviw [1]fsr1
 15255  05B8  008A               	movwf	10
 15256  05B9  3F40               	moviw [0]fsr1
 15257  05BA  000A               	callw
 15258  05BB  3005               	movlw	5
 15259  05BC  3184               	pagesel	$
 15260  05BD  0AF4               	incf	i1LED_UpdatePWM@i,f
 15261  05BE  0274               	subwf	i1LED_UpdatePWM@i,w
 15262  05BF  1803               	btfsc	3,0
 15263  05C0  0008               	return
 15264  05C1  2DAC               	goto	i1l3475
 15265  05C2                     __end_ofi1_LED_UpdatePWM:	
 15266  05C2                     __ptext122:	
 15267 ;; *************** function i1_LED_IndicateOff *****************
 15268 ;; Defined at:
 15269 ;;		line 253 in file "src/led.c"
 15270 ;; Parameters:    Size  Location     Type
 15271 ;;		None
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      void 
 15276 ;; Registers used:
 15277 ;;		wreg, status,2, status,0
 15278 ;; Tracked objects:
 15279 ;;		On entry : 14/6
 15280 ;;		On exit  : 1F/2
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;Total ram usage:        0 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; This function calls:
 15290 ;;		Nothing
 15291 ;; This function is called by:
 15292 ;;		_LED_StateBle_OnKeyPressShort
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           
 15297                           ;psect for function i1_LED_IndicateOff
 15298  05C2                     i1_LED_IndicateOff:	
 15299                           
 15300                           ;led.c: 254: gLedPara.fSta = 0;
 15301                           
 15302                           ;incstack = 0
 15303                           ; Regs used in i1_LED_IndicateOff: [wreg+status,2+status,0]
 15304  05C2  2E00               	ljmp	PL44	;call to abstracted procedure
 15305  05C3                     __end_ofi1_LED_IndicateOff:	
 15306  05C3                     __ptext107:	
 15307 ;; *************** function _LED_StateDay_OnKeyRelease *****************
 15308 ;; Defined at:
 15309 ;;		line 443 in file "src/led.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;		None
 15312 ;; Auto vars:     Size  Location     Type
 15313 ;;		None
 15314 ;; Return value:  Size  Location     Type
 15315 ;;                  1    wreg      void 
 15316 ;; Registers used:
 15317 ;;		wreg, status,2, status,0, pclath, cstack
 15318 ;; Tracked objects:
 15319 ;;		On entry : 1F/2
 15320 ;;		On exit  : 1C/0
 15321 ;;		Unchanged: 0/0
 15322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;Total ram usage:        0 bytes
 15328 ;; Hardware stack levels used:    1
 15329 ;; Hardware stack levels required when called:    1
 15330 ;; This function calls:
 15331 ;;		i1_LED_UpdateDayRiseStatus
 15332 ;; This function is called by:
 15333 ;;		_LED_StateDayAction_OnKeyStateChanged
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337                           
 15338                           ;psect for function _LED_StateDay_OnKeyRelease
 15339  05C3                     _LED_StateDay_OnKeyRelease:	
 15340  05C3                     i1l3645:	
 15341                           ;incstack = 0
 15342                           ; Regs used in _LED_StateDay_OnKeyRelease: [wreg+status,2+status,0+pclath+cstack]
 15343                           
 15344                           
 15345                           ;led.c: 444: LED_UpdateDayRiseStatus( );
 15346  05C3  2547               	fcall	i1_LED_UpdateDayRiseStatus
 15347  05C4  0008               	return
 15348  05C5                     __end_of_LED_StateDay_OnKeyRelease:	
 15349  05C5                     __ptext104:	
 15350 ;; *************** function _LED_StateNight_OnKeyPressShort *****************
 15351 ;; Defined at:
 15352 ;;		line 487 in file "src/led.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;		None
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;		None
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      void 
 15359 ;; Registers used:
 15360 ;;		wreg, status,2, status,0, pclath, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 1F/2
 15363 ;;		On exit  : 1F/2
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;Total ram usage:        0 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; Hardware stack levels required when called:    1
 15373 ;; This function calls:
 15374 ;;		i1_LED_IndicateBle
 15375 ;; This function is called by:
 15376 ;;		_LED_StateNightAction_OnKeyStateChanged
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           
 15381                           ;psect for function _LED_StateNight_OnKeyPressShort
 15382  05C5                     _LED_StateNight_OnKeyPressShort:	
 15383  05C5                     i1l3647:	
 15384                           ;incstack = 0
 15385                           ; Regs used in _LED_StateNight_OnKeyPressShort: [wreg+status,2+status,0+pclath+cstack]
 15386                           
 15387                           
 15388                           ;led.c: 489: LED_IndicateBle( );
 15389  05C5  25C8               	fcall	i1_LED_IndicateBle
 15390                           
 15391                           ;led.c: 490: gLedPara.fAuto = 1;
 15392  05C6  1420               	bsf	_gLedPara^(0+256),0	;volatile
 15393  05C7  0008               	return
 15394  05C8                     __end_of_LED_StateNight_OnKeyPressShort:	
 15395  05C8                     __ptext105:	
 15396 ;; *************** function i1_LED_IndicateBle *****************
 15397 ;; Defined at:
 15398 ;;		line 280 in file "src/led.c"
 15399 ;; Parameters:    Size  Location     Type
 15400 ;;		None
 15401 ;; Auto vars:     Size  Location     Type
 15402 ;;		None
 15403 ;; Return value:  Size  Location     Type
 15404 ;;                  1    wreg      void 
 15405 ;; Registers used:
 15406 ;;		wreg, status,2, status,0
 15407 ;; Tracked objects:
 15408 ;;		On entry : 1F/2
 15409 ;;		On exit  : 1F/2
 15410 ;;		Unchanged: 0/0
 15411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15416 ;;Total ram usage:        0 bytes
 15417 ;; Hardware stack levels used:    1
 15418 ;; This function calls:
 15419 ;;		Nothing
 15420 ;; This function is called by:
 15421 ;;		_LED_StateNight_OnKeyPressShort
 15422 ;; This function uses a non-reentrant model
 15423 ;;
 15424                           
 15425                           
 15426                           ;psect for function i1_LED_IndicateBle
 15427  05C8                     i1_LED_IndicateBle:	
 15428                           
 15429                           ;led.c: 281: gLedPara.fSta = 3;
 15430                           
 15431                           ;incstack = 0
 15432                           ; Regs used in i1_LED_IndicateBle: [wreg+status,2+status,0]
 15433  05C8  3006               	movlw	6
 15434  05C9  2E14               	ljmp	PL64	;call to abstracted procedure
 15435  05CA                     __end_ofi1_LED_IndicateBle:	
 15436  05CA                     __ptext103:	
 15437 ;; *************** function _LED_StateNight_OnKeyRelease *****************
 15438 ;; Defined at:
 15439 ;;		line 528 in file "src/led.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;		None
 15442 ;; Auto vars:     Size  Location     Type
 15443 ;;		None
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  1    wreg      void 
 15446 ;; Registers used:
 15447 ;;		wreg, status,2, status,0, pclath, cstack
 15448 ;; Tracked objects:
 15449 ;;		On entry : 1F/2
 15450 ;;		On exit  : 1C/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;Total ram usage:        0 bytes
 15458 ;; Hardware stack levels used:    1
 15459 ;; Hardware stack levels required when called:    1
 15460 ;; This function calls:
 15461 ;;		i1_LED_UpdateNightRiseStatus
 15462 ;; This function is called by:
 15463 ;;		_LED_StateNightAction_OnKeyStateChanged
 15464 ;; This function uses a non-reentrant model
 15465 ;;
 15466                           
 15467                           
 15468                           ;psect for function _LED_StateNight_OnKeyRelease
 15469  05CA                     _LED_StateNight_OnKeyRelease:	
 15470  05CA                     i1l3665:	
 15471                           ;incstack = 0
 15472                           ; Regs used in _LED_StateNight_OnKeyRelease: [wreg+status,2+status,0+pclath+cstack]
 15473                           
 15474                           
 15475                           ;led.c: 529: LED_UpdateNightRiseStatus( );
 15476  05CA  24EF               	fcall	i1_LED_UpdateNightRiseStatus
 15477  05CB  0008               	return
 15478  05CC                     __end_of_LED_StateNight_OnKeyRelease:	
 15479  05CC                     PL4:	
 15480  05CC  0086               	movwf	6
 15481  05CD  3F40               	moviw [0]fsr1
 15482  05CE  00F7               	movwf	??_LED_UpdateBrightRamp+2
 15483  05CF  3F41               	moviw [1]fsr1
 15484  05D0  00F8               	movwf	??_LED_UpdateBrightRamp+3
 15485  05D1  0877               	movf	??_LED_UpdateBrightRamp+2,w
 15486  05D2  3E04               	addlw	4
 15487  05D3  00F9               	movwf	??_LED_UpdateBrightRamp+4
 15488  05D4  3000               	movlw	0
 15489  05D5  3D78               	addwfc	??_LED_UpdateBrightRamp+3,w
 15490  05D6  00FA               	movwf	??_LED_UpdateBrightRamp+5
 15491  05D7  0876               	movf	??_LED_UpdateBrightRamp+1,w
 15492  05D8  027A               	subwf	??_LED_UpdateBrightRamp+5,w
 15493  05D9  1D03               	skipz
 15494  05DA  0008               	return
 15495  05DB  0875               	movf	??_LED_UpdateBrightRamp,w
 15496  05DC  0279               	subwf	??_LED_UpdateBrightRamp+4,w
 15497  05DD  0008               	return
 15498  05DE                     __end_ofPL4:	
 15499  05DE                     PL18:	
 15500  05DE  0022               	movlb	2	; select bank2
 15501  05DF  0820               	movf	_gLedPara^(0+256),w	;volatile
 15502  05E0  39F9               	andlw	-7
 15503  05E1  3802               	iorlw	2
 15504  05E2  00A0               	movwf	_gLedPara^(0+256)	;volatile
 15505  05E3  130D               	bcf	13,6	;volatile
 15506  05E4  108C               	bcf	12,1	;volatile
 15507  05E5  138D               	bcf	13,7	;volatile
 15508  05E6  0008               	return
 15509  05E7                     __end_ofPL18:	
 15510  05E7                     PL22:	
 15511  05E7  0022               	movlb	2	; select bank2
 15512  05E8  0820               	movf	_gLedPara^(0+256),w	;volatile
 15513  05E9  39F9               	andlw	-7
 15514  05EA  3804               	iorlw	4
 15515  05EB  00A0               	movwf	_gLedPara^(0+256)	;volatile
 15516  05EC  170D               	bsf	13,6	;volatile
 15517  05ED  148C               	bsf	12,1	;volatile
 15518  05EE  138D               	bcf	13,7	;volatile
 15519  05EF  0008               	return
 15520  05F0                     __end_ofPL22:	
 15521  05F0                     PL40:	
 15522  05F0  3E23               	addlw	(low ((_gLedPara| (0+256)+3)))& (0+255)
 15523  05F1  0086               	movwf	6
 15524  05F2  3001               	movlw	1	; select bank2/3
 15525  05F3  0087               	movwf	7
 15526  05F4  3000               	movlw	0
 15527  05F5  3FC0               	movwi [0]fsr1
 15528  05F6  3FC1               	movwi [1]fsr1
 15529  05F7  0008               	return
 15530  05F8                     __end_ofPL40:	
 15531  05F8                     PL42:	
 15532  05F8  0086               	movwf	6
 15533  05F9  0187               	clrf	7
 15534  05FA  3F40               	moviw [0]fsr1
 15535  05FB  00F5               	movwf	??_LED_UpdateBrightRamp
 15536  05FC  3F41               	moviw [1]fsr1
 15537  05FD  00F6               	movwf	??_LED_UpdateBrightRamp+1
 15538  05FE  357B               	lslf	LED_UpdateBrightRamp@i,w
 15539  05FF  0008               	return
 15540  0600                     __end_ofPL42:	
 15541  0600                     PL44:	
 15542  0600  30F9               	movlw	-7
 15543  0601  0022               	movlb	2	; select bank2
 15544  0602  05A0               	andwf	_gLedPara^(0+256),f	;volatile
 15545  0603  130D               	bcf	13,6	;volatile
 15546  0604  148C               	bsf	12,1	;volatile
 15547  0605  178D               	bsf	13,7	;volatile
 15548  0606  0008               	return
 15549  0607                     __end_ofPL44:	
 15550  0607                     PL50:	
 15551  0607  0084               	movwf	4
 15552  0608  0185               	clrf	5
 15553  0609  3F40               	moviw [0]fsr1
 15554  060A  3F80               	movwi [0]fsr0
 15555  060B  3F41               	moviw [1]fsr1
 15556  060C  3F81               	movwi [1]fsr0
 15557  060D  0008               	return
 15558  060E                     __end_ofPL50:	
 15559  060E                     PL62:	
 15560  060E  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15561  060F  0086               	movwf	6
 15562  0610  3000               	movlw	0
 15563  0611  3FC0               	movwi [0]fsr1
 15564  0612  3FC1               	movwi [1]fsr1
 15565  0613  0008               	return
 15566  0614                     __end_ofPL62:	
 15567  0614                     PL64:	
 15568  0614  04A0               	iorwf	_gLedPara^(0+256),f	;volatile
 15569  0615  170D               	bsf	13,6	;volatile
 15570  0616  108C               	bcf	12,1	;volatile
 15571  0617  178D               	bsf	13,7	;volatile
 15572  0618  0008               	return
 15573  0619                     __end_ofPL64:	
 15574  0619                     PL66:	
 15575  0619  357B               	lslf	LED_UpdateBrightRamp@i,w
 15576  061A  3EC6               	addlw	(low ((_gLedRunPara| 0+14)))& (0+255)
 15577  061B  0086               	movwf	6
 15578  061C  3004               	movlw	4
 15579  061D  0187               	clrf	7
 15580  061E  0008               	return
 15581  061F                     __end_ofPL66:	
 15582                           
 15583                           	psect	text124
 15584  148B                     __ptext124:	
 15585 ;; *************** function _TMR0_ISR *****************
 15586 ;; Defined at:
 15587 ;;		line 47 in file "src/tmr.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;		None
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;		None
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  1    wreg      void 
 15594 ;; Registers used:
 15595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15596 ;; Tracked objects:
 15597 ;;		On entry : 1F/0
 15598 ;;		On exit  : 0/0
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;Total ram usage:        0 bytes
 15606 ;; Hardware stack levels used:    1
 15607 ;; Hardware stack levels required when called:    3
 15608 ;; This function calls:
 15609 ;;		Absolute function
 15610 ;;		_RTC_Run
 15611 ;; This function is called by:
 15612 ;;		_INTERRUPT_InterruptManager
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           
 15617                           ;psect for function _TMR0_ISR
 15618  148B                     _TMR0_ISR:	
 15619                           
 15620                           ;tmr.c: 48: PIR0bits.TMR0IF = 0;
 15621                           
 15622                           ;incstack = 0
 15623                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15624  148B  1290               	bcf	16,5	;volatile
 15625                           
 15626                           ;tmr.c: 49: if ( fnTmr0Callback != (0) ) {
 15627  148C  0021               	movlb	1	; select bank1
 15628  148D  0829               	movf	_fnTmr0Callback^(0+128),w
 15629  148E  042A               	iorwf	(_fnTmr0Callback+1)^(0+128),w
 15630  148F  1903               	btfsc	3,2
 15631  1490  0008               	return
 15632                           
 15633                           ;tmr.c: 50: fnTmr0Callback( );
 15634  1491  082A               	movf	(_fnTmr0Callback+1)^(0+128),w
 15635  1492  008A               	movwf	10
 15636  1493  0829               	movf	_fnTmr0Callback^(0+128),w
 15637  1494  000A               	callw
 15638  1495  3194               	pagesel	$
 15639  1496  0008               	return
 15640  1497                     __end_of_TMR0_ISR:	
 15641                           
 15642                           	psect	text125
 15643  0758                     __ptext125:	
 15644 ;; *************** function _RTC_Run *****************
 15645 ;; Defined at:
 15646 ;;		line 71 in file "src/rtc.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;		None
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;		None
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15655 ;; Tracked objects:
 15656 ;;		On entry : 1F/1
 15657 ;;		On exit  : 1F/1
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;Total ram usage:        0 bytes
 15665 ;; Hardware stack levels used:    1
 15666 ;; Hardware stack levels required when called:    2
 15667 ;; This function calls:
 15668 ;;		_RTC_IsLeapYear
 15669 ;; This function is called by:
 15670 ;;		_registerCallback
 15671 ;;		_TMR0_ISR
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           
 15676                           ;psect for function _RTC_Run
 15677  0758                     _RTC_Run:	
 15678                           
 15679                           ;rtc.c: 72: gCurrentTime.datetime.second++;
 15680                           
 15681                           ;incstack = 0
 15682                           ; Regs used in _RTC_Run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15683  0758  0AA6               	incf	(_gCurrentTime^(0+128)+6),f	;volatile
 15684                           
 15685                           ;rtc.c: 73: if ( gCurrentTime.datetime.second >= 60 ) {
 15686  0759  303C               	movlw	60
 15687  075A  0226               	subwf	(_gCurrentTime^(0+128)+6),w	;volatile
 15688  075B  1C03               	skipc
 15689  075C  2F9C               	goto	i1l4971
 15690                           
 15691                           ;rtc.c: 74: gCurrentTime.datetime.second = 0;
 15692  075D  01A6               	clrf	(_gCurrentTime^(0+128)+6)	;volatile
 15693                           
 15694                           ;rtc.c: 75: gCurrentTime.datetime.minute++;
 15695  075E  0AA5               	incf	(_gCurrentTime^(0+128)+5),f	;volatile
 15696                           
 15697                           ;rtc.c: 76: if ( gCurrentTime.datetime.minute >= 60 ) {
 15698  075F  303C               	movlw	60
 15699  0760  0225               	subwf	(_gCurrentTime^(0+128)+5),w	;volatile
 15700  0761  1C03               	skipc
 15701  0762  2F9C               	goto	i1l4971
 15702                           
 15703                           ;rtc.c: 77: gCurrentTime.datetime.minute = 0;
 15704  0763  01A5               	clrf	(_gCurrentTime^(0+128)+5)	;volatile
 15705                           
 15706                           ;rtc.c: 78: gCurrentTime.datetime.hour++;
 15707  0764  0AA4               	incf	(_gCurrentTime^(0+128)+4),f	;volatile
 15708                           
 15709                           ;rtc.c: 79: if ( gCurrentTime.datetime.hour >= 24 ) {
 15710  0765  3018               	movlw	24
 15711  0766  0224               	subwf	(_gCurrentTime^(0+128)+4),w	;volatile
 15712  0767  1C03               	skipc
 15713  0768  2F9C               	goto	i1l4971
 15714                           
 15715                           ;rtc.c: 80: gCurrentTime.datetime.hour = 0;
 15716  0769  01A4               	clrf	(_gCurrentTime^(0+128)+4)	;volatile
 15717                           
 15718                           ;rtc.c: 81: gCurrentTime.datetime.day++;
 15719  076A  0AA2               	incf	(_gCurrentTime^(0+128)+2),f	;volatile
 15720                           
 15721                           ;rtc.c: 82: gCurrentTime.datetime.wk++;
 15722  076B  0AA3               	incf	(_gCurrentTime^(0+128)+3),f	;volatile
 15723                           
 15724                           ;rtc.c: 83: if ( gCurrentTime.datetime.wk > 6 ) {
 15725  076C  3007               	movlw	7
 15726  076D  0223               	subwf	(_gCurrentTime^(0+128)+3),w	;volatile
 15727  076E  1803               	btfsc	3,0
 15728                           
 15729                           ;rtc.c: 84: gCurrentTime.datetime.wk = 0;
 15730  076F  01A3               	clrf	(_gCurrentTime^(0+128)+3)	;volatile
 15731                           
 15732                           ;rtc.c: 85: }
 15733                           ;rtc.c: 86: if ( RTC_IsLeapYear( gCurrentTime.datetime.year + 2000 ) ) {
 15734  0770  0820               	movf	_gCurrentTime^(0+128),w	;volatile
 15735  0771  00F5               	movwf	RTC_IsLeapYear@year
 15736  0772  30D0               	movlw	208
 15737  0773  01F6               	clrf	RTC_IsLeapYear@year+1
 15738  0774  07F5               	addwf	RTC_IsLeapYear@year,f
 15739  0775  3007               	movlw	7
 15740  0776  3DF6               	addwfc	RTC_IsLeapYear@year+1,f
 15741  0777  279E  3187         	fcall	_RTC_IsLeapYear
 15742  0779  3A00               	xorlw	0
 15743  077A  1903               	skipnz
 15744  077B  2F7E               	goto	i1l4955
 15745                           
 15746                           ;rtc.c: 87: MONTH_DAY[1] = 29;
 15747  077C  301D               	movlw	29
 15748  077D  2F7F               	goto	L16
 15749  077E                     i1l4955:	
 15750                           ;rtc.c: 88: } else {
 15751                           
 15752                           
 15753                           ;rtc.c: 89: MONTH_DAY[1] = 28;
 15754  077E  301C               	movlw	28
 15755  077F                     L16:	
 15756  077F  0022               	movlb	2	; select bank2
 15757  0780  00D8               	movwf	(_MONTH_DAY^(0+256)+1)
 15758                           
 15759                           ;rtc.c: 90: }
 15760                           ;rtc.c: 91: if ( gCurrentTime.datetime.month <= 12 && gCurrentTime.datetime.month > 0 ) 
      +                          {
 15761  0781  300D               	movlw	13
 15762  0782  0021               	movlb	1	; select bank1
 15763  0783  0221               	subwf	(_gCurrentTime^(0+128)+1),w	;volatile
 15764  0784  1803               	skipnc
 15765  0785  2F9C               	goto	i1l4971
 15766  0786  0821               	movf	(_gCurrentTime^(0+128)+1),w	;volatile
 15767  0787  1903               	btfsc	3,2
 15768  0788  2F9C               	goto	i1l4971
 15769                           
 15770                           ;rtc.c: 92: if ( gCurrentTime.datetime.day > MONTH_DAY[gCurrentTime.datetime.month - 1] 
      +                          ) {
 15771  0789  0821               	movf	(_gCurrentTime^(0+128)+1),w	;volatile
 15772  078A  3E56               	addlw	(low ((_MONTH_DAY| (0+256)+255)))& (0+255)
 15773  078B  0086               	movwf	6
 15774  078C  3001               	movlw	1	; select bank2/3
 15775  078D  0087               	movwf	7
 15776  078E  0822               	movf	(_gCurrentTime^(0+128)+2),w	;volatile
 15777  078F  0201               	subwf	1,w
 15778  0790  1803               	skipnc
 15779  0791  2F9C               	goto	i1l4971
 15780                           
 15781                           ;rtc.c: 93: gCurrentTime.datetime.day = 1;
 15782  0792  3001               	movlw	1
 15783  0793  00A2               	movwf	(_gCurrentTime^(0+128)+2)	;volatile
 15784                           
 15785                           ;rtc.c: 94: gCurrentTime.datetime.month++;
 15786  0794  0AA1               	incf	(_gCurrentTime^(0+128)+1),f	;volatile
 15787                           
 15788                           ;rtc.c: 95: if ( gCurrentTime.datetime.month > 12 ) {
 15789  0795  300D               	movlw	13
 15790  0796  0221               	subwf	(_gCurrentTime^(0+128)+1),w	;volatile
 15791  0797  1C03               	skipc
 15792  0798  2F9C               	goto	i1l4971
 15793                           
 15794                           ;rtc.c: 96: gCurrentTime.datetime.month = 1;
 15795  0799  3001               	movlw	1
 15796  079A  00A1               	movwf	(_gCurrentTime^(0+128)+1)	;volatile
 15797                           
 15798                           ;rtc.c: 97: gCurrentTime.datetime.year++;
 15799  079B  0AA0               	incf	_gCurrentTime^(0+128),f	;volatile
 15800  079C                     i1l4971:	
 15801                           
 15802                           ;rtc.c: 98: }
 15803                           ;rtc.c: 99: }
 15804                           ;rtc.c: 100: }
 15805                           ;rtc.c: 101: }
 15806                           ;rtc.c: 102: }
 15807                           ;rtc.c: 103: }
 15808                           ;rtc.c: 104: prvStatus.fSec = 1;
 15809  079C  1431               	bsf	_prvStatus^(0+128),0
 15810  079D  0008               	return
 15811  079E                     __end_of_RTC_Run:	
 15812  079E                     __ptext126:	
 15813 ;; *************** function _RTC_IsLeapYear *****************
 15814 ;; Defined at:
 15815 ;;		line 42 in file "src/rtc.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;  year            2    5[COMMON] unsigned int 
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;		None
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      unsigned char 
 15822 ;; Registers used:
 15823 ;;		wreg, status,2, status,0, pclath, cstack
 15824 ;; Tracked objects:
 15825 ;;		On entry : 1F/1
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15833 ;;Total ram usage:        2 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; Hardware stack levels required when called:    1
 15836 ;; This function calls:
 15837 ;;		___lwmod
 15838 ;; This function is called by:
 15839 ;;		_RTC_Run
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           
 15844                           ;psect for function _RTC_IsLeapYear
 15845  079E                     _RTC_IsLeapYear:	
 15846                           
 15847                           ;rtc.c: 43: if ( year & 0x03 ) {
 15848                           
 15849                           ;incstack = 0
 15850                           ; Regs used in _RTC_IsLeapYear: [wreg+status,2+status,0+pclath+cstack]
 15851  079E  0875               	movf	RTC_IsLeapYear@year,w
 15852  079F  3903               	andlw	3
 15853  07A0  1903               	btfsc	3,2
 15854  07A1  3400               	retlw	0
 15855                           
 15856                           ;rtc.c: 44: if ( year % 100 == 0 ) {
 15857  07A2  3064               	movlw	100
 15858  07A3  00F0               	movwf	___lwmod@divisor
 15859  07A4  01F1               	clrf	___lwmod@divisor+1
 15860  07A5  27DA  3187         	fcall	PL82	;call to abstracted procedure
 15861  07A7  27BA  3187         	fcall	___lwmod
 15862  07A9  0870               	movf	?___lwmod,w
 15863  07AA  0471               	iorwf	?___lwmod+1,w
 15864  07AB  1D03               	btfss	3,2
 15865  07AC  3401               	retlw	1
 15866                           
 15867                           ;rtc.c: 45: if ( year % 400 == 0 ) {
 15868  07AD  3090               	movlw	144
 15869  07AE  00F0               	movwf	___lwmod@divisor
 15870  07AF  3001               	movlw	1
 15871  07B0  00F1               	movwf	___lwmod@divisor+1
 15872  07B1  27DA  3187         	fcall	PL82	;call to abstracted procedure
 15873  07B3  27BA  3187         	fcall	___lwmod
 15874  07B5  0870               	movf	?___lwmod,w
 15875  07B6  0471               	iorwf	?___lwmod+1,w
 15876  07B7  1903               	btfsc	3,2
 15877                           
 15878                           ;rtc.c: 46: return 1;
 15879  07B8  3401               	retlw	1
 15880                           
 15881                           ;rtc.c: 50: }
 15882                           ;rtc.c: 51: }
 15883                           ;rtc.c: 52: return 0;
 15884  07B9  3400               	retlw	0
 15885  07BA                     __end_of_RTC_IsLeapYear:	
 15886  07BA                     __ptext127:	
 15887 ;; *************** function ___lwmod *****************
 15888 ;; Defined at:
 15889 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\lwmod.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  divisor         2    0[COMMON] unsigned int 
 15892 ;;  dividend        2    2[COMMON] unsigned int 
 15893 ;; Auto vars:     Size  Location     Type
 15894 ;;  counter         1    4[COMMON] unsigned char 
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  2    0[COMMON] unsigned int 
 15897 ;; Registers used:
 15898 ;;		wreg, status,2, status,0
 15899 ;; Tracked objects:
 15900 ;;		On entry : 0/1
 15901 ;;		On exit  : 0/0
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15907 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15908 ;;Total ram usage:        5 bytes
 15909 ;; Hardware stack levels used:    1
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		_RTC_IsLeapYear
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           
 15918                           ;psect for function ___lwmod
 15919  07BA                     ___lwmod:	
 15920                           
 15921                           ;incstack = 0
 15922                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15923  07BA  0870               	movf	___lwmod@divisor,w
 15924  07BB  0471               	iorwf	___lwmod@divisor+1,w
 15925  07BC  1903               	btfsc	3,2
 15926  07BD  2FD5               	goto	i1l3923
 15927  07BE  01F4               	clrf	___lwmod@counter
 15928  07BF                     L17:	
 15929  07BF  0AF4               	incf	___lwmod@counter,f
 15930  07C0  1BF1               	btfsc	___lwmod@divisor+1,7
 15931  07C1  2FC5               	goto	i1l3915
 15932  07C2  35F0               	lslf	___lwmod@divisor,f
 15933  07C3  0DF1               	rlf	___lwmod@divisor+1,f
 15934  07C4  2FBF               	goto	L17
 15935  07C5                     i1l3915:	
 15936  07C5  0871               	movf	___lwmod@divisor+1,w
 15937  07C6  0273               	subwf	___lwmod@dividend+1,w
 15938  07C7  1D03               	skipz
 15939  07C8  2FCB               	goto	u296_25
 15940  07C9  0870               	movf	___lwmod@divisor,w
 15941  07CA  0272               	subwf	___lwmod@dividend,w
 15942  07CB                     u296_25:	
 15943  07CB  1C03               	skipc
 15944  07CC  2FD1               	goto	i1l3919
 15945  07CD  0870               	movf	___lwmod@divisor,w
 15946  07CE  02F2               	subwf	___lwmod@dividend,f
 15947  07CF  0871               	movf	___lwmod@divisor+1,w
 15948  07D0  3BF3               	subwfb	___lwmod@dividend+1,f
 15949  07D1                     i1l3919:	
 15950  07D1  36F1               	lsrf	___lwmod@divisor+1,f
 15951  07D2  0CF0               	rrf	___lwmod@divisor,f
 15952  07D3  0BF4               	decfsz	___lwmod@counter,f
 15953  07D4  2FC5               	goto	i1l3915
 15954  07D5                     i1l3923:	
 15955  07D5  0873               	movf	___lwmod@dividend+1,w
 15956  07D6  00F1               	movwf	?___lwmod+1
 15957  07D7  0872               	movf	___lwmod@dividend,w
 15958  07D8  00F0               	movwf	?___lwmod
 15959  07D9  0008               	return
 15960  07DA                     __end_of___lwmod:	
 15961  07DA                     PL82:	
 15962  07DA  0876               	movf	RTC_IsLeapYear@year+1,w
 15963  07DB  00F3               	movwf	___lwmod@dividend+1
 15964  07DC  0875               	movf	RTC_IsLeapYear@year,w
 15965  07DD  00F2               	movwf	___lwmod@dividend
 15966  07DE  0008               	return
 15967  07DF                     __end_ofPL82:	
 15968                           
 15969                           	psect	text128
 15970  151F                     __ptext128:	
 15971 ;; *************** function _EUSART_Transmit_ISR *****************
 15972 ;; Defined at:
 15973 ;;		line 55 in file "src/eusart.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;		None
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      void 
 15980 ;; Registers used:
 15981 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15982 ;; Tracked objects:
 15983 ;;		On entry : 1F/0
 15984 ;;		On exit  : 1F/1
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;Total ram usage:        0 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; This function calls:
 15994 ;;		Nothing
 15995 ;; This function is called by:
 15996 ;;		_INTERRUPT_InterruptManager
 15997 ;; This function uses a non-reentrant model
 15998 ;;
 15999                           
 16000                           
 16001                           ;psect for function _EUSART_Transmit_ISR
 16002  151F                     _EUSART_Transmit_ISR:	
 16003                           
 16004                           ;eusart.c: 56: if ( sizeof ( txBuf ) > txRemain ) {
 16005                           
 16006                           ;incstack = 0
 16007                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16008  151F  3040               	movlw	64
 16009  1520  0021               	movlb	1	; select bank1
 16010  1521  026A               	subwf	_txRemain^(0+128),w
 16011  1522  1803               	skipnc
 16012  1523  2D34               	goto	i1l876
 16013                           
 16014                           ;eusart.c: 57: TXREG = txBuf[txTail++];
 16015  1524  0830               	movf	_txTail^(0+128),w
 16016  1525  3EA0               	addlw	(low (_txBuf| (0+512)))& (0+255)
 16017  1526  0086               	movwf	6
 16018  1527  3002               	movlw	2	; select bank5/6
 16019  1528  0087               	movwf	7
 16020  1529  0801               	movf	1,w
 16021  152A  0023               	movlb	3	; select bank3
 16022  152B  009A               	movwf	26	;volatile
 16023  152C  0021               	movlb	1	; select bank1
 16024  152D  3040               	movlw	64
 16025  152E  0AB0               	incf	_txTail^(0+128),f
 16026                           
 16027                           ;eusart.c: 58: if ( sizeof (txBuf ) <= txTail ) {
 16028  152F  0230               	subwf	_txTail^(0+128),w
 16029  1530  1803               	btfsc	3,0
 16030                           
 16031                           ;eusart.c: 59: txTail = 0;
 16032  1531  01B0               	clrf	_txTail^(0+128)
 16033                           
 16034                           ;eusart.c: 60: }
 16035                           ;eusart.c: 61: txRemain++;
 16036  1532  0AEA               	incf	_txRemain^(0+128),f
 16037                           
 16038                           ;eusart.c: 62: } else {
 16039  1533  0008               	return
 16040  1534                     i1l876:	
 16041                           
 16042                           ;eusart.c: 63: PIE1bits.TXIE = 0;
 16043  1534  1211               	bcf	17,4	;volatile
 16044  1535  0008               	return
 16045  1536                     __end_of_EUSART_Transmit_ISR:	
 16046                           
 16047                           	psect	text129
 16048  1509                     __ptext129:	
 16049 ;; *************** function _EUSART_RCV_ISR *****************
 16050 ;; Defined at:
 16051 ;;		line 42 in file "src/eusart.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;		None
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  rcv             1    1[COMMON] unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      void 
 16058 ;; Registers used:
 16059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16060 ;; Tracked objects:
 16061 ;;		On entry : 1F/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;Total ram usage:        1 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:    1
 16072 ;; This function calls:
 16073 ;;		Absolute function
 16074 ;;		_BLE_Receive
 16075 ;; This function is called by:
 16076 ;;		_INTERRUPT_InterruptManager
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080                           
 16081                           ;psect for function _EUSART_RCV_ISR
 16082  1509                     _EUSART_RCV_ISR:	
 16083                           
 16084                           ;eusart.c: 43: uint8_t rcv;
 16085                           ;eusart.c: 44: if ( RC1STAbits.FERR || RC1STAbits.OERR ) {
 16086                           
 16087                           ;incstack = 0
 16088                           ; Regs used in _EUSART_RCV_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16089  1509  0023               	movlb	3	; select bank3
 16090  150A  191D               	btfsc	29,2	;volatile
 16091  150B  2D0E               	goto	i1l871
 16092  150C  1C9D               	btfss	29,1	;volatile
 16093  150D  2D10               	goto	i1l5145
 16094  150E                     i1l871:	
 16095                           
 16096                           ;eusart.c: 45: RC1STAbits.SPEN = 0;
 16097  150E  139D               	bcf	29,7	;volatile
 16098                           
 16099                           ;eusart.c: 46: RC1STAbits.SPEN = 1;
 16100  150F  179D               	bsf	29,7	;volatile
 16101  1510                     i1l5145:	
 16102                           
 16103                           ;eusart.c: 47: }
 16104                           ;eusart.c: 49: rcv = RCREG;
 16105  1510  0819               	movf	25,w	;volatile
 16106  1511  00F1               	movwf	EUSART_RCV_ISR@rcv
 16107                           
 16108                           ;eusart.c: 50: if ( fnReceiveCallback != (0) ) {
 16109  1512  0021               	movlb	1	; select bank1
 16110  1513  082B               	movf	_fnReceiveCallback^(0+128),w
 16111  1514  042C               	iorwf	(_fnReceiveCallback+1)^(0+128),w
 16112  1515  1903               	btfsc	3,2
 16113  1516  0008               	return
 16114                           
 16115                           ;eusart.c: 51: fnReceiveCallback( rcv );
 16116  1517  0871               	movf	EUSART_RCV_ISR@rcv,w
 16117  1518  00F0               	movwf	BLE_Receive@rcv
 16118  1519  082C               	movf	(_fnReceiveCallback+1)^(0+128),w
 16119  151A  008A               	movwf	10
 16120  151B  082B               	movf	_fnReceiveCallback^(0+128),w
 16121  151C  000A               	callw
 16122  151D  3195               	pagesel	$
 16123  151E  0008               	return
 16124  151F                     __end_of_EUSART_RCV_ISR:	
 16125                           
 16126                           	psect	text130
 16127  14AF                     __ptext130:	
 16128 ;; *************** function _BLE_Receive *****************
 16129 ;; Defined at:
 16130 ;;		line 41 in file "src/ble.c"
 16131 ;; Parameters:    Size  Location     Type
 16132 ;;  rcv             1    0[COMMON] unsigned char 
 16133 ;; Auto vars:     Size  Location     Type
 16134 ;;		None
 16135 ;; Return value:  Size  Location     Type
 16136 ;;                  1    wreg      void 
 16137 ;; Registers used:
 16138 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16139 ;; Tracked objects:
 16140 ;;		On entry : 1F/1
 16141 ;;		On exit  : 1F/1
 16142 ;;		Unchanged: 0/0
 16143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;Total ram usage:        1 bytes
 16149 ;; Hardware stack levels used:    1
 16150 ;; This function calls:
 16151 ;;		Nothing
 16152 ;; This function is called by:
 16153 ;;		_registerCallback
 16154 ;;		_EUSART_RCV_ISR
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158                           
 16159                           ;psect for function _BLE_Receive
 16160  14AF                     _BLE_Receive:	
 16161                           
 16162                           ;ble.c: 42: rxBuf[ nRcvIdx++ ] = rcv;
 16163                           
 16164                           ;incstack = 0
 16165                           ; Regs used in _BLE_Receive: [wreg+fsr1l+fsr1h+status,2+status,0]
 16166  14AF  087D               	movf	_nRcvIdx,w
 16167  14B0  3E20               	addlw	(low (_rxBuf| (0+512)))& (0+255)
 16168  14B1  0086               	movwf	6
 16169  14B2  3002               	movlw	2	; select bank4/5
 16170  14B3  0087               	movwf	7
 16171  14B4  0870               	movf	BLE_Receive@rcv,w
 16172  14B5  0081               	movwf	1
 16173  14B6  0AFD               	incf	_nRcvIdx,f	;volatile
 16174                           
 16175                           ;ble.c: 43: rcvXor ^= rcv;
 16176  14B7  0870               	movf	BLE_Receive@rcv,w
 16177  14B8  06B7               	xorwf	_rcvXor^(0+128),f	;volatile
 16178                           
 16179                           ;ble.c: 44: if ( nRcvIdx >= sizeof ( rxBuf ) ) {
 16180  14B9  3040               	movlw	64
 16181  14BA  027D               	subwf	_nRcvIdx,w
 16182  14BB  1803               	btfsc	3,0
 16183                           
 16184                           ;ble.c: 45: nRcvIdx = 0;
 16185  14BC  01FD               	clrf	_nRcvIdx	;volatile
 16186  14BD  0008               	return
 16187  14BE                     __end_of_BLE_Receive:	
 16188  007E                     btemp	set	126	;btemp
 16189  007E                     int$flags	set	126
 16190  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        54
    BSS         234
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     79      80
    BANK1            80      0      75
    BANK2            80      0      67
    BANK3            80      0      17
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LED_Action_OnKeyStateChanged$2287	PTR FTN(unsigned char ,enum E8014,)void  size(2) Largest target is 1
		 -> LED_StateBleAction_OnKeyStateChanged(), LED_StateNightAction_OnKeyStateChanged(), LED_StateDayAction_OnKeyStateChanged(), LED_StateOffAction_OnKeyStateChanged(), 

    Util_Decrease@psrc	const PTR unsigned int  size(2) Largest target is 32
		 -> gLedPara.mPara.nBrt(BANK2[10]), gLedRunPara.nTargetBrt(BANK1[10]), gLedRunPara(BANK1[25]), gLedPara.mPara(BANK2[32]), 

    Util_Increase@psrc	const PTR unsigned int  size(2) Largest target is 32
		 -> gLedPara.mPara.nBrt(BANK2[10]), gLedRunPara.nTargetBrt(BANK1[10]), gLedRunPara(BANK1[25]), gLedPara.mPara(BANK2[32]), 

    TMR2_SetInterruptCallback@callback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_InterruptCallback(), 

    fnTmr2Callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_InterruptCallback(), 

    TMR0_SetInterruptCallback@callback	PTR FTN()void  size(2) Largest target is 1
		 -> RTC_Run(), 

    fnTmr0Callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), RTC_Run(), 

    EUSART_SetReceiveCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> BLE_Receive(), 

    fnReceiveCallback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), BLE_Receive(), 

    RTC_SetCurrentTime@time	const PTR const unsigned char  size(1) Largest target is 64
		 -> rxBuf(BANK4[64]), 

    LED_SetPreviewBrights@pbuf	const PTR const unsigned char  size(1) Largest target is 64
		 -> rxBuf(BANK4[64]), 

    LED_SetCycle@pbuf	const PTR const unsigned char  size(1) Largest target is 64
		 -> rxBuf(BANK4[64]), 

    LED_SetManualBrights@pbuf	const PTR const unsigned char  size(1) Largest target is 64
		 -> rxBuf(BANK4[64]), 

    PWM_LoadDutyValue	PTR FTN(unsigned int ,)void [5] size(2) Largest target is 1
		 -> PWM4_LoadDutyValue(), PWM1_LoadDutyValue(), PWM3_LoadDutyValue(), PWM5_LoadDutyValue(), 
		 -> PWM2_LoadDutyValue(), 

    led_state_actions	PTR FTN(unsigned char ,enum E8014,)void [4] size(2) Largest target is 1
		 -> LED_StateBleAction_OnKeyStateChanged(), LED_StateNightAction_OnKeyStateChanged(), LED_StateDayAction_OnKeyStateChanged(), LED_StateOffAction_OnKeyStateChanged(), 

    KEY_SetOnStateChangedCallback@callback	PTR FTN(unsigned char ,enum E8014,)void  size(2) Largest target is 1
		 -> LED_Action_OnKeyStateChanged(), 

    fnKeyAction	PTR FTN(unsigned char ,enum E8014,)void  size(2) Largest target is 1
		 -> Absolute function(), LED_Action_OnKeyStateChanged(), 

    EEPROM_ReadBuffer@pbuf	const PTR unsigned char  size(1) Largest target is 55
		 -> gLedPara(BANK2[55]), 

    EEPROM_WriteBuffer@pbuf	const PTR const unsigned char  size(1) Largest target is 55
		 -> gLedPara(BANK2[55]), 

    BLE_SendCMD@pBuf	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[34]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_InterruptCallback->_KEY_Scan
    _LED_UpdateBrightRamp->i1_LED_UpdatePWM
    _KEY_Scan->_LED_Action_OnKeyStateChanged
    _LED_Action_OnKeyStateChanged->_LED_StateBleAction_OnKeyStateChanged
    _LED_Action_OnKeyStateChanged->_LED_StateDayAction_OnKeyStateChanged
    _LED_Action_OnKeyStateChanged->_LED_StateNightAction_OnKeyStateChanged
    _LED_Action_OnKeyStateChanged->_LED_StateOffAction_OnKeyStateChanged
    _LED_StateOffAction_OnKeyPressShort->i1_LED_UpdateDayBright
    _LED_StateOffAction_OnKeyPressCont->i1_LED_UpdateDayBright
    _LED_StateNightAction_OnKeyStateChanged->_LED_StateNight_OnKeyPressCont
    _LED_StateNight_OnKeyPressCont->i1_LED_UpdateNightBright
    _LED_StateDayAction_OnKeyStateChanged->_LED_StateDay_OnKeyPressCont
    _LED_StateDay_OnKeyPressShort->i1_LED_UpdateNightBright
    i1_LED_UpdateNightBright->i1_LED_UpdatePWM
    _LED_StateDay_OnKeyPressCont->i1_LED_UpdateDayBright
    i1_LED_UpdateDayBright->i1_LED_UpdatePWM
    _LED_StateBle_OnKeyPressShort->i1_LED_UpdatePWM
    i1_LED_UpdatePWM->i1_PWM5_LoadDutyValue
    _RTC_Run->_RTC_IsLeapYear
    _RTC_IsLeapYear->___lwmod
    _EUSART_RCV_ISR->_BLE_Receive

Critical Paths under _main in BANK0

    _registerCallback->_EUSART_SetReceiveCallback
    _registerCallback->_KEY_SetOnStateChangedCallback
    _registerCallback->_TMR0_SetInterruptCallback
    _registerCallback->_TMR2_SetInterruptCallback
    _SYSTEM_Initialize->_PIN_Initialize
    _LED_Initialize->_LED_InitPara
    _LED_ReadPara->_EEPROM_ReadBuffer
    _EEPROM_ReadBuffer->_EEPROM_Read
    _EEPROM_Read->_EEPROM_ReadByte
    _LED_ActionOnSecond->_LED_AutoRun
    _LED_SavePara->_EEPROM_WriteBuffer
    _EEPROM_WriteBuffer->_EEPROM_Write
    _EEPROM_Write->_EEPROM_WriteByte
    _LED_FindDeviceFlash->_LED_InitStatus
    _LED_TurnOff->_PWM5_LoadDutyValue
    _LED_TurnMax->_PWM5_LoadDutyValue
    _LED_InitStatus->_LED_UpdateDayBright
    _LED_InitStatus->_LED_UpdateNightBright
    _LED_UpdateNightBright->_LED_UpdatePWM
    _LED_UpdateDayBright->_LED_UpdatePWM
    _LED_AutoRun->___lldiv
    ___wmul->___bmul
    ___lldiv->___lmul
    _BLE_Initialize->_BLE_CheckDevID
    _BLE_CheckDevID->_BLE_SendCMD
    _BLE_SendCMD->_EUSART_Write
    _BLE_DecodeData->_LED_ManualDecrease
    _BLE_DecodeData->_LED_ManualIncrease
    _BLE_DecodeData->_LED_SetPreviewBrights
    _LED_SetPreviewBrights->_LED_UpdatePWM
    _LED_UpdatePWM->_PWM5_LoadDutyValue
    _LED_SetOn->_LED_TurnOffRamp
    _LED_SetOn->_LED_TurnOnRamp
    _LED_SetCustom->___lwdiv
    _LED_SetAuto->_LED_TurnOffRamp
    _LED_SetAuto->_LED_TurnOnRamp
    _LED_ManualIncrease->_Util_Increase
    _LED_ManualDecrease->_Util_Decrease
    _BLE_SendOTAAck->_BLE_StartTransmit
    _BLE_SendOTAAck->_EUSART_Write
    _BLE_SendDeviceData->_BLE_StartTransmit
    _BLE_SendDeviceData->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22733
                     _BLE_DecodeData
                     _BLE_Initialize
                 _BLE_ReadyToReceive
                _BLE_ReceiveComplete
                   _BLE_StartReceive
                    _BLE_StopReceive
                 _LED_ActionOnSecond
                     _LED_Initialize
                     _RTC_Initialize
                  _RTC_IsSecondReady
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                   _registerCallback
 ---------------------------------------------------------------------------------
 (1) _registerCallback                                     0     0      0     344
          _EUSART_SetReceiveCallback
      _KEY_SetOnStateChangedCallback
          _TMR0_SetInterruptCallback
          _TMR2_SetInterruptCallback
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptCallback                            2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptCallback                            2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _KEY_SetOnStateChangedCallback                        2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_SetReceiveCallback                            2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
                     _PIN_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_Initialize                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_IsSecondReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Initialize                                       0     0      0    3986
                       _LED_InitPara
                     _LED_InitStatus
 ---------------------------------------------------------------------------------
 (2) _LED_InitPara                                         4     4      0    1105
                                              8 BANK0      4     4      0
                       _LED_ReadPara
            _LED_UpdateDayRiseStatus
          _LED_UpdateNightRiseStatus
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _LED_UpdateNightRiseStatus                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_UpdateDayRiseStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_ReadPara                                         0     0      0     415
                  _EEPROM_ReadBuffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_ReadBuffer                                    5     3      2     415
                                              3 BANK0      5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (5) _EEPROM_Read                                          1     1      0     153
                                              2 BANK0      1     1      0
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (6) _EEPROM_ReadByte                                      2     0      2     131
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_ActionOnSecond                                   0     0      0   12531
                        _LED_AutoRun
                _LED_FindDeviceFlash
                        _LED_Preview
                       _LED_SavePara
 ---------------------------------------------------------------------------------
 (2) _LED_SavePara                                         0     0      0     610
                 _EEPROM_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteBuffer                                   5     3      2     610
                                              6 BANK0      5     3      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         2     1      1     348
                                              4 BANK0      2     1      1
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (5) _EEPROM_WriteByte                                     4     1      3     240
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_Preview                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_FindDeviceFlash                                  0     0      0    5089
                     _LED_InitStatus
                        _LED_TurnMax
                        _LED_TurnOff
 ---------------------------------------------------------------------------------
 (3) _LED_TurnOff                                          0     0      0    1104
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                 _PWM5_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _LED_TurnMax                                          0     0      0    1104
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                 _PWM5_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _LED_InitStatus                                       1     1      0    2881
                                              6 BANK0      1     1      0
                    _LED_IndicateBle
                    _LED_IndicateDay
                  _LED_IndicateNight
                    _LED_IndicateOff
                    _LED_TurnOffRamp
                     _LED_TurnOnRamp
                _LED_UpdateDayBright
              _LED_UpdateNightBright
 ---------------------------------------------------------------------------------
 (3) _LED_UpdateNightBright                                1     1      0    1394
                                              5 BANK0      1     1      0
                      _LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (3) _LED_UpdateDayBright                                  1     1      0    1306
                                              5 BANK0      1     1      0
                      _LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (3) _LED_IndicateOff                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_IndicateNight                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_IndicateDay                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_AutoRun                                         54    54      0    6832
                                             25 BANK0     54    54      0
                      _LED_UpdatePWM
                        _RTC_GetHour
                      _RTC_GetMinute
                      _RTC_GetSecond
                             ___bmul
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2232
                                              3 BANK0      6     2      4
                        _RTC_GetHour (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     732
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTC_GetSecond                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTC_GetMinute                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTC_GetHour                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLE_StopReceive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLE_StartReceive                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _BLE_ReceiveComplete                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLE_ReadyToReceive                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BLE_Initialize                                       2     2      0    1112
                                             37 BANK0      2     2      0
                     _BLE_CheckDevID
                        _BLE_SendCMD
 ---------------------------------------------------------------------------------
 (2) _BLE_CheckDevID                                      22    22      0     626
                                             15 BANK0     22    22      0
                        _BLE_SendCMD
 ---------------------------------------------------------------------------------
 (2) _BLE_SendCMD                                         14    12      2     486
                                              1 BANK0     14    12      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _BLE_DecodeData                                       2     2      0    4737
                                             11 BANK0      2     2      0
                 _BLE_SendDeviceData
                     _BLE_SendOTAAck
                    _LED_IndicateBle
                 _LED_ManualDecrease
                 _LED_ManualIncrease
              _LED_PrepareToSavePara
                        _LED_SetAuto
                      _LED_SetCustom
                       _LED_SetCycle
               _LED_SetManualBrights
                          _LED_SetOn
              _LED_SetPreviewBrights
                     _LED_StartFlash
                   _LED_StartPreview
                    _LED_StopPreview
                 _RTC_SetCurrentTime
 ---------------------------------------------------------------------------------
 (2) _RTC_SetCurrentTime                                   3     3      0     142
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LED_StopPreview                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_StartPreview                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_StartFlash                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_SetPreviewBrights                                6     6      0    1425
                                              5 BANK0      6     6      0
                      _LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (4) _LED_UpdatePWM                                        1     1      0    1194
                                              4 BANK0      1     1      0
                 _PWM1_LoadDutyValue *
                 _PWM2_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                 _PWM5_LoadDutyValue *
 ---------------------------------------------------------------------------------
 (5) _PWM5_LoadDutyValue                                   4     2      2     173
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _PWM4_LoadDutyValue                                   2     0      2     265
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _PWM3_LoadDutyValue                                   2     0      2     222
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _PWM2_LoadDutyValue                                   2     0      2     222
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _PWM1_LoadDutyValue                                   2     0      2     222
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LED_SetOn                                            1     1      0     180
                                              1 BANK0      1     1      0
                    _LED_TurnOffRamp
                     _LED_TurnOnRamp
 ---------------------------------------------------------------------------------
 (2) _LED_SetManualBrights                                 6     6      0     275
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _LED_SetCycle                                         4     4      0     143
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _LED_SetCustom                                        3     3      0     802
                                              7 BANK0      3     3      0
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     378
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _LED_SetAuto                                          1     1      0     180
                                              1 BANK0      1     1      0
                    _LED_TurnOffRamp
                     _LED_TurnOnRamp
 ---------------------------------------------------------------------------------
 (3) _LED_TurnOnRamp                                       1     1      0      90
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_TurnOffRamp                                      1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_PrepareToSavePara                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_ManualIncrease                                   2     1      1     646
                                              9 BANK0      2     1      1
                      _Util_Increase
 ---------------------------------------------------------------------------------
 (3) _Util_Increase                                        9     4      5     472
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _LED_ManualDecrease                                   2     1      1     646
                                              9 BANK0      2     1      1
                      _Util_Decrease
 ---------------------------------------------------------------------------------
 (3) _Util_Decrease                                        9     4      5     472
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _LED_IndicateBle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLE_SendOTAAck                                       0     0      0      66
                  _BLE_StartTransmit
                   _BLE_StopTransmit
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _BLE_SendDeviceData                                   3     3      0     232
                                              1 BANK0      3     3      0
                  _BLE_StartTransmit
                   _BLE_StopTransmit
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BLE_StopTransmit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BLE_StartTransmit                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0    6223
                     _EUSART_RCV_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0    5546
                   Absolute function *
             _TMR2_InterruptCallback *
 ---------------------------------------------------------------------------------
 (9) _TMR2_InterruptCallback                               0     0      0    5546
                           _KEY_Scan
               _LED_UpdateBrightRamp
 ---------------------------------------------------------------------------------
 (10) _LED_UpdateBrightRamp                                7     7      0     743
                                              5 COMMON     7     7      0
                    i1_LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (10) _KEY_Scan                                            1     1      0    4803
                                             12 COMMON     1     1      0
                   Absolute function *
                           _KEY_Read
       _LED_Action_OnKeyStateChanged *
 ---------------------------------------------------------------------------------
 (11) _LED_Action_OnKeyStateChanged                        2     0      2    4624
                                             10 COMMON     2     0      2
_LED_StateBleAction_OnKeyStateChange *
_LED_StateDayAction_OnKeyStateChange *
_LED_StateNightAction_OnKeyStateChan *
_LED_StateOffAction_OnKeyStateChange *
 ---------------------------------------------------------------------------------
 (12) _LED_StateOffAction_OnKeyStateChanged                2     0      2    1310
                                              8 COMMON     2     0      2
  _LED_StateOffAction_OnKeyPressCont
 _LED_StateOffAction_OnKeyPressShort
 ---------------------------------------------------------------------------------
 (13) _LED_StateOffAction_OnKeyPressShort                  0     0      0     633
                  i1_LED_IndicateDay
              i1_LED_UpdateDayBright
          i1_LED_UpdateDayRiseStatus
 ---------------------------------------------------------------------------------
 (13) _LED_StateOffAction_OnKeyPressCont                   0     0      0     633
                  i1_LED_IndicateDay
              i1_LED_UpdateDayBright
 ---------------------------------------------------------------------------------
 (14) i1_LED_IndicateDay                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _LED_StateNightAction_OnKeyStateChanged              2     0      2     765
                                              8 COMMON     2     0      2
      _LED_StateNight_OnKeyPressCont
     _LED_StateNight_OnKeyPressShort
        _LED_StateNight_OnKeyRelease
 ---------------------------------------------------------------------------------
 (13) _LED_StateNight_OnKeyRelease                         0     0      0       0
        i1_LED_UpdateNightRiseStatus
 ---------------------------------------------------------------------------------
 (13) _LED_StateNight_OnKeyPressShort                      0     0      0       0
                  i1_LED_IndicateBle
 ---------------------------------------------------------------------------------
 (14) i1_LED_IndicateBle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LED_StateNight_OnKeyPressCont                       2     2      0     721
                                              6 COMMON     2     2      0
            i1_LED_UpdateNightBright
 ---------------------------------------------------------------------------------
 (12) _LED_StateDayAction_OnKeyStateChanged                2     0      2    1398
                                              8 COMMON     2     0      2
        _LED_StateDay_OnKeyPressCont
       _LED_StateDay_OnKeyPressShort
          _LED_StateDay_OnKeyRelease
 ---------------------------------------------------------------------------------
 (13) _LED_StateDay_OnKeyRelease                           0     0      0       0
          i1_LED_UpdateDayRiseStatus
 ---------------------------------------------------------------------------------
 (14) i1_LED_UpdateDayRiseStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LED_StateDay_OnKeyPressShort                        0     0      0     721
                i1_LED_IndicateNight
            i1_LED_UpdateNightBright
        i1_LED_UpdateNightRiseStatus
 ---------------------------------------------------------------------------------
 (14) i1_LED_UpdateNightRiseStatus                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_LED_UpdateNightBright                             1     1      0     721
                                              5 COMMON     1     1      0
                    i1_LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (14) i1_LED_IndicateNight                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LED_StateDay_OnKeyPressCont                         2     2      0     633
                                              6 COMMON     2     2      0
              i1_LED_UpdateDayBright
 ---------------------------------------------------------------------------------
 (14) i1_LED_UpdateDayBright                               1     1      0     633
                                              5 COMMON     1     1      0
                    i1_LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (12) _LED_StateBleAction_OnKeyStateChanged                2     0      2     763
                                              8 COMMON     2     0      2
       _LED_StateBle_OnKeyPressShort
 ---------------------------------------------------------------------------------
 (13) _LED_StateBle_OnKeyPressShort                        1     1      0     633
                                              5 COMMON     1     1      0
                  i1_LED_IndicateOff
                    i1_LED_UpdatePWM
 ---------------------------------------------------------------------------------
 (11) i1_LED_UpdatePWM                                     1     1      0     521
                                              4 COMMON     1     1      0
               i1_PWM1_LoadDutyValue *
               i1_PWM2_LoadDutyValue *
               i1_PWM3_LoadDutyValue *
               i1_PWM4_LoadDutyValue *
               i1_PWM5_LoadDutyValue *
 ---------------------------------------------------------------------------------
 (12) i1_PWM5_LoadDutyValue                                4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM4_LoadDutyValue                                2     0      2     116
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM3_LoadDutyValue                                2     0      2      90
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM2_LoadDutyValue                                2     0      2      90
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM1_LoadDutyValue                                2     0      2      90
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) i1_LED_IndicateOff                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _KEY_Read                                            1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0     567
                   Absolute function *
                            _RTC_Run *
 ---------------------------------------------------------------------------------
 (9) _RTC_Run                                              0     0      0     567
                     _RTC_IsLeapYear
 ---------------------------------------------------------------------------------
 (10) _RTC_IsLeapYear                                      2     0      2     567
                                              5 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (11) ___lwmod                                             5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_RCV_ISR                                       1     1      0     110
                                              1 COMMON     1     1      0
                   Absolute function *
                        _BLE_Receive *
 ---------------------------------------------------------------------------------
 (9) _BLE_Receive                                          1     0      1      87
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLE_DecodeData
     _BLE_SendDeviceData
       _BLE_StartTransmit
       _BLE_StopTransmit
       _EUSART_Write
     _BLE_SendOTAAck
       _BLE_StartTransmit
       _BLE_StopTransmit
       _EUSART_Write
     _LED_IndicateBle
     _LED_ManualDecrease
       _Util_Decrease
     _LED_ManualIncrease
       _Util_Increase
     _LED_PrepareToSavePara
     _LED_SetAuto
       _LED_TurnOffRamp
       _LED_TurnOnRamp
     _LED_SetCustom
       ___bmul
       ___lwdiv
     _LED_SetCycle
     _LED_SetManualBrights
     _LED_SetOn
       _LED_TurnOffRamp
       _LED_TurnOnRamp
     _LED_SetPreviewBrights
       _LED_UpdatePWM
         _PWM1_LoadDutyValue *
         _PWM2_LoadDutyValue *
         _PWM3_LoadDutyValue *
         _PWM4_LoadDutyValue *
         _PWM5_LoadDutyValue *
     _LED_StartFlash
     _LED_StartPreview
     _LED_StopPreview
     _RTC_SetCurrentTime
   _BLE_Initialize
     _BLE_CheckDevID
       _BLE_SendCMD
         _EUSART_Write
     _BLE_SendCMD
       _EUSART_Write
   _BLE_ReadyToReceive
   _BLE_ReceiveComplete
   _BLE_StartReceive
   _BLE_StopReceive
   _LED_ActionOnSecond
     _LED_AutoRun
       _LED_UpdatePWM
         _PWM1_LoadDutyValue *
         _PWM2_LoadDutyValue *
         _PWM3_LoadDutyValue *
         _PWM4_LoadDutyValue *
         _PWM5_LoadDutyValue *
       _RTC_GetHour
       _RTC_GetMinute
       _RTC_GetSecond
       ___bmul
       ___lldiv
         ___lmul (ARG)
         ___wmul (ARG)
           _RTC_GetHour (ARG)
           ___bmul (ARG)
       ___lmul
       ___wmul
         _RTC_GetHour (ARG)
         ___bmul (ARG)
     _LED_FindDeviceFlash
       _LED_InitStatus
         _LED_IndicateBle
         _LED_IndicateDay
         _LED_IndicateNight
         _LED_IndicateOff
         _LED_TurnOffRamp
         _LED_TurnOnRamp
         _LED_UpdateDayBright
           _LED_UpdatePWM
             _PWM1_LoadDutyValue *
             _PWM2_LoadDutyValue *
             _PWM3_LoadDutyValue *
             _PWM4_LoadDutyValue *
             _PWM5_LoadDutyValue *
         _LED_UpdateNightBright
           _LED_UpdatePWM
             _PWM1_LoadDutyValue *
             _PWM2_LoadDutyValue *
             _PWM3_LoadDutyValue *
             _PWM4_LoadDutyValue *
             _PWM5_LoadDutyValue *
       _LED_TurnMax
         _PWM1_LoadDutyValue
         _PWM2_LoadDutyValue
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
         _PWM5_LoadDutyValue
       _LED_TurnOff
         _PWM1_LoadDutyValue
         _PWM2_LoadDutyValue
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
         _PWM5_LoadDutyValue
     _LED_Preview
     _LED_SavePara
       _EEPROM_WriteBuffer
         _EEPROM_Write
           _EEPROM_WriteByte
   _LED_Initialize
     _LED_InitPara
       _LED_ReadPara
         _EEPROM_ReadBuffer
           _EEPROM_Read
             _EEPROM_ReadByte
       _LED_UpdateDayRiseStatus
       _LED_UpdateNightRiseStatus
       ___bmul
     _LED_InitStatus
       _LED_IndicateBle
       _LED_IndicateDay
       _LED_IndicateNight
       _LED_IndicateOff
       _LED_TurnOffRamp
       _LED_TurnOnRamp
       _LED_UpdateDayBright
         _LED_UpdatePWM
           _PWM1_LoadDutyValue *
           _PWM2_LoadDutyValue *
           _PWM3_LoadDutyValue *
           _PWM4_LoadDutyValue *
           _PWM5_LoadDutyValue *
       _LED_UpdateNightBright
         _LED_UpdatePWM
           _PWM1_LoadDutyValue *
           _PWM2_LoadDutyValue *
           _PWM3_LoadDutyValue *
           _PWM4_LoadDutyValue *
           _PWM5_LoadDutyValue *
   _RTC_Initialize
   _RTC_IsSecondReady
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_StartTimer
   _TMR2_StartTimer
   _registerCallback
     _EUSART_SetReceiveCallback
     _KEY_SetOnStateChangedCallback
     _TMR0_SetInterruptCallback
     _TMR2_SetInterruptCallback

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_RCV_ISR
     Absolute function(Fake) *
     _BLE_Receive *
   _EUSART_Transmit_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _RTC_Run *
       _RTC_IsLeapYear
         ___lwmod
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_InterruptCallback *
       _KEY_Scan
         Absolute function(Fake) *
         _KEY_Read *
         _LED_Action_OnKeyStateChanged *
           _LED_StateBleAction_OnKeyStateChanged *
             _LED_StateBle_OnKeyPressShort
               i1_LED_IndicateOff
               i1_LED_UpdatePWM
                 i1_PWM1_LoadDutyValue *
                 i1_PWM2_LoadDutyValue *
                 i1_PWM3_LoadDutyValue *
                 i1_PWM4_LoadDutyValue *
                 i1_PWM5_LoadDutyValue *
           _LED_StateDayAction_OnKeyStateChanged *
             _LED_StateDay_OnKeyPressCont
               i1_LED_UpdateDayBright
                 i1_LED_UpdatePWM
                   i1_PWM1_LoadDutyValue *
                   i1_PWM2_LoadDutyValue *
                   i1_PWM3_LoadDutyValue *
                   i1_PWM4_LoadDutyValue *
                   i1_PWM5_LoadDutyValue *
             _LED_StateDay_OnKeyPressShort
               i1_LED_IndicateNight
               i1_LED_UpdateNightBright
                 i1_LED_UpdatePWM
                   i1_PWM1_LoadDutyValue *
                   i1_PWM2_LoadDutyValue *
                   i1_PWM3_LoadDutyValue *
                   i1_PWM4_LoadDutyValue *
                   i1_PWM5_LoadDutyValue *
               i1_LED_UpdateNightRiseStatus
             _LED_StateDay_OnKeyRelease
               i1_LED_UpdateDayRiseStatus
           _LED_StateNightAction_OnKeyStateChanged *
             _LED_StateNight_OnKeyPressCont
               i1_LED_UpdateNightBright
                 i1_LED_UpdatePWM
                   i1_PWM1_LoadDutyValue *
                   i1_PWM2_LoadDutyValue *
                   i1_PWM3_LoadDutyValue *
                   i1_PWM4_LoadDutyValue *
                   i1_PWM5_LoadDutyValue *
             _LED_StateNight_OnKeyPressShort
               i1_LED_IndicateBle
             _LED_StateNight_OnKeyRelease
               i1_LED_UpdateNightRiseStatus
           _LED_StateOffAction_OnKeyStateChanged *
             _LED_StateOffAction_OnKeyPressCont
               i1_LED_IndicateDay
               i1_LED_UpdateDayBright
                 i1_LED_UpdatePWM
                   i1_PWM1_LoadDutyValue *
                   i1_PWM2_LoadDutyValue *
                   i1_PWM3_LoadDutyValue *
                   i1_PWM4_LoadDutyValue *
                   i1_PWM5_LoadDutyValue *
             _LED_StateOffAction_OnKeyPressShort
               i1_LED_IndicateDay
               i1_LED_UpdateDayBright
                 i1_LED_UpdatePWM
                   i1_PWM1_LoadDutyValue *
                   i1_PWM2_LoadDutyValue *
                   i1_PWM3_LoadDutyValue *
                   i1_PWM4_LoadDutyValue *
                   i1_PWM5_LoadDutyValue *
               i1_LED_UpdateDayRiseStatus
       _LED_UpdateBrightRamp
         i1_LED_UpdatePWM
           i1_PWM1_LoadDutyValue *
           i1_PWM2_LoadDutyValue *
           i1_PWM3_LoadDutyValue *
           i1_PWM4_LoadDutyValue *
           i1_PWM5_LoadDutyValue *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      11      11       21.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar 20 09:40:02 2018

                                ?_RTC_IsLeapYear 0075                               _LED_ManualDecrease 0DC3  
                           LED_UpdateDayBright@i 0025                                                pc 0002  
                      _EUSART_SetReceiveCallback 15BB                                   ___bmul@product 0021  
                                             PL2 0B4B                                               PL4 05CC  
                                             PL6 0B67                                               PL8 0B6E  
                                             l77 1795                             i1_PWM1_LoadDutyValue 06F0  
                         __size_of_LED_UpdatePWM 0018                              ___wmul@multiplicand 0025  
                              ??i1_LED_UpdatePWM 0074                       __size_ofi1_LED_IndicateBle 0002  
                     __size_ofi1_LED_IndicateDay 0001                       __size_ofi1_LED_IndicateOff 0001  
                         ??i1_PWM4_LoadDutyValue 0072                    i1PWM5_LoadDutyValue@dutyValue 0070  
                                            PL10 0B7A                                              PL20 0B9E  
                                            PL12 0B86                                              PL30 0BA8  
                                            PL22 05E7                                              PL14 0B8E  
                                            PL40 05F0                                              PL32 072C  
                                            PL24 0FB8                                              PL16 0B96  
                                            PL50 0607                                              PL42 05F8  
                                            PL34 0BB1                                              PL26 0FBF  
                                            PL18 05DE                                              PL60 0749  
                                            PL52 0FCC                                              PL44 0600  
                                            PL36 0734                                              PL28 0724  
                                            PL70 074E                                              PL62 060E  
                                            PL54 0744                                              PL46 0BBA  
                                            PL38 073C                                              PL80 0FE3  
                                            PL72 0FD9                                              PL64 0614  
                                            PL56 0FD3                                              PL48 0FC6  
                                            PL82 07DA                                              PL74 0753  
                                            PL66 0619                                              PL58 17FA  
                                            PL76 0BC2                                              PL68 170C  
                                            PL78 0FDE                       __size_of_EEPROM_ReadBuffer 0014  
                            ?_LED_ManualDecrease 0029                              EEPROM_WriteBuffer@i 002A  
                                  _Util_Increase 0F0A                                              l103 0DB5  
                                            l126 0D34                                              l163 0D14  
                                            l293 0C0A                                              l471 062F  
                                            l733 0E48                                              l656 0E1B  
                                            l664 0E0A                                              l769 0C70  
                                            l892 0D8F                                              _GIE 005F  
                                            _RA2 0062     __end_of_LED_StateDayAction_OnKeyStateChanged 0484  
  __size_of_LED_StateDayAction_OnKeyStateChanged 0014           ??_LED_StateDayAction_OnKeyStateChanged 007A  
          ?_LED_StateDayAction_OnKeyStateChanged 0078             _LED_StateDayAction_OnKeyStateChanged 0470  
                                            _PR2 001E                               _LED_ManualIncrease 0EEB  
                                _TMR2_Initialize 16E3                                  _PWM4_Initialize 16CE  
                                            wreg 0009                                     ?_LED_AutoRun 0070  
                       ?i1_LED_UpdateNightBright 0070                          __size_of_LED_StartFlash 0005  
                                           S5297 07DF                                     ?_LED_SetAuto 0070  
                            ?_LED_ManualIncrease 0029                                     ?_LED_Preview 0070  
                                           l1196 0AC0                                             l4111 14E0  
                                           l4201 0AF4                                             l5011 0CC2  
                                           l5003 0CB9                                             l4051 0BD9  
                                           l4107 0B3A                                             l4115 14EA  
                                           l4213 0B17                                             l4311 0D60  
                                           l5031 0CE2                                             l4151 0A9D  
                                           l4071 0E23                                             l4321 0D71  
                                           l4313 0D6D                                             l5041 0CF3  
                                           l5025 0CD6                                             l4209 0B11  
                                           l4081 0E3B                                             l4073 0E34  
                                           l4323 0D7E                                             l4235 0885  
                                           l4227 0876                                             l4403 0F82  
                                           l3603 06BA                                             l5019 0CCA  
                                           l4155 0AA3                                             l4083 0E3C  
                                           l4067 064A                                             l3605 06BF  
                                           l5053 0D02                                             l5037 0CEE  
                                           l4077 0E37                                             l4351 0E21  
                                           l4239 0889                                             l5071 0D29  
                                           l4361 0DB0                                             l4513 1568  
                                           l5049 0CFD                                             l4265 17E1  
                                           l4169 0ACA                                             l4089 0E41  
                                           l3561 1550                                             l4291 0D47  
                                           l4179 0AB2                                             l3715 0E99  
                                           l4275 17EA                                             l5091 1742  
                                           l4429 0849                                             l3581 066F  
                                           l3573 0697                                             l3709 0E98  
                                           l4533 0FF7                                             l4285 17D6  
                            PIN_Initialize@state 0020                                             l3831 0EB2  
                                           l4519 1588                                             l5263 0C81  
                                           l3825 0EB0                                             l4457 0F3D  
                                           l4553 0FF2                                             l4537 0FFC  
                                           l4801 0A94                                             l3809 1538  
                                           l4705 15BB                                             l5257 0C78  
                                           l3843 0E4B                                             l3587 067E  
                                           l3595 0692                                             l3579 06A6  
                                           l4547 0F8B                                             l3683 0BF3  
                                           l4707 0BC7                                             l5187 0834  
                                           l5179 0827                                             l3773 0D84  
                                           l3837 0E49                                             l4397 0F59  
                                           l3589 0683                                             l3597 06AB  
                                           l5189 0836                                             l3951 17A9  
                                           l3945 179C                                             l3953 17AA  
                                           l3961 17B9                                             l4737 099C  
                                           l4913 092C                                             l4681 16ED  
                                           l3787 0D9F                                             l3939 1781  
                                           l4923 0945                                             l4749 09BC  
                                           l3893 0E72                                             l4909 0922  
                                           l4845 0897                                             l3879 0E5A  
                                           l4919 093B                                             l4855 08B3  
                                           l3897 0E87                                             l4849 08B2  
                                           l4787 0A36                                             l3899 0E91  
                                           l4859 08CF                                             l4869 08F0  
                                           l4983 0CA0                                             l4993 0CA9  
                                           l4985 0CA1                                             l4977 0C94  
                   __size_of_LED_FindDeviceFlash 0013                                             l4999 0CB4  
                                           STR_1 1822                                             STR_2 1800  
                                           STR_3 1844                                             STR_4 1835  
                        __end_of_PWM1_Initialize 16BA                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u4015 09D6                                             u4025 09DE  
                                           u3315 0F1F                                             u4035 09E6  
                                           u3325 0ED9                                             u4045 09F6  
                                           u3510 17C9                                             u5007 1746  
                                           u4055 09FE                                             u5017 1756  
                                           u4065 0A0D                                             u2715 06B5  
                                           u5027 1766                                             u5037 17EB  
                                           u3445 0B06                                             u2655 06A1  
                                           u5047 17AB                                             u5057 0D20  
                                           u5067 0DB9                                             u2675 0679  
                                           u5077 0DAA                                             u3485 087E  
                                           u2695 068D                          ??_LED_UpdateNightBright 0025  
                                           u2980 1778                                             u3940 16AE  
                                           u4957 0FAA                                             u4967 0FA1  
                                           u4977 1719                                             u4987 1726  
                                           u4997 1736                              BLE_CheckDevID@F8119 01A0  
                                           _TMR2 001D                      __size_of_LED_ActionOnSecond 0019  
                                           _TRMT 0CF1                                             _WPUA 020C  
                                           _WPUB 020D                                             _WPUC 020E  
                                   ?_LED_TurnOff 0070                                     ?_LED_TurnMax 0070  
                              ?_BLE_StartReceive 0070                             ??_LED_ManualDecrease 002A  
                                           _main 0C5D                                  _TMR0_StartTimer 0FB3  
                                           fsr0h 0005                                             fsr1h 0007  
                                           indf0 0000                                             fsr0l 0004  
                                           indf1 0001                                             fsr1l 0006  
                           EEPROM_WriteByte@addr 0020                                 ?_BLE_StopReceive 0070  
                                           btemp 007E                                  __end_of_RTC_Run 079E  
                         ??_LED_SetManualBrights 0020                             EEPROM_WriteByte@byte 0022  
                             ??_BLE_StartReceive 0020                                             start 042E  
                             __size_of_LED_SetOn 0014                                  ?_RTC_Initialize 0070  
                                _PWM5_Initialize 16D9                     __size_ofi1_LED_IndicateNight 0001  
                       __size_of_EEPROM_ReadByte 000E                                    ?_LED_InitPara 0070  
                                 ?_Util_Decrease 0020                                    ?_LED_ReadPara 0070  
                        __size_of_LED_TurnOnRamp 0012                                ___bmul@multiplier 0022  
                            BLE_CheckDevID@index 0044                       __end_of_PWM5_LoadDutyValue 06D9  
                           ??_LED_ManualIncrease 002A                                    ?_LED_SetCycle 0070  
                                  ?_LED_SavePara 0070                            ?i1_PWM1_LoadDutyValue 0070  
                           __end_of_EEPROM_Write 0BF3                          __end_of_PWM2_Initialize 16C3  
                        __end_of_TMR0_Initialize 170C                        _LED_StateDay_OnKeyRelease 05C3  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 000A  
                  __end_of_OSCILLATOR_Initialize 1666                            EEPROM_WriteBuffer@len 0027  
                                 ?_Util_Increase 0020                               _BLE_SendDeviceData 0D47  
                            RTC_SetCurrentTime@i 0022                                    _LED_SetCustom 083A  
                                          ?_main 0070                    __size_ofi1_PWM3_LoadDutyValue 000D  
                                __end_of___lldiv 0B20                                            _T2CON 001F  
                                          _LATC1 0871                                            _LATB5 086D  
                                __end_of___lwdiv 088E                                 __end_of_KEY_Read 1649  
                                          i1l262 15D5                                            i1l271 041A  
                                __end_of___lwmod 07DA                                            i1l273 0424  
                               __end_of_KEY_Scan 163B                                            i1l604 0443  
                                          i1l276 042C                                            i1l269 0410  
                                          i1l552 0515                                            i1l624 14F9  
                                          i1l609 0443                                            i1l625 1508  
                                          i1l564 049A                                            i1l557 0515  
                                          i1l590 045A                                            i1l583 0483  
                                          i1l578 0483                                            i1l871 150E  
                 ??_LED_StateDay_OnKeyPressShort 0076                                            i1l876 1534  
                                          _RCREG 0199                                            _OSCEN 091D  
                             _PWM4_LoadDutyValue 06A8                                            _TMR0H 0016  
                                          _TMR0L 0015                                            _PORTC 000E  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                           i1_PWM5_LoadDutyValue 06D9             __size_ofi1_LED_UpdateNightRiseStatus 0014  
                        __size_of_PIN_Initialize 004A                              ___lmul@multiplicand 0024  
                        __size_of_BLE_Initialize 005C                                 __end_of_TMR0_ISR 1497  
                               __end_of_TMR2_ISR 14A3                              ?_BLE_SendDeviceData 0070  
                   __end_of_LED_UpdateBrightRamp 0598      LED_StateNightAction_OnKeyStateChanged@state 0079  
                          _LED_SetPreviewBrights 155E                                            _rxBuf 0220  
                       __size_of_LED_StopPreview 0004                              ?_PWM4_LoadDutyValue 0020  
                                          _txBuf 02A0                                      LED_SetOn@on 0021  
                            _LED_UpdateDayBright 0E58                                    _LED_UpdatePWM 0E98  
                   __end_ofi1_PWM2_LoadDutyValue 070A                          __end_of_PWM3_Initialize 16CE  
                        __size_of_BLE_SendOTAAck 0012                                            pclath 000A  
                         ?_LED_PrepareToSavePara 0070                   ?_KEY_SetOnStateChangedCallback 0020  
                              _BLE_StartTransmit 0DA4                                            status 0003  
                                          wtemp0 007E                                  _TMR2_StartTimer 0FB6  
                     __size_of_LED_IndicateNight 0002                                  ??_RTC_GetMinute 0020  
                                ??_RTC_GetSecond 0020                               ?_BLE_StartTransmit 0070  
                               EEPROM_Write@addr 0025                                 EEPROM_Write@byte 0024  
                                 ??_LED_InitPara 0028                                   ??_LED_ReadPara 0028  
                           __size_of_EEPROM_Read 0006                         __size_of_LED_TurnOffRamp 000B  
                              ?_BLE_StopTransmit 0070                                  LED_TurnOnRamp@i 0020  
                           ??_BLE_SendDeviceData 0021                                  __initialization 0C14  
                                 _LED_InitStatus 0E23                                   ??_LED_SetCycle 0020  
                                 ??_LED_SavePara 002B                          LED_ManualIncrease@delta 0029  
                                   __end_of_main 0C8A                             __size_of_BLE_SendCMD 0050  
                             ??_BLE_StopTransmit 0020                                ?_registerCallback 0070  
                           __size_of_BLE_Receive 000F                              ??_BLE_StartTransmit 0020  
                           ??_PWM4_LoadDutyValue 0022                             ?_LED_UpdateDayBright 0070  
                                 _LED_Initialize 0DF0                                   BLE_SendCMD@ack 0024  
                                 ??_EUSART_Write 0020                                   BLE_SendCMD@cnt 002B  
                                 BLE_SendCMD@rev 002D                          __end_of_PWM4_Initialize 16D9  
                        __end_of_TMR2_Initialize 16ED                               ??_registerCallback 0022  
                    ?_INTERRUPT_InterruptManager 0070                                   ?_LED_SetCustom 0070  
                      LED_SetPreviewBrights@pbuf 0029                  __end_ofi1_LED_UpdateNightBright 04EF  
                                         ??_main 006F                                   BLE_Receive@rcv 0070  
                              _RTC_IsSecondReady 0DF4                       __end_of_RTC_SetCurrentTime 0F9A  
                                 _EUSART_RCV_ISR 1509                            ?i1_PWM5_LoadDutyValue 0070  
                             ?_RTC_IsSecondReady 0070                                __end_of_LED_SetOn 0E0E  
                ??_LED_StateNight_OnKeyPressCont 0076                           EEPROM_WriteBuffer@addr 0029  
                         EEPROM_WriteBuffer@pbuf 0026                          __end_of_TMR0_StartTimer 0FB6  
                      __end_of_BLE_StartTransmit 0DB0                                   ?_LED_UpdatePWM 0070  
                                         _CCPR1H 0292                                           _CCPR2H 0296  
                                         _CCPR3H 0312                                           _CCPR1L 0291  
                                         _CCPR4H 0316                                           _CCPR2L 0295  
                                         _CCPR3L 0311                                           _CCPR4L 0315  
                       __end_of_LED_StartPreview 0FFC                                        ??_RTC_Run 0077  
                               Util_Decrease@min 0023                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         _T0CON0 0017                                           _T0CON1 0018  
                                         _RC1STA 019D                              ??_RTC_IsSecondReady 0020  
                               ?_PWM1_Initialize 0070                                           _ODCONA 028C  
                                         _ODCONB 028D                                           _ODCONC 028E  
                                         i1l4005 1623                                           i1l4013 1637  
                                         i1l4015 055B                                           i1l4033 0578  
                                         i1l4037 0589                                           i1l4029 0568  
                                         i1l3431 06F0                                           i1l4039 0591  
                                         i1l3531 0551                                           i1l3611 0516  
                        __end_of_PWM5_Initialize 16E3                                           i1l3437 06FC  
                                         i1l3445 0709                                           i1l3453 0716  
                                         i1l3461 0723                                           i1l3541 04B8  
                                         i1l3463 06D9                                           i1l3439 06FD  
                                         i1l3447 070A                                           i1l3455 0717  
                                         i1l3519 0527                                           i1l3631 0484  
                                         i1l5145 1510                                           i1l3545 04D3  
                                         i1l3625 04B0                                           i1l3617 051D  
                                         i1l3475 05AC                                           i1l3643 04AE  
                                         i1l3547 04E8                                           i1l3651 0444  
                                         i1l3637 049F                                           i1l3557 04F9  
                                         i1l3645 05C3                                           i1l3725 0513  
                                         i1l3741 0482               __size_of_TMR0_SetInterruptCallback 0008  
                                         i1l3663 046E                                           i1l3647 05C5  
                                         i1l3727 0514                                           i1l3751 0440  
                                         i1l3673 0599                                           i1l3657 045F  
                                         i1l3665 05CA                                           i1l3737 0480  
                                         i1l3753 0441                                           i1l3915 07C5  
                                         i1l3923 07D5                                           i1l3739 0481  
                                         i1l3755 0442                                           i1l3765 14F7  
                                         i1l3919 07D1                                           i1l3769 14FA  
                                         i1l4955 077E                                           i1l4971 079C  
                                         i1l3987 15F6                                           i1l3995 1635  
                                         i1l3997 160A                                           u251_25 0705  
                                         u253_25 0712                                           u255_25 071F  
                                         u249_25 06F8                                           u296_25 07CB  
                     ?_TMR0_SetInterruptCallback 0020                                           _OSCFRQ 091F  
                                         _NVMADR 0891                                   _BLE_CheckDevID 17BE  
                                         _TX1STA 019E                                   _BLE_DecodeData 0C8A  
                                ??_Util_Decrease 0025                                     LED_AutoRun@i 006E  
                                   LED_AutoRun@j 0066                                     LED_AutoRun@k 006D  
                         __end_of_LED_InitStatus 0E49                      ??_LED_UpdateNightRiseStatus 0020  
                         __end_of_LED_Initialize 0DF4                                           ___bmul 0AB0  
              TMR2_SetInterruptCallback@callback 0020                           ??i1_PWM1_LoadDutyValue 0072  
                                 _fnTmr0Callback 00A9                                           ___lmul 0ABC  
                    __size_of_PWM3_LoadDutyValue 0014                            ??_LED_UpdateDayBright 0025  
                                         ___wmul 0A9B                                        ??___lldiv 0034  
                                      ??___lwdiv 0024                                        ??___lwmod 0074  
                                ??_Util_Increase 0025                              _EUSART_Transmit_ISR 151F  
                                 _fnTmr2Callback 00A7                            LED_ManualDecrease@chn 002A  
                               ?_TMR0_Initialize 0070                                 ?_PWM2_Initialize 0070  
                              ??_EEPROM_ReadByte 0022                        __end_of_RTC_IsSecondReady 0DFA  
                                         _rcvXor 00B7                                           _txHead 00AF  
                         __end_of_EUSART_RCV_ISR 151F                                           _txTail 00B0  
                                   LED_SetAuto@a 0021                         __end_of_EEPROM_WriteByte 0C14  
                        ?_TMR2_InterruptCallback 0070                   __size_ofi1_LED_UpdateDayBright 0021  
                                 _LED_StartFlash 0FF2                           ?_LED_SetPreviewBrights 0070  
                  __end_ofi1_LED_UpdateDayBright 0547                                  _LED_IndicateBle 0DBF  
                                _LED_IndicateDay 0E54                            LED_UpdateBrightRamp@i 007B  
                                _LED_IndicateOff 0EC2                      __size_of_BLE_ReadyToReceive 0007  
                        __end_of_TMR2_StartTimer 0FB8                             __size_of_LED_AutoRun 0154  
                                    KEY_Read@Trg 00B5                           __end_of_BLE_CheckDevID 17FA  
                           ?_EUSART_Transmit_ISR 0070                             __size_of_LED_SetAuto 0015  
                               ?_PWM3_Initialize 0070                           __end_of_BLE_DecodeData 0D35  
                              _SYSTEM_Initialize 1649                                     ?_RTC_GetHour 0070  
                        __end_of__initialization 0C5A                      __end_of_BLE_ReceiveComplete 0DF0  
                           __size_of_LED_Preview 0007                __end_of_TMR0_SetInterruptCallback 15BB  
                               ??_RTC_IsLeapYear 0077                               ?_SYSTEM_Initialize 0070  
                     __end_of_PWM2_LoadDutyValue 0680                                 LED_TurnOffRamp@i 0020  
                           __size_of_LED_TurnMax 0022                             __size_of_LED_TurnOff 0018  
                                i1_LED_UpdatePWM 05AB                                ??_LED_StopPreview 0020  
                                ?_LED_InitStatus 0070                      PWM1_LoadDutyValue@dutyValue 0020  
                          __size_of_EEPROM_Write 0008                                   _LED_TurnOnRamp 0EB0  
                                      ?_KEY_Read 0070                                        ?_KEY_Scan 0070  
                            ___bmul@multiplicand 0020          LED_StateDayAction_OnKeyStateChanged@key 0078  
                              BLE_CheckDevID@dev 0030                                BLE_CheckDevID@cnt 0041  
                              BLE_CheckDevID@rev 0043                                  ?_LED_Initialize 0070  
                                 __pcstackCOMMON 0070                                     __pidataBANK1 0808  
                                   __pidataBANK2 14A3                                     __pidataBANK3 14CF  
                            ??_SYSTEM_Initialize 0021                             _LED_UpdateBrightRamp 055B  
                                      ?_TMR0_ISR 0070                                        ?_TMR2_ISR 0070  
                                ??_LED_SetCustom 0027                              _LED_FindDeviceFlash 061F  
                               i1LED_UpdatePWM@i 0074                               _PWM1_LoadDutyValue 0694  
                              ??_LED_TurnOffRamp 0020                                 ?_TMR2_Initialize 0070  
                               ?_PWM4_Initialize 0070                                       __end_ofPL2 0B67  
                                     __end_ofPL4 05DE                                       __end_ofPL6 0B6E  
                                     __end_ofPL8 0B7A                             i1_PWM2_LoadDutyValue 06FD  
                                ?_EUSART_RCV_ISR 0070                   __end_of_TMR2_InterruptCallback 15D7  
                    PWM4_LoadDutyValue@dutyValue 0020                           ??i1_PWM5_LoadDutyValue 0072  
                                BLE_SendCMD@pBuf 0021                           __end_of_LED_StartFlash 0FF7  
           __end_of_LED_Action_OnKeyStateChanged 14CF            __size_of_LED_Action_OnKeyStateChanged 0011  
                   _LED_Action_OnKeyStateChanged 14BE                                   _PIN_Initialize 1666  
                      _LED_UpdateNightRiseStatus 14E0                              ?_PWM1_LoadDutyValue 0020  
                                 _BLE_Initialize 1712                              i1_LED_IndicateNight 04B6  
                           __end_of_LED_InitPara 0947                             __end_of_LED_ReadPara 0B30  
                                ??_LED_UpdatePWM 0024                                 ?_TMR0_StartTimer 0070  
                           __end_of_LED_SetCycle 0F4D                       __size_of_BLE_StartTransmit 000C  
                           __end_of_LED_SavePara 0BD7                        __end_of_SYSTEM_Initialize 165C  
                          ??_EUSART_Transmit_ISR 0070                             ?_LED_FindDeviceFlash 0070  
                                 _BLE_SendOTAAck 0D35                                  ?_BLE_CheckDevID 0070  
          __end_of_LED_StateNight_OnKeyPressCont 0470           __size_of_LED_StateNight_OnKeyPressCont 002C  
                  _LED_StateNight_OnKeyPressCont 0444                                     _EEPROM_Write 0BEB  
                                     __pbssBANK0 006F                                       __pbssBANK1 00A0  
                                     __pbssBANK2 0120                                       __pbssBANK4 0220  
                                     __pbssBANK5 02A0                             __end_of_EUSART_Write 0DA4  
                               ??_RTC_Initialize 0020                                 ?_PWM5_Initialize 0070  
                                ?_BLE_DecodeData 0070                      __size_of_EEPROM_WriteBuffer 0014  
                   _PWM2_LoadDutyValue$intlevel0 066F                   __size_of_LED_UpdateNightBright 0028  
                  __end_of_LED_UpdateNightBright 0E98                           __end_of_LED_TurnOnRamp 0EC2  
               __size_ofi1_LED_UpdateNightBright 0038                             ??_PWM1_LoadDutyValue 0022  
                           ?i1_LED_IndicateNight 0070                                       ??_KEY_Read 0070  
                                     ??_KEY_Scan 007C                                       __pmaintext 0C5D  
                  i1PWM3_LoadDutyValue@dutyValue 0070                                          ?___bmul 0020  
                          ?_LED_UpdateBrightRamp 0070                                          ?___lmul 0020  
                                        ?___wmul 0023                                       ??_TMR0_ISR 0077  
      __end_of_LED_StateOffAction_OnKeyPressCont 0526       __size_of_LED_StateOffAction_OnKeyPressCont 0009  
            ??_LED_StateOffAction_OnKeyPressCont 0076               ?_LED_StateOffAction_OnKeyPressCont 0070  
              _LED_StateOffAction_OnKeyPressCont 051D                                       ??_TMR2_ISR 007D  
 __end_of_LED_StateNightAction_OnKeyStateChanged 0444  __size_of_LED_StateNightAction_OnKeyStateChanged 0014  
       ??_LED_StateNightAction_OnKeyStateChanged 007A          ?_LED_StateNightAction_OnKeyStateChanged 0078  
         _LED_StateNightAction_OnKeyStateChanged 0430                     _PWM5_LoadDutyValue$intlevel0 06BF  
                                     __pintentry 0404                                          _CCP1CON 0293  
                                        _CCP2CON 0297                                          _CCP3CON 0313  
                                        _CCP4CON 0317                            ?i1_PWM2_LoadDutyValue 0070  
                     __size_of_RTC_IsSecondReady 0006                                   ___lmul@product 0028  
                      __size_of_BLE_StartReceive 000F                          __end_of_LED_IndicateBle 0DC3  
                        __end_of_LED_IndicateDay 0E56                          __end_of_LED_IndicateOff 0EC4  
                         __end_of_PIN_Initialize 16B0                        TMR2_InterruptCallback@cnt 00B6  
                              Util_Decrease@psrc 0020                           __end_of_BLE_Initialize 176E  
                                ?_LED_StartFlash 0070                    __size_ofi1_PWM4_LoadDutyValue 000D  
                             _PWM5_LoadDutyValue 06BC                                          _SP1BRGH 019C  
                                        _SP1BRGL 019B                    ?_LED_Action_OnKeyStateChanged 007A  
                                        _OSCCON1 0919                                          _OSCCON3 091B  
                       ?_LED_UpdateDayRiseStatus 0070                                          _NVMADRH 0892  
                                        _NVMADRL 0891                                          _OSCTUNE 091E  
                                        _NVMDATL 0893                           __end_of_BLE_SendOTAAck 0D47  
                                        _NVMCON1 0895                                          _NVMCON2 0896  
                                        _PWM5DCH 0618                                          _PWM5DCL 0617  
                                        _PWM5CON 0619                          ??_LED_PrepareToSavePara 0020  
           __end_of_LED_StateBle_OnKeyPressShort 05AB            __size_of_LED_StateBle_OnKeyPressShort 0013  
                   _LED_StateBle_OnKeyPressShort 0598                                          _PPSLOCK 0E0F  
                     __end_of_LED_ActionOnSecond 083A                            ??_LED_FindDeviceFlash 0027  
                               ?_TMR2_StartTimer 0070                                          _RTC_Run 0758  
                        __end_ofi1_LED_UpdatePWM 05C2                              ?_PWM5_LoadDutyValue 0020  
                                  LED_AutoRun@ct 0069                                    LED_AutoRun@dt 0061  
                                  LED_AutoRun@et 0067                     __end_ofi1_PWM3_LoadDutyValue 0717  
                                  LED_AutoRun@st 006B                                    LED_AutoRun@tr 0056  
                    __size_of_LED_ManualDecrease 001F                                  ?_LED_TurnOnRamp 0070  
            __end_ofi1_LED_UpdateNightRiseStatus 0503                      i1_LED_UpdateNightRiseStatus 04EF  
                          ??i1_LED_IndicateNight 0070                                    LED_InitPara@i 002B  
                                  LED_InitPara@j 002A                    __size_of_LED_SetManualBrights 003B  
                        LED_SetManualBrights@val 0023                                  __size_of___bmul 000C  
                                __size_of___lmul 0025                      __size_of_LED_ManualIncrease 001F  
                       __size_of_BLE_StopReceive 000A                                          ___lldiv 0AE1  
                                __size_of___wmul 0015                                          ___lwdiv 0869  
                                        ___lwmod 07BA                             ??_PWM5_LoadDutyValue 0022  
                                        _nRcvIdx 007D                                          __ptext1 1590  
                                        __ptext2 15C3                                          __ptext3 15B3  
                                        __ptext4 15AB                                          __ptext5 15BB  
                                        __ptext6 0FB6                                          __ptext7 0FB3  
                                        __ptext8 1649                                          __ptext9 16E3  
                                ?_PIN_Initialize 0070                                  ?_BLE_Initialize 0070  
                          _OSCILLATOR_Initialize 165C                                        _T2CONbits 001F  
                      __size_of_BLE_StopTransmit 000A                        __size_of_registerCallback 001B  
                                ?_BLE_SendOTAAck 0070                                    LED_SetCycle@i 0023  
                     __size_of_SYSTEM_Initialize 0013                                          clrloop0 1486  
                                      _LED_SetOn 0DFA                    ?_LED_StateBle_OnKeyPressShort 0070  
                           end_of_initialization 0C5A                                      _gLedRunPara 00B8  
                              ?_LED_StartPreview 0070                               _RTC_SetCurrentTime 0F88  
                                  ??_EEPROM_Read 0022                                          init_ram 0802  
                    ??_TMR0_SetInterruptCallback 0022                               ??_LED_StartPreview 0020  
                                        initloop 0803                                  _EEPROM_ReadByte 1550  
                           __size_of_RTC_GetHour 0002                   ?_LED_StateNight_OnKeyPressCont 0070  
                              _EUSART_Initialize 16ED                                    ??_BLE_SendCMD 0023  
                                  ??_BLE_Receive 0071                                  ___lldiv@divisor 002C  
                   ?_LED_StateNight_OnKeyRelease 0070                            __end_of_RTC_GetMinute 0B25  
                          __end_of_RTC_GetSecond 0B28                                  ___lldiv@counter 0038  
                         ??_LED_UpdateBrightRamp 0075                                        _MONTH_DAY 0157  
                            ?_RTC_SetCurrentTime 0070                               ?_EUSART_Initialize 0070  
                    __size_of_BLE_SendDeviceData 003B                     ?_LED_StateDay_OnKeyPressCont 0070  
                         ??i1_PWM2_LoadDutyValue 0072                      __size_of_PWM4_LoadDutyValue 0014  
                                   __pstringtext 1800                                LED_InitStatus@sta 0026  
                                   KEY_Read@Cont 00B4                            __size_of_LED_InitPara 00B9  
                            ??_EUSART_Initialize 0020                              LED_AutoRun@duration 005F  
                               ?_LED_IndicateBle 0070                            __size_of_LED_ReadPara 0008  
                               ?_LED_IndicateDay 0070                                 ?_LED_IndicateOff 0070  
                __end_of_LED_UpdateDayRiseStatus 0B44                          ??_LED_SetPreviewBrights 0025  
        LED_StateBleAction_OnKeyStateChanged@key 0078                                ?_EEPROM_WriteByte 0020  
                          __size_of_LED_SetCycle 001D                            __size_of_LED_SavePara 0010  
                             ??_EEPROM_WriteByte 0023                                _fnReceiveCallback 00AB  
                               Util_Increase@max 0023                             ??_RTC_SetCurrentTime 0020  
                               LED_SetCycle@pbuf 0022                TMR0_SetInterruptCallback@callback 0020  
                          __size_of_EUSART_Write 0022                                  _LED_StopPreview 0FFC  
                          BLE_SendDeviceData@len 0021                      EEPROM_WriteByte@GIEBitValue 0023  
                          BLE_SendDeviceData@xor 0022                    LED_StateBle_OnKeyPressShort@i 0075  
                                     ?_LED_SetOn 0070               __size_ofi1_LED_UpdateDayRiseStatus 0014  
                               ?i1_LED_UpdatePWM 0070                   ??_LED_Action_OnKeyStateChanged 007C  
                               ??_LED_InitStatus 0026                       ?i1_LED_UpdateDayRiseStatus 0070  
                                      _RXPPSbits 0E24               __size_of_TMR2_SetInterruptCallback 0008  
                      __end_of_EUSART_Initialize 1701                       ?_TMR2_SetInterruptCallback 0020  
                              _PWM_LoadDutyValue 00D1                                 ??_LED_Initialize 002C  
                                    _CCP1CONbits 0293                          i1_LED_UpdateNightBright 04B7  
                                    _CCP2CONbits 0297                      __end_of_LED_UpdateDayBright 0E70  
                                    _CCP3CONbits 0313                                  _LED_TurnOffRamp 0E49  
                                    _CCP4CONbits 0317                       __end_of_PWM3_LoadDutyValue 0694  
                                LED_AutoRun@dbrt 005E                            __end_of_Util_Decrease 0EEB  
                                   _LED_InitPara 088E                         __size_of_PWM1_Initialize 000A  
                                   _LED_ReadPara 0B28                            LED_ManualIncrease@chn 002A  
                               LED_SetCustom@idx 0028                              __end_of_EEPROM_Read 1550  
                               ??_EUSART_RCV_ISR 0071                    ??_LED_StateNight_OnKeyRelease 0070  
                              __size_of_KEY_Read 000E                                __size_of_KEY_Scan 0064  
                                   _LED_SetCycle 0F30                                     _LED_SavePara 0BC7  
                                 __end_of___bmul 0ABC                    ??_LED_StateDay_OnKeyPressCont 0076  
                                 __end_of___lmul 0AE1                    __size_ofi1_PWM1_LoadDutyValue 000D  
                            __end_of_BLE_SendCMD 17BE                              __end_of_BLE_Receive 14BE  
                                 __end_of___wmul 0AB0                                 _BLE_StartReceive 0F9A  
                      _TMR0_SetInterruptCallback 15B3                                     _EUSART_Write 0D82  
                              __size_of_TMR0_ISR 000C                                __size_of_TMR2_ISR 000C  
                          __end_of_Util_Increase 0F30                               _PWM2_LoadDutyValue 066C  
                         ?_OSCILLATOR_Initialize 0070                             i1_PWM3_LoadDutyValue 070A  
                               BLE_SendCMD@F8112 00E3                                ??_BLE_StopReceive 0020  
                     __end_of_BLE_ReadyToReceive 0DE9                                    ??_LED_AutoRun 0039  
                                    __end_ofPL10 0B86                                      __end_ofPL20 0BA8  
                                    __end_ofPL12 0B8E                                      __end_ofPL30 0BB1  
                                    __end_ofPL22 05F0                                      __end_ofPL14 0B96  
                                    __end_ofPL40 05F8                                      __end_ofPL32 0734  
                                    __end_ofPL24 0FBF                                      __end_ofPL16 0B9E  
                                    __end_ofPL50 060E                                      __end_ofPL42 0600  
                                    __end_ofPL34 0BBA                                      __end_ofPL26 0FC6  
                                    __end_ofPL18 05E7                                      __end_ofPL60 074E  
                                    __end_ofPL52 0FD3                                      __end_ofPL44 0607  
                                    __end_ofPL36 073C                                      __end_ofPL28 072C  
                               ??_BLE_CheckDevID 002F                                      __end_ofPL70 0753  
                                    __end_ofPL62 0614                                      __end_ofPL54 0749  
                                    __end_ofPL46 0BC2                                      __end_ofPL38 0744  
                                    __end_ofPL80 0FE8                                      __end_ofPL72 0FDE  
                                    __end_ofPL64 0619                                      __end_ofPL56 0FD9  
                                    __end_ofPL48 0FCC                                      __end_ofPL82 07DF  
                                    __end_ofPL74 0758                                      __end_ofPL66 061F  
                                    __end_ofPL58 1800                                      __end_ofPL76 0BC7  
                                    __end_ofPL68 1712                                      __end_ofPL78 0FE3  
                            start_initialization 0C14                         __size_of_PWM2_Initialize 0009  
                       __size_of_TMR0_Initialize 000B                              ?_PWM2_LoadDutyValue 0020  
                               ??_BLE_DecodeData 002B                                    ??_LED_SetAuto 0021  
                          i1_LED_UpdateDayBright 0526                                    ??_LED_Preview 0020  
                        __end_of_EEPROM_ReadByte 155E                                 BLE_SendCMD@index 002E  
                                  ??_LED_TurnOff 0024                                    ??_LED_TurnMax 0024  
      LED_StateNightAction_OnKeyStateChanged@key 0078                __end_ofi1_LED_UpdateDayRiseStatus 055B  
              __end_of_TMR2_SetInterruptCallback 15CB                   ??_LED_StateBle_OnKeyPressShort 0075  
                           ??_PWM2_LoadDutyValue 0022                            LED_SetManualBrights@i 0025  
                       __size_of_PWM3_Initialize 000B                     __size_of_BLE_ReceiveComplete 0007  
                                       ??___bmul 0021                      PWM2_LoadDutyValue@dutyValue 0020  
                                       ??___lmul 0028                                         ??___wmul 0027  
                                    _CCPTMRSbits 029F                                 ??_LED_StartFlash 0020  
                                    __pdataBANK1 00D1                                      __pdataBANK2 0157  
                                    __pdataBANK3 01A0                            __end_of_LED_SetCustom 0869  
                          ?i1_PWM3_LoadDutyValue 0070                          __end_of_LED_StopPreview 1000  
                                    _fnKeyAction 00AD                              BLE_SendDeviceData@i 0023  
         __end_of_LED_StateNight_OnKeyPressShort 05C8          __size_of_LED_StateNight_OnKeyPressShort 0003  
                 _LED_StateNight_OnKeyPressShort 05C5                      __end_of_EUSART_Transmit_ISR 1536  
                               _BLE_StopTransmit 0DB5                      PWM5_LoadDutyValue@dutyValue 0020  
                  __size_ofi1_PWM5_LoadDutyValue 0017                                      __pbssCOMMON 007D  
           __size_of_LED_StateNight_OnKeyRelease 0002                                        ___latbits 0002  
                                  __pcstackBANK0 0020                         __size_of_PWM4_Initialize 000B  
                       __size_of_TMR2_Initialize 000A                                 _registerCallback 1590  
           __size_of_LED_StateDay_OnKeyPressCont 002C               __size_of_EUSART_SetReceiveCallback 0008  
                          __end_of_LED_UpdatePWM 0EB0                                 ??_LED_TurnOnRamp 0020  
                     __end_of_EEPROM_WriteBuffer 0BEB                       ?_EUSART_SetReceiveCallback 0020  
                        __end_of_LED_TurnOffRamp 0E54                                         ?_RTC_Run 0070  
                 __size_of_LED_PrepareToSavePara 0005                                      ??_LED_SetOn 0021  
                  __end_of_LED_PrepareToSavePara 0DB5                        ??i1_LED_UpdateNightBright 0075  
                       i1LED_UpdateNightBright@i 0075                              __end_of_LED_AutoRun 0A9B  
                     __size_of_EUSART_Initialize 0014                    i1PWM1_LoadDutyValue@dutyValue 0070  
                            __end_of_LED_SetAuto 0E23                     __end_ofi1_PWM4_LoadDutyValue 0724  
                                    _EEPROM_Read 154A          LED_StateOffAction_OnKeyStateChanged@key 0078  
                                      __pnvBANK1 00EA                            EEPROM_ReadBuffer@addr 0026  
                            __end_of_LED_Preview 0B4B                     _PWM3_LoadDutyValue$intlevel0 0683  
                       __size_of_TMR0_StartTimer 0003                LED_Action_OnKeyStateChanged@state 007B  
      LED_StateDayAction_OnKeyStateChanged@state 0079                 __size_of_LED_UpdateDayRiseStatus 0014  
                          EEPROM_ReadBuffer@pbuf 0023                            _LED_UpdateNightBright 0E70  
                                    _BLE_SendCMD 176E                      __size_of_PWM1_LoadDutyValue 0014  
                             _LED_ActionOnSecond 0821                                      _BLE_Receive 14AF  
                               ___lwdiv@dividend 0022                              __end_of_LED_TurnMax 066C  
                            __end_of_LED_TurnOff 064A                         __size_of_PWM5_Initialize 000A  
                               ??_PIN_Initialize 0020                                        __ptext100 0516  
                                      __ptext101 051D                                        __ptext110 04EF  
                                      __ptext102 051C                                        __ptext111 04B7  
                                      __ptext103 05CA                                        __ptext120 06F0  
                                      __ptext112 04B6                                        __ptext104 05C5  
                                      __ptext121 06D9                                        __ptext113 0484  
                                      __ptext105 05C8                                        __ptext130 14AF  
                                      __ptext122 05C2                                        __ptext114 0526  
                                      __ptext106 0444                                        __ptext123 163B  
                                      __ptext115 0598                                        __ptext107 05C3  
                                      __ptext124 148B                                        __ptext116 05AB  
                                      __ptext108 0547                                        __ptext125 0758  
                                      __ptext117 0717                                        __ptext109 04B0  
                                      __ptext126 079E                                        __ptext118 070A  
                                      __ptext127 07BA                                        __ptext119 06FD  
                                      __ptext128 151F                                        __ptext129 1509  
                               ??_BLE_Initialize 0045                                         ?___lldiv 002C  
                  i1PWM4_LoadDutyValue@dutyValue 0070                                         ?___lwdiv 0020  
                                       ?___lwmod 0070                          __size_of_RTC_IsLeapYear 001C  
                            ?_LED_ActionOnSecond 0070                                _led_state_actions 00DB  
                              ??_PWM1_Initialize 0020                     ??_INTERRUPT_InterruptManager 007D  
     __end_of_LED_StateOffAction_OnKeyPressShort 051C      __size_of_LED_StateOffAction_OnKeyPressShort 0006  
           ??_LED_StateOffAction_OnKeyPressShort 0076              ?_LED_StateOffAction_OnKeyPressShort 0070  
             _LED_StateOffAction_OnKeyPressShort 0516                                        __pswtext1 07DF  
                               ??_BLE_SendOTAAck 0021                                         _BAUD1CON 019F  
                         RTC_SetCurrentTime@time 0021                      __end_of_LED_FindDeviceFlash 0632  
                   __end_of_LED_SetManualBrights 0F88                               RTC_IsLeapYear@year 0075  
                         LED_SetPreviewBrights@i 002A                           ?i1_LED_UpdateDayBright 0070  
                             Util_Decrease@delta 0022                                 ___lwdiv@quotient 0024  
                               KEY_Read@ReadData 0070                                 ?_EEPROM_ReadByte 0020  
                    __end_ofi1_LED_IndicateNight 04B7                             ??_LED_ActionOnSecond 006F  
                     __end_of_LED_ManualDecrease 0DE2                           LED_FindDeviceFlash@tog 00B2  
             __size_of_LED_StateDay_OnKeyRelease 0002                __end_of_EUSART_SetReceiveCallback 15C3  
                     ?_LED_StateDay_OnKeyRelease 0070                                ??_TMR0_Initialize 0020  
                              ??_PWM2_Initialize 0020                                   ___wmul@product 0027  
                                       _LATAbits 010C                                         _LATBbits 010D  
                                      clear_ram0 1485                                         _PIE0bits 0090  
                                       _PIE1bits 0091                         __size_of_TMR2_StartTimer 0002  
                                       _KEY_Read 163B                                         _KEY_Scan 15D7  
            __size_of_INTERRUPT_InterruptManager 002A                                         _PIR0bits 0010  
                     __end_of_LED_ManualIncrease 0F0A                                         _PIR1bits 0011  
                       ??_TMR2_InterruptCallback 007D                          __size_of_RTC_Initialize 000A  
                                       _TMR0_ISR 148B                                         _TMR2_ISR 1497  
                      __size_of_LED_StartPreview 0005                                 EUSART_Write@byte 0020  
                         ??i1_PWM3_LoadDutyValue 0072                      __size_of_PWM5_LoadDutyValue 001D  
                                      _prvStatus 00B1                                  LED_SetCycle@len 0021  
                              ??_PWM3_Initialize 0020                                ___wmul@multiplier 0023  
                               ?_LED_StopPreview 0070                   __size_of_LED_SetPreviewBrights 0032  
                  __end_of_LED_SetPreviewBrights 1590                                      _LED_AutoRun 0947  
                                 LED_AutoRun@sec 0065                                   LED_AutoRun@val 0042  
                                    _LED_SetAuto 0E0E                                ___lmul@multiplier 0020  
                               ?_LED_TurnOffRamp 0070                                      _LED_Preview 0B44  
                       LED_SetPreviewBrights@val 0027                                 __size_of_RTC_Run 0046  
                                  ??_RTC_GetHour 0020                         __end_of_BLE_StartReceive 0FA9  
                    ??i1_LED_UpdateDayRiseStatus 0070                                      _LED_TurnOff 0632  
                                    _LED_TurnMax 064A                        __size_of_EEPROM_WriteByte 0021  
                              ??_TMR2_Initialize 0020                                ??_PWM4_Initialize 0020  
              __end_of_LED_StateDay_OnKeyRelease 05C5                      ??_TMR2_SetInterruptCallback 0022  
                         ?_LED_UpdateNightBright 0070                       __end_of_BLE_SendDeviceData 0D82  
                       LED_SetManualBrights@pbuf 0022                       __end_of_PWM4_LoadDutyValue 06BC  
                                _BLE_StopReceive 0FA9                                         _gLedPara 0120  
                  __size_of_LED_UpdateBrightRamp 003D        LED_StateOffAction_OnKeyStateChanged@state 0079  
                        ??_OSCILLATOR_Initialize 0020                                ??_TMR0_StartTimer 0020  
                               __size_of___lldiv 003F                                 __size_of___lwdiv 0025  
                               __size_of___lwmod 0020                    __size_ofi1_PWM2_LoadDutyValue 000D  
          KEY_SetOnStateChangedCallback@callback 0020                                ??_PWM5_Initialize 0020  
                ??_KEY_SetOnStateChangedCallback 0022                               _PWM3_LoadDutyValue 0680  
                              i1_LED_IndicateBle 05C8                                i1_LED_IndicateDay 051C  
                              i1_LED_IndicateOff 05C2                             i1_PWM4_LoadDutyValue 0717  
                                     _T0CON0bits 0017                                _EEPROM_ReadBuffer 1536  
                           EEPROM_ReadBuffer@len 0024                               ?i1_LED_IndicateBle 0070  
                             ?i1_LED_IndicateDay 0070                               ?i1_LED_IndicateOff 0070  
                                ___lwdiv@divisor 0020                      __size_of_RTC_SetCurrentTime 0012  
                         __size_of_RTC_GetMinute 0003                           __size_of_RTC_GetSecond 0003  
                                ___lwdiv@counter 0026                              _BLE_ReceiveComplete 0DE9  
                             ?_EEPROM_ReadBuffer 0023                         __size_of_LED_IndicateBle 0004  
                       __size_of_LED_IndicateDay 0002                                         __ptext10 1701  
                                       __ptext11 16D9                                         __ptext20 0FE8  
                                       __ptext12 16CE                                         __ptext21 0DF0  
                                       __ptext13 16C3                                         __ptext30 0BC7  
                                       __ptext22 088E                                         __ptext14 16BA  
                                       __ptext31 0BD7                                         __ptext23 14E0  
                                       __ptext15 16B0                                         __ptext40 0E58  
                                       __ptext32 0BEB                                         __ptext24 0B30  
                                       __ptext16 1666                                         __ptext41 0EC2  
                                       __ptext33 0BF3                                         __ptext25 0B28  
                                       __ptext17 165C                                         __ptext50 0B20  
                                       __ptext42 0E56                                         __ptext34 0B44  
                                       __ptext26 1536                                         __ptext18 16ED  
                                       __ptext51 0FA9                                         __ptext43 0E54  
                                       __ptext35 061F                                         __ptext27 154A  
                                       __ptext19 0DF4                                         __ptext60 0FFC  
                                       __ptext52 0F9A                                         __ptext44 0947  
                                       __ptext36 0632                                         __ptext28 1550  
                                       __ptext61 0FF7                                         __ptext53 0DE9  
                                       __ptext45 0A9B                                         __ptext37 064A  
                                       __ptext29 0821                                         __ptext70 0DFA  
                                       __ptext62 0FF2                                         __ptext54 0DE2  
                                       __ptext46 0ABC                                         __ptext38 0E23  
                                       __ptext71 0F4D                                         __ptext63 155E  
                                       __ptext55 1712                                         __ptext47 0AE1  
                                       __ptext39 0E70                                         __ptext80 0EEB  
                                       __ptext72 0F30                                         __ptext64 0E98  
                                       __ptext56 17BE                                         __ptext48 0B25  
                                       __ptext81 0F0A                                         __ptext73 083A  
                                       __ptext65 06A8                                         __ptext57 176E  
                                       __ptext49 0B22                                         __ptext82 0DC3  
                                       __ptext74 0869                                         __ptext66 0694  
                                       __ptext58 0C8A                              ?_PWM3_LoadDutyValue 0020  
                                       __ptext91 1497                                         __ptext83 0EC4  
                                       __ptext75 0AB0                                         __ptext67 0680  
                                       __ptext59 0F88                                         __ptext92 15CB  
                                       __ptext84 0DBF                                         __ptext76 0E0E  
                                       __ptext68 066C                                         __ptext93 055B  
                                       __ptext85 0D35                                         __ptext77 0EB0  
                                       __ptext69 06BC                                         __ptext94 15D7  
                                       __ptext86 0D47                                         __ptext78 0E49  
                                       __ptext95 14BE                                         __ptext87 0D82  
                                       __ptext79 0DB0                                         __ptext96 14F4  
                                       __ptext88 0DB5                                         __ptext97 0430  
                                       __ptext89 0DA4                                         __ptext98 0470  
                                       __ptext99 0503                         __size_of_LED_IndicateOff 0002  
                   __end_ofi1_PWM1_LoadDutyValue 06FD                                    ?_EEPROM_Write 0024  
                            ??i1_LED_IndicateBle 0070                              ??i1_LED_IndicateDay 0070  
                            ??i1_LED_IndicateOff 0070                                EUSART_RCV_ISR@rcv 0071  
                        LED_ManualDecrease@delta 0029                              ??_EEPROM_ReadBuffer 0025  
                             _BLE_ReadyToReceive 0DE2                                    __size_of_main 002D  
                        _LED_UpdateDayRiseStatus 0B30                         __end_of_BLE_StopTransmit 0DBF  
                       __size_ofi1_LED_UpdatePWM 0017                             _LED_SetManualBrights 0F4D  
                            __end_of_RTC_GetHour 0B22                                       _RC1STAbits 019D  
                                     _RB4PPSbits 0E9C                             ?_BLE_ReceiveComplete 0070  
                       __end_of_registerCallback 15AB                              ?_BLE_ReadyToReceive 0070  
                           ??_PWM3_LoadDutyValue 0022             __end_of_LED_StateDay_OnKeyPressShort 04B6  
          __size_of_LED_StateDay_OnKeyPressShort 0006                     _LED_StateDay_OnKeyPressShort 04B0  
                                     _RC3PPSbits 0EA3                                       _RC4PPSbits 0EA4  
                                       _txRemain 00EA                  __size_of_TMR2_InterruptCallback 000C  
                                       int$flags 007E                                       _RC5PPSbits 0EA5  
                   __size_of_LED_UpdateDayBright 0018                                       _RC6PPSbits 0EA6  
                                 _RTC_IsLeapYear 079E                                ??_TMR2_StartTimer 0020  
                                     _RC7PPSbits 0EA7               __end_of_INTERRUPT_InterruptManager 042E  
                     _INTERRUPT_InterruptManager 0404                        i1_LED_UpdateDayRiseStatus 0547  
                      __end_ofi1_LED_IndicateBle 05CA                        __end_ofi1_LED_IndicateDay 051D  
                               KEY_Scan@rptCount 00B3                        __end_ofi1_LED_IndicateOff 05C3  
                                 LED_SetCustom@i 0029                        _TMR2_SetInterruptCallback 15C3  
                      __end_of_EEPROM_ReadBuffer 154A                            ?i1_PWM4_LoadDutyValue 0070  
                                     _INTCONbits 000B                                      _NVMCON1bits 0895  
                           ??_BLE_ReadyToReceive 0020                           __size_of_Util_Decrease 0027  
                                 ??_EEPROM_Write 0025                      ??_EUSART_SetReceiveCallback 0022  
                                       intlevel1 0000                                 ___lwmod@dividend 0072  
                                   ?_EEPROM_Read 0070                                 ___lldiv@dividend 0030  
                        __end_of_BLE_StopReceive 0FB3                 ??_LED_StateNight_OnKeyPressShort 0070  
                ?_LED_StateNight_OnKeyPressShort 0070                           __size_of_Util_Increase 0026  
                   __end_ofi1_PWM5_LoadDutyValue 06F0               __size_of_LED_UpdateNightRiseStatus 0014  
            __end_of_LED_StateNight_OnKeyRelease 05CC                      _LED_StateNight_OnKeyRelease 05CA  
                                    _PPSLOCKbits 0E0F                                  _PWM1_Initialize 16B0  
                   ?i1_LED_UpdateNightRiseStatus 0070                       ?_LED_UpdateNightRiseStatus 0070  
                            EEPROM_ReadByte@addr 0020                                     ?_BLE_SendCMD 0021  
                          ?_LED_SetManualBrights 0070                                     ?_BLE_Receive 0070  
                         LED_UpdateNightBright@i 0025                                  KEY_Scan@lastKey 006F  
                              _LED_IndicateNight 0E56                            ??_BLE_ReceiveComplete 0020  
            __end_of_LED_StateDay_OnKeyPressCont 04B0                      _LED_StateDay_OnKeyPressCont 0484  
                    __size_of_PWM2_LoadDutyValue 0014                                    _RTC_GetMinute 0B22  
                                  _RTC_GetSecond 0B25                               _EEPROM_WriteBuffer 0BD7  
              EUSART_SetReceiveCallback@callback 0020                           __end_of_RTC_IsLeapYear 07BA  
                         i1LED_UpdateDayBright@i 0075                                   _RTC_Initialize 0FE8  
                        __size_of_LED_InitStatus 0026                               ?_LED_IndicateNight 0070  
                               _LED_StartPreview 0FF7                    ?_LED_StateDay_OnKeyPressShort 0070  
                    PWM3_LoadDutyValue@dutyValue 0020                          __size_of_LED_Initialize 0004  
                            ?_EEPROM_WriteBuffer 0026                              ??_LED_IndicateNight 0020  
      LED_StateBleAction_OnKeyStateChanged@state 0079                          ??i1_LED_UpdateDayBright 0075  
                             EEPROM_ReadBuffer@i 0027                                 ___lldiv@quotient 0034  
                                ___lwmod@divisor 0070                          __size_of_EUSART_RCV_ISR 0016  
                                _TMR0_Initialize 1701                                  _PWM2_Initialize 16BA  
                                ___lwmod@counter 0074                                   KEY_Scan@keyNum 007C  
          __end_of_KEY_SetOnStateChangedCallback 15B3           __size_of_KEY_SetOnStateChangedCallback 0008  
                  _KEY_SetOnStateChangedCallback 15AB                           _TMR2_InterruptCallback 15CB  
                LED_Action_OnKeyStateChanged@key 007A     __end_of_LED_StateOffAction_OnKeyStateChanged 0516  
  __size_of_LED_StateOffAction_OnKeyStateChanged 0013           ??_LED_StateOffAction_OnKeyStateChanged 007A  
          ?_LED_StateOffAction_OnKeyStateChanged 0078             _LED_StateOffAction_OnKeyStateChanged 0503  
   __end_of_LED_StateBleAction_OnKeyStateChanged 1509    __size_of_LED_StateBleAction_OnKeyStateChanged 0015  
         ??_LED_StateBleAction_OnKeyStateChanged 007A            ?_LED_StateBleAction_OnKeyStateChanged 0078  
           _LED_StateBleAction_OnKeyStateChanged 14F4                     _PWM1_LoadDutyValue$intlevel0 0697  
                      ??_LED_UpdateDayRiseStatus 0020                     __size_of_EUSART_Transmit_ISR 0017  
                           ??_EEPROM_WriteBuffer 0028                                   LED_UpdatePWM@i 0024  
                                    _RTC_GetHour 0B20                      ??_LED_StateDay_OnKeyRelease 0070  
                               _EEPROM_WriteByte 0BF3                                      _PWMTMRSbits 061F  
                          _LED_PrepareToSavePara 0DB0                          __size_of_BLE_CheckDevID 003C  
                     __end_of_PWM1_LoadDutyValue 06A8                           __size_of_LED_SetCustom 002F  
                              ??_LED_IndicateBle 0020                                ??_LED_IndicateDay 0020  
                                   _gCurrentTime 00A0                               Util_Increase@delta 0022  
                              ??_LED_IndicateOff 0020                        __end_of_LED_IndicateNight 0E58  
                                EEPROM_Read@addr 0022                          __size_of_BLE_DecodeData 00AB  
                  i1PWM2_LoadDutyValue@dutyValue 0070                           __end_of_RTC_Initialize 0FF2  
                                _PWM3_Initialize 16C3                                Util_Increase@psrc 0020  
                                 ?_RTC_GetMinute 0070                                   ?_RTC_GetSecond 0070  
              __end_of_LED_UpdateNightRiseStatus 14F4                     _PWM4_LoadDutyValue$intlevel0 06AB  
                                  _Util_Decrease 0EC4                    ??i1_LED_UpdateNightRiseStatus 0070  
